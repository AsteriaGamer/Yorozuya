// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "std___Container_base.hpp"


START_ATF_NAMESPACE
    namespace std
    {
        struct _Iterator_base
        {
            struct _Container_base *_Mycont;
			struct _Iterator_base *_Mynextiter;
        public:
            void _Clean_up_iter_debug()
            {
                using org_ptr = void (WINAPIV*)(struct _Iterator_base*);
                (org_ptr(0x1401234a0L))(this);
            };
            _Iterator_base(struct _Iterator_base* _Right)
            {
                using org_ptr = void (WINAPIV*)(struct _Iterator_base*, struct _Iterator_base*);
                (org_ptr(0x140123b90L))(this, _Right);
            };
            void ctor__Iterator_base(struct _Iterator_base* _Right)
            {
                using org_ptr = void (WINAPIV*)(struct _Iterator_base*, struct _Iterator_base*);
                (org_ptr(0x140123b90L))(this, _Right);
            };
            _Iterator_base()
            {
                using org_ptr = void (WINAPIV*)(struct _Iterator_base*);
                (org_ptr(0x140123a90L))(this);
            };
            void ctor__Iterator_base()
            {
                using org_ptr = void (WINAPIV*)(struct _Iterator_base*);
                (org_ptr(0x140123a90L))(this);
            };
            ~_Iterator_base()
            {
                using org_ptr = void (WINAPIV*)(struct _Iterator_base*);
                (org_ptr(0x140123420L))(this);
            };
            void dtor__Iterator_base()
            {
                using org_ptr = void (WINAPIV*)(struct _Iterator_base*);
                (org_ptr(0x140123420L))(this);
            };
        };
    }; // end namespace std
END_ATF_NAMESPACE
