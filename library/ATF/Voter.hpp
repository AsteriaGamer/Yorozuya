// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CPlayer.hpp"
#include "Cmd.hpp"
#include "ElectProcessor.hpp"
#include "_pt_notify_vote_score_zocl.hpp"
#include "_pt_trans_votepaper_zocl.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 2)
    struct  Voter : ElectProcessor
    {
        _pt_trans_votepaper_zocl _kCandidateInfo[3];
        _pt_notify_vote_score_zocl _kVoteScoreInfo[3];
    public:
        int Doit(Cmd eCmd, struct CPlayer* pOne, char* pdata)
        {
            using org_ptr = int (WINAPIV*)(struct Voter*, Cmd, struct CPlayer*, char*);
            return (org_ptr(0x1402bea50L))(this, eCmd, pOne, pdata);
        };
        bool Initialize()
        {
            using org_ptr = bool (WINAPIV*)(struct Voter*);
            return (org_ptr(0x1402be940L))(this);
        };
        bool IsRegistedVotePaper(char byRace, char* pwszName)
        {
            using org_ptr = bool (WINAPIV*)(struct Voter*, char, char*);
            return (org_ptr(0x1402bfa90L))(this, byRace, pwszName);
        };
        Voter()
			: ElectProcessor(ElectProcessor::ProcessorType::_eVoter)
        {
            using org_ptr = void (WINAPIV*)(struct Voter*);
            (org_ptr(0x1402be860L))(this);
        };
        void ctor_Voter()
        {
            using org_ptr = void (WINAPIV*)(struct Voter*);
            (org_ptr(0x1402be860L))(this);
        };
        void _MakeVotePaper()
        {
            using org_ptr = void (WINAPIV*)(struct Voter*);
            (org_ptr(0x1402bf610L))(this);
        };
        int _SendVotePaper(struct CPlayer* pOne)
        {
            using org_ptr = int (WINAPIV*)(struct Voter*, struct CPlayer*);
            return (org_ptr(0x1402c0140L))(this, pOne);
        };
        void _SendVotePaperAll()
        {
            using org_ptr = void (WINAPIV*)(struct Voter*);
            (org_ptr(0x1402beb20L))(this);
        };
        void _SendVoteScore(struct CPlayer* pOne)
        {
            using org_ptr = void (WINAPIV*)(struct Voter*, struct CPlayer*);
            (org_ptr(0x1402bede0L))(this, pOne);
        };
        void _SendVoteScoreAll(char byRace)
        {
            using org_ptr = void (WINAPIV*)(struct Voter*, char);
            (org_ptr(0x1402beec0L))(this, byRace);
        };
        void _SetVoteScoreInfo(char byRace, char* wszName, bool bAbstention)
        {
            using org_ptr = void (WINAPIV*)(struct Voter*, char, char*, bool);
            (org_ptr(0x1402bf3d0L))(this, byRace, wszName, bAbstention);
        };
        int _Vote(struct CPlayer* pOne, char* pdata)
        {
            using org_ptr = int (WINAPIV*)(struct Voter*, struct CPlayer*, char*);
            return (org_ptr(0x1402befd0L))(this, pOne, pdata);
        };
        ~Voter()
        {
            using org_ptr = void (WINAPIV*)(struct Voter*);
            (org_ptr(0x1402c0100L))(this);
        };
        void dtor_Voter()
        {
            using org_ptr = void (WINAPIV*)(struct Voter*);
            (org_ptr(0x1402c0100L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
