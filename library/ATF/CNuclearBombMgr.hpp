// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CNuclearBomb.hpp"
#include "CNuclearBombMgrVtbl.hpp"
#include "CPlayer.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 8)
    struct CNuclearBombMgr
    {
        CNuclearBombMgrVtbl *vfptr;
        char m_szStickCode[64];
        CNuclearBomb m_Missile[3][3];
        unsigned int m_dwWarnTime;
        unsigned int m_dwAttInformTime;
        unsigned int m_dwAttStartTime;
    public:
        CNuclearBombMgr()
        {
            using org_ptr = void (WINAPIV*)(struct CNuclearBombMgr*);
            (org_ptr(0x14013a2b0L))(this);
        };
        void ctor_CNuclearBombMgr()
        {
            using org_ptr = void (WINAPIV*)(struct CNuclearBombMgr*);
            (org_ptr(0x14013a2b0L))(this);
        };
        void CheckNuclearState(struct CPlayer* pOne)
        {
            using org_ptr = void (WINAPIV*)(struct CNuclearBombMgr*, struct CPlayer*);
            (org_ptr(0x14013a850L))(this, pOne);
        };
        bool CreateMissile(struct CPlayer* pMaster, float* fPos, unsigned int WarnTime, unsigned int InformTime, unsigned int StartTime)
        {
            using org_ptr = bool (WINAPIV*)(struct CNuclearBombMgr*, struct CPlayer*, float*, unsigned int, unsigned int, unsigned int);
            return (org_ptr(0x14013b3f0L))(this, pMaster, fPos, WarnTime, InformTime, StartTime);
        };
        void Destroy()
        {
            using org_ptr = void (WINAPIV*)(struct CNuclearBombMgr*);
            (org_ptr(0x14013a460L))(this);
        };
        char GetBossType(char byRace, unsigned int dwSerial)
        {
            using org_ptr = char (WINAPIV*)(struct CNuclearBombMgr*, char, unsigned int);
            return (org_ptr(0x14013a7c0L))(this, byRace, dwSerial);
        };
        static struct CNuclearBombMgr* Instance()
        {
            using org_ptr = struct CNuclearBombMgr* (WINAPIV*)();
            return (org_ptr(0x14013a3a0L))();
        };
        bool IsPatriarch(struct CPlayer* pOne)
        {
            using org_ptr = bool (WINAPIV*)(struct CNuclearBombMgr*, struct CPlayer*);
            return (org_ptr(0x14013aad0L))(this, pOne);
        };
        bool LoadIni()
        {
            using org_ptr = bool (WINAPIV*)(struct CNuclearBombMgr*);
            return (org_ptr(0x14013a5e0L))(this);
        };
        void Loop()
        {
            using org_ptr = void (WINAPIV*)(struct CNuclearBombMgr*);
            (org_ptr(0x14013b650L))(this);
        };
        bool MissileInit()
        {
            using org_ptr = bool (WINAPIV*)(struct CNuclearBombMgr*);
            return (org_ptr(0x14013a4f0L))(this);
        };
        bool Request_EnableNuclearControl(int n, char* pMsg)
        {
            using org_ptr = bool (WINAPIV*)(struct CNuclearBombMgr*, int, char*);
            return (org_ptr(0x14013ab60L))(this, n, pMsg);
        };
        bool Request_SelectDropPosition(int n, char* pMsg)
        {
            using org_ptr = bool (WINAPIV*)(struct CNuclearBombMgr*, int, char*);
            return (org_ptr(0x14013ae80L))(this, n, pMsg);
        };
        void SendMsg_Result(int n, char byCode)
        {
            using org_ptr = void (WINAPIV*)(struct CNuclearBombMgr*, int, char);
            (org_ptr(0x14013b5b0L))(this, n, byCode);
        };
        ~CNuclearBombMgr()
        {
            using org_ptr = void (WINAPIV*)(struct CNuclearBombMgr*);
            (org_ptr(0x14013a330L))(this);
        };
        void dtor_CNuclearBombMgr()
        {
            using org_ptr = void (WINAPIV*)(struct CNuclearBombMgr*);
            (org_ptr(0x14013a330L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
