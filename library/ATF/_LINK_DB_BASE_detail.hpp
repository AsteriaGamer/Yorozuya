// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_LINK_DB_BASE_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::_LINK_DB_BASEInit2_ptr _LINK_DB_BASEInit2_next(nullptr);
        info::_LINK_DB_BASEInit2_clbk _LINK_DB_BASEInit2_user(nullptr);
        info::_LINK_DB_BASEctor__LINK_DB_BASE4_ptr _LINK_DB_BASEctor__LINK_DB_BASE4_next(nullptr);
        info::_LINK_DB_BASEctor__LINK_DB_BASE4_clbk _LINK_DB_BASEctor__LINK_DB_BASE4_user(nullptr);
        
        info::_LINK_DB_BASE___LISTInit2_ptr _LINK_DB_BASE___LISTInit2_next(nullptr);
        info::_LINK_DB_BASE___LISTInit2_clbk _LINK_DB_BASE___LISTInit2_user(nullptr);
        info::_LINK_DB_BASE___LISTctor__LIST4_ptr _LINK_DB_BASE___LISTctor__LIST4_next(nullptr);
        info::_LINK_DB_BASE___LISTctor__LIST4_clbk _LINK_DB_BASE___LISTctor__LIST4_user(nullptr);
        
        void _LINK_DB_BASEInit2_wrapper(struct _LINK_DB_BASE* _this)
        {
           _LINK_DB_BASEInit2_user(_this, _LINK_DB_BASEInit2_next);
        };
        void _LINK_DB_BASEctor__LINK_DB_BASE4_wrapper(struct _LINK_DB_BASE* _this)
        {
           _LINK_DB_BASEctor__LINK_DB_BASE4_user(_this, _LINK_DB_BASEctor__LINK_DB_BASE4_next);
        };
        
        void _LINK_DB_BASE___LISTInit2_wrapper(struct _LINK_DB_BASE::_LIST* _this)
        {
           _LINK_DB_BASE___LISTInit2_user(_this, _LINK_DB_BASE___LISTInit2_next);
        };
        void _LINK_DB_BASE___LISTctor__LIST4_wrapper(struct _LINK_DB_BASE::_LIST* _this)
        {
           _LINK_DB_BASE___LISTctor__LIST4_user(_this, _LINK_DB_BASE___LISTctor__LIST4_next);
        };
        
        hook_record _LINK_DB_BASE_functions[] = {
        {   (LPVOID)0x140075990L,
            (LPVOID *)&_LINK_DB_BASEInit2_user,
            (LPVOID *)&_LINK_DB_BASEInit2_next,
            (LPVOID)cast_pointer_function(_LINK_DB_BASEInit2_wrapper),
            (LPVOID)cast_pointer_function((void(_LINK_DB_BASE::*)())&_LINK_DB_BASE::Init) },
        {   (LPVOID)0x140075870L,
            (LPVOID *)&_LINK_DB_BASEctor__LINK_DB_BASE4_user,
            (LPVOID *)&_LINK_DB_BASEctor__LINK_DB_BASE4_next,
            (LPVOID)cast_pointer_function(_LINK_DB_BASEctor__LINK_DB_BASE4_wrapper),
            (LPVOID)cast_pointer_function((void(_LINK_DB_BASE::*)())&_LINK_DB_BASE::ctor__LINK_DB_BASE) },
        
        {   (LPVOID)0x140075930L,
            (LPVOID *)&_LINK_DB_BASE___LISTInit2_user,
            (LPVOID *)&_LINK_DB_BASE___LISTInit2_next,
            (LPVOID)cast_pointer_function(_LINK_DB_BASE___LISTInit2_wrapper),
            (LPVOID)cast_pointer_function((void(_LINK_DB_BASE::_LIST::*)())&_LINK_DB_BASE::_LIST::Init) },
        {   (LPVOID)0x1400758e0L,
            (LPVOID *)&_LINK_DB_BASE___LISTctor__LIST4_user,
            (LPVOID *)&_LINK_DB_BASE___LISTctor__LIST4_next,
            (LPVOID)cast_pointer_function(_LINK_DB_BASE___LISTctor__LIST4_wrapper),
            (LPVOID)cast_pointer_function((void(_LINK_DB_BASE::_LIST::*)())&_LINK_DB_BASE::_LIST::ctor__LIST) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
