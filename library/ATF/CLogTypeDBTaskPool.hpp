// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CLogFile.hpp"
#include "CLogTypeDBTask.hpp"
#include "CNetIndexList.hpp"
#include "std__vector.hpp"


START_ATF_NAMESPACE
    struct CLogTypeDBTaskPool
    {
        bool m_bInit;
        CNetIndexList m_kInxProc;
        CNetIndexList m_kInxEmpty;
        CNetIndexList m_kInxComplete;
        std::vector<CLogTypeDBTask *,std::allocator<CLogTypeDBTask *> > m_vecDat;
    public:
        CLogTypeDBTaskPool()
        {
            using org_ptr = void (WINAPIV*)(struct CLogTypeDBTaskPool*);
            (org_ptr(0x1402c1ea0L))(this);
        };
        void ctor_CLogTypeDBTaskPool()
        {
            using org_ptr = void (WINAPIV*)(struct CLogTypeDBTaskPool*);
            (org_ptr(0x1402c1ea0L))(this);
        };
        void Destroy()
        {
            using org_ptr = void (WINAPIV*)(struct CLogTypeDBTaskPool*);
            (org_ptr(0x1402c28d0L))(this);
        };
        struct CLogTypeDBTask* GetComplete()
        {
            using org_ptr = struct CLogTypeDBTask* (WINAPIV*)(struct CLogTypeDBTaskPool*);
            return (org_ptr(0x1402c25d0L))(this);
        };
        struct CLogTypeDBTask* GetEmpty()
        {
            using org_ptr = struct CLogTypeDBTask* (WINAPIV*)(struct CLogTypeDBTaskPool*);
            return (org_ptr(0x1402c2430L))(this);
        };
        struct CLogTypeDBTask* GetProc()
        {
            using org_ptr = struct CLogTypeDBTask* (WINAPIV*)(struct CLogTypeDBTaskPool*);
            return (org_ptr(0x1402c2510L))(this);
        };
        bool Init(unsigned int uiBuffSize, unsigned int uiMaxCnt, struct CLogFile* kLogger)
        {
            using org_ptr = bool (WINAPIV*)(struct CLogTypeDBTaskPool*, unsigned int, unsigned int, struct CLogFile*);
            return (org_ptr(0x1402c2110L))(this, uiBuffSize, uiMaxCnt, kLogger);
        };
        bool SetComplete(struct CLogTypeDBTask* pTask, struct CLogFile* kLogger)
        {
            using org_ptr = bool (WINAPIV*)(struct CLogTypeDBTaskPool*, struct CLogTypeDBTask*, struct CLogFile*);
            return (org_ptr(0x1402c2750L))(this, pTask, kLogger);
        };
        bool SetEmpty(struct CLogTypeDBTask* pTask, struct CLogFile* kLogger)
        {
            using org_ptr = bool (WINAPIV*)(struct CLogTypeDBTaskPool*, struct CLogTypeDBTask*, struct CLogFile*);
            return (org_ptr(0x1402c2810L))(this, pTask, kLogger);
        };
        bool SetProc(struct CLogTypeDBTask* pTask, struct CLogFile* kLogger)
        {
            using org_ptr = bool (WINAPIV*)(struct CLogTypeDBTaskPool*, struct CLogTypeDBTask*, struct CLogFile*);
            return (org_ptr(0x1402c2690L))(this, pTask, kLogger);
        };
        ~CLogTypeDBTaskPool()
        {
            using org_ptr = void (WINAPIV*)(struct CLogTypeDBTaskPool*);
            (org_ptr(0x1402c1fc0L))(this);
        };
        void dtor_CLogTypeDBTaskPool()
        {
            using org_ptr = void (WINAPIV*)(struct CLogTypeDBTaskPool*);
            (org_ptr(0x1402c1fc0L))(this);
        };
    };
END_ATF_NAMESPACE
