// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_guild_applier_info_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::_guild_applier_infoIsFill2_ptr _guild_applier_infoIsFill2_next(nullptr);
        info::_guild_applier_infoIsFill2_clbk _guild_applier_infoIsFill2_user(nullptr);
        info::_guild_applier_infoctor__guild_applier_info4_ptr _guild_applier_infoctor__guild_applier_info4_next(nullptr);
        info::_guild_applier_infoctor__guild_applier_info4_clbk _guild_applier_infoctor__guild_applier_info4_user(nullptr);
        info::_guild_applier_infoinit6_ptr _guild_applier_infoinit6_next(nullptr);
        info::_guild_applier_infoinit6_clbk _guild_applier_infoinit6_user(nullptr);
        
        bool _guild_applier_infoIsFill2_wrapper(struct _guild_applier_info* _this)
        {
           return _guild_applier_infoIsFill2_user(_this, _guild_applier_infoIsFill2_next);
        };
        void _guild_applier_infoctor__guild_applier_info4_wrapper(struct _guild_applier_info* _this)
        {
           _guild_applier_infoctor__guild_applier_info4_user(_this, _guild_applier_infoctor__guild_applier_info4_next);
        };
        void _guild_applier_infoinit6_wrapper(struct _guild_applier_info* _this)
        {
           _guild_applier_infoinit6_user(_this, _guild_applier_infoinit6_next);
        };
        
        hook_record _guild_applier_info_functions[] = {
        {   (LPVOID)0x14025d330L,
            (LPVOID *)&_guild_applier_infoIsFill2_user,
            (LPVOID *)&_guild_applier_infoIsFill2_next,
            (LPVOID)cast_pointer_function(_guild_applier_infoIsFill2_wrapper),
            (LPVOID)cast_pointer_function((bool(_guild_applier_info::*)())&_guild_applier_info::IsFill) },
        {   (LPVOID)0x14025cec0L,
            (LPVOID *)&_guild_applier_infoctor__guild_applier_info4_user,
            (LPVOID *)&_guild_applier_infoctor__guild_applier_info4_next,
            (LPVOID)cast_pointer_function(_guild_applier_infoctor__guild_applier_info4_wrapper),
            (LPVOID)cast_pointer_function((void(_guild_applier_info::*)())&_guild_applier_info::ctor__guild_applier_info) },
        {   (LPVOID)0x14025cf10L,
            (LPVOID *)&_guild_applier_infoinit6_user,
            (LPVOID *)&_guild_applier_infoinit6_next,
            (LPVOID)cast_pointer_function(_guild_applier_infoinit6_wrapper),
            (LPVOID)cast_pointer_function((void(_guild_applier_info::*)())&_guild_applier_info::init) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
