// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CMergeFileManager_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::CMergeFileManagerGetFileSize1_ptr CMergeFileManagerGetFileSize1_next(nullptr);
        static info::CMergeFileManagerGetFileSize1_clbk CMergeFileManagerGetFileSize1_user(nullptr);
        static info::CMergeFileManagerInitMergeFile2_ptr CMergeFileManagerInitMergeFile2_next(nullptr);
        static info::CMergeFileManagerInitMergeFile2_clbk CMergeFileManagerInitMergeFile2_user(nullptr);
        static info::CMergeFileManagerIsExistFile3_ptr CMergeFileManagerIsExistFile3_next(nullptr);
        static info::CMergeFileManagerIsExistFile3_clbk CMergeFileManagerIsExistFile3_user(nullptr);
        static info::CMergeFileManagerLoadFileOffset4_ptr CMergeFileManagerLoadFileOffset4_next(nullptr);
        static info::CMergeFileManagerLoadFileOffset4_clbk CMergeFileManagerLoadFileOffset4_user(nullptr);
        static info::CMergeFileManagerReleaseMergeFile5_ptr CMergeFileManagerReleaseMergeFile5_next(nullptr);
        static info::CMergeFileManagerReleaseMergeFile5_clbk CMergeFileManagerReleaseMergeFile5_user(nullptr);
        static info::CMergeFileManagerdtor_CMergeFileManager6_ptr CMergeFileManagerdtor_CMergeFileManager6_next(nullptr);
        static info::CMergeFileManagerdtor_CMergeFileManager6_clbk CMergeFileManagerdtor_CMergeFileManager6_user(nullptr);
        
        static uint32_t CMergeFileManagerGetFileSize1_wrapper(struct CMergeFileManager* _this, char* arg_0)
        {
           return CMergeFileManagerGetFileSize1_user(_this, arg_0, CMergeFileManagerGetFileSize1_next);
        };
        static void CMergeFileManagerInitMergeFile2_wrapper(struct CMergeFileManager* _this, char* arg_0)
        {
           CMergeFileManagerInitMergeFile2_user(_this, arg_0, CMergeFileManagerInitMergeFile2_next);
        };
        static int CMergeFileManagerIsExistFile3_wrapper(struct CMergeFileManager* _this, char* arg_0)
        {
           return CMergeFileManagerIsExistFile3_user(_this, arg_0, CMergeFileManagerIsExistFile3_next);
        };
        static struct _iobuf* CMergeFileManagerLoadFileOffset4_wrapper(struct CMergeFileManager* _this, char* arg_0, char* arg_1)
        {
           return CMergeFileManagerLoadFileOffset4_user(_this, arg_0, arg_1, CMergeFileManagerLoadFileOffset4_next);
        };
        static void CMergeFileManagerReleaseMergeFile5_wrapper(struct CMergeFileManager* _this)
        {
           CMergeFileManagerReleaseMergeFile5_user(_this, CMergeFileManagerReleaseMergeFile5_next);
        };
        static int64_t CMergeFileManagerdtor_CMergeFileManager6_wrapper(struct CMergeFileManager* _this)
        {
           return CMergeFileManagerdtor_CMergeFileManager6_user(_this, CMergeFileManagerdtor_CMergeFileManager6_next);
        };
        
        static hook_record CMergeFileManager_functions[] = {
        {   (LPVOID)0x14050a920L,
            (LPVOID *)&CMergeFileManagerGetFileSize1_user,
            (LPVOID *)&CMergeFileManagerGetFileSize1_next,
            (LPVOID)cast_pointer_function(CMergeFileManagerGetFileSize1_wrapper),
            (LPVOID)cast_pointer_function((uint32_t(CMergeFileManager::*)(char*))&CMergeFileManager::GetFileSize) },
        {   (LPVOID)0x14050a490L,
            (LPVOID *)&CMergeFileManagerInitMergeFile2_user,
            (LPVOID *)&CMergeFileManagerInitMergeFile2_next,
            (LPVOID)cast_pointer_function(CMergeFileManagerInitMergeFile2_wrapper),
            (LPVOID)cast_pointer_function((void(CMergeFileManager::*)(char*))&CMergeFileManager::InitMergeFile) },
        {   (LPVOID)0x14050a890L,
            (LPVOID *)&CMergeFileManagerIsExistFile3_user,
            (LPVOID *)&CMergeFileManagerIsExistFile3_next,
            (LPVOID)cast_pointer_function(CMergeFileManagerIsExistFile3_wrapper),
            (LPVOID)cast_pointer_function((int(CMergeFileManager::*)(char*))&CMergeFileManager::IsExistFile) },
        {   (LPVOID)0x14050a810L,
            (LPVOID *)&CMergeFileManagerLoadFileOffset4_user,
            (LPVOID *)&CMergeFileManagerLoadFileOffset4_next,
            (LPVOID)cast_pointer_function(CMergeFileManagerLoadFileOffset4_wrapper),
            (LPVOID)cast_pointer_function((struct _iobuf*(CMergeFileManager::*)(char*, char*))&CMergeFileManager::LoadFileOffset) },
        {   (LPVOID)0x14050a790L,
            (LPVOID *)&CMergeFileManagerReleaseMergeFile5_user,
            (LPVOID *)&CMergeFileManagerReleaseMergeFile5_next,
            (LPVOID)cast_pointer_function(CMergeFileManagerReleaseMergeFile5_wrapper),
            (LPVOID)cast_pointer_function((void(CMergeFileManager::*)())&CMergeFileManager::ReleaseMergeFile) },
        {   (LPVOID)0x14050aab0L,
            (LPVOID *)&CMergeFileManagerdtor_CMergeFileManager6_user,
            (LPVOID *)&CMergeFileManagerdtor_CMergeFileManager6_next,
            (LPVOID)cast_pointer_function(CMergeFileManagerdtor_CMergeFileManager6_wrapper),
            (LPVOID)cast_pointer_function((int64_t(CMergeFileManager::*)())&CMergeFileManager::dtor_CMergeFileManager) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
