// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CCharacter.hpp"
#include "CMapData.hpp"
#include "_dummy_position.hpp"


START_ATF_NAMESPACE
    struct  CCircleZone : CCharacter
    {
        enum GCZ_STATE
        {
            CZ_NONE = 0xFFFFFFFF,
            CZ_INIT = 0x0,
            CZ_CREATE = 0x1,
            CZ_DESTROY = 0x2,
        };
        GCZ_STATE m_eState;
        int m_iPortalInx;
        char m_byColor;
        _dummy_position *m_pkGoalPos;
    public:
        CCircleZone()
        {
            using org_ptr = void (WINAPIV*)(struct CCircleZone*);
            (org_ptr(0x14012d660L))(this);
        };
        void ctor_CCircleZone()
        {
            using org_ptr = void (WINAPIV*)(struct CCircleZone*);
            (org_ptr(0x14012d660L))(this);
        };
        bool Create(struct CMapData* pkMap, char byColor)
        {
            using org_ptr = bool (WINAPIV*)(struct CCircleZone*, struct CMapData*, char);
            return (org_ptr(0x14012da60L))(this, pkMap, byColor);
        };
        void Destroy()
        {
            using org_ptr = void (WINAPIV*)(struct CCircleZone*);
            (org_ptr(0x14012db70L))(this);
        };
        char GetColor()
        {
            using org_ptr = char (WINAPIV*)(struct CCircleZone*);
            return (org_ptr(0x140034b20L))(this);
        };
        int GetPortalInx()
        {
            using org_ptr = int (WINAPIV*)(struct CCircleZone*);
            return (org_ptr(0x140034b00L))(this);
        };
        char Goal(struct CMapData* pkMap, float* pfCurPos)
        {
            using org_ptr = char (WINAPIV*)(struct CCircleZone*, struct CMapData*, float*);
            return (org_ptr(0x14012dbe0L))(this, pkMap, pfCurPos);
        };
        bool Init(unsigned int uiMapInx, int iPlayerInx, int iNth, uint16_t wInx, struct CMapData* pkMap)
        {
            using org_ptr = bool (WINAPIV*)(struct CCircleZone*, unsigned int, int, int, uint16_t, struct CMapData*);
            return (org_ptr(0x14012d740L))(this, uiMapInx, iPlayerInx, iNth, wInx, pkMap);
        };
        bool IsNearPosition(float* pfCurPos)
        {
            using org_ptr = bool (WINAPIV*)(struct CCircleZone*, float*);
            return (org_ptr(0x14012de20L))(this, pfCurPos);
        };
        void SendMsgCreate()
        {
            using org_ptr = void (WINAPIV*)(struct CCircleZone*);
            (org_ptr(0x14012dc60L))(this);
        };
        void SendMsgGoal()
        {
            using org_ptr = void (WINAPIV*)(struct CCircleZone*);
            (org_ptr(0x14012dda0L))(this);
        };
        void SendMsg_FixPosition(int n)
        {
            using org_ptr = void (WINAPIV*)(struct CCircleZone*, int);
            (org_ptr(0x14012dd00L))(this, n);
        };
        ~CCircleZone()
        {
            using org_ptr = void (WINAPIV*)(struct CCircleZone*);
            (org_ptr(0x14012d6f0L))(this);
        };
        void dtor_CCircleZone()
        {
            using org_ptr = void (WINAPIV*)(struct CCircleZone*);
            (org_ptr(0x14012d6f0L))(this);
        };
    };
END_ATF_NAMESPACE
