// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"


START_ATF_NAMESPACE
    struct CRaceBuffHolyQuestResultInfo
    {
        bool m_bSetBuff;
        char m_byCurWinRace;
        char m_byCurFailRace;
        char m_byCurLoseRace;
        char m_byOldWinRace;
        char m_byOldFailRace;
        char m_byOldLoseRace;
        unsigned int m_uiContinueWinCnt;
        unsigned int m_uiContinueFailCnt;
        unsigned int m_uiContinueLoseCnt;
    public:
        CRaceBuffHolyQuestResultInfo()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBuffHolyQuestResultInfo*);
            (org_ptr(0x1403b53b0L))(this);
        };
        void ctor_CRaceBuffHolyQuestResultInfo()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBuffHolyQuestResultInfo*);
            (org_ptr(0x1403b53b0L))(this);
        };
        void ClearResult()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBuffHolyQuestResultInfo*);
            (org_ptr(0x1403b7c60L))(this);
        };
        bool FindFailRace(char byWinRace, char byLoseRace, char* pbyFailRace)
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBuffHolyQuestResultInfo*, char, char, char*);
            return (org_ptr(0x1403b5e50L))(this, byWinRace, byLoseRace, pbyFailRace);
        };
        unsigned int GetContinueCnt(int iType)
        {
            using org_ptr = unsigned int (WINAPIV*)(struct CRaceBuffHolyQuestResultInfo*, int);
            return (org_ptr(0x1403b5790L))(this, iType);
        };
        int GetResultType(char byRace, bool bGetScanner)
        {
            using org_ptr = int (WINAPIV*)(struct CRaceBuffHolyQuestResultInfo*, char, bool);
            return (org_ptr(0x1403b56e0L))(this, byRace, bGetScanner);
        };
        bool IsChaos()
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBuffHolyQuestResultInfo*);
            return (org_ptr(0x1403b7da0L))(this);
        };
        bool IsValidResult()
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBuffHolyQuestResultInfo*);
            return (org_ptr(0x1403b7b20L))(this);
        };
        bool Load()
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBuffHolyQuestResultInfo*);
            return (org_ptr(0x1403b5470L))(this);
        };
        bool LoadINI()
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBuffHolyQuestResultInfo*);
            return (org_ptr(0x1403b5a30L))(this);
        };
        bool Save()
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBuffHolyQuestResultInfo*);
            return (org_ptr(0x1403b5430L))(this);
        };
        bool SaveINI()
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBuffHolyQuestResultInfo*);
            return (org_ptr(0x1403b57f0L))(this);
        };
        bool SaveINISubProcSaveNum(char* szItem, char byNum)
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBuffHolyQuestResultInfo*, char*, char);
            return (org_ptr(0x1403b5cf0L))(this, szItem, byNum);
        };
        void SetBuffFlag()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBuffHolyQuestResultInfo*);
            (org_ptr(0x1403b5600L))(this);
        };
        void SetResult(char byWinRace, char byLoseRace, unsigned int uiThMax)
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBuffHolyQuestResultInfo*, char, char, unsigned int);
            (org_ptr(0x1403b5570L))(this, byWinRace, byLoseRace, uiThMax);
        };
        bool SetResultSubProcSetRace(char byWinRace, char byLoseRace, unsigned int uiThMax)
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBuffHolyQuestResultInfo*, char, char, unsigned int);
            return (org_ptr(0x1403b5f50L))(this, byWinRace, byLoseRace, uiThMax);
        };
        ~CRaceBuffHolyQuestResultInfo()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBuffHolyQuestResultInfo*);
            (org_ptr(0x1403b7c50L))(this);
        };
        void dtor_CRaceBuffHolyQuestResultInfo()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBuffHolyQuestResultInfo*);
            (org_ptr(0x1403b7c50L))(this);
        };
    };
END_ATF_NAMESPACE
