// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CLuaCommandVtbl.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 8)
    struct CLuaCommand
    {
        enum CMD_TYPE
        {
            CMD_NONE = 0x0,
            CMD_STRING = 0x1,
            CMD_FILE = 0x2,
        };
        CLuaCommandVtbl *vfptr;
        char m_byCommand;
        char m_strBuff[2048];
    public:
        CLuaCommand()
        {
            using org_ptr = void (WINAPIV*)(struct CLuaCommand*);
            (org_ptr(0x14029d880L))(this);
        };
        void ctor_CLuaCommand()
        {
            using org_ptr = void (WINAPIV*)(struct CLuaCommand*);
            (org_ptr(0x14029d880L))(this);
        };
        char* GetBuffer()
        {
            using org_ptr = char* (WINAPIV*)(struct CLuaCommand*);
            return (org_ptr(0x140400fd0L))(this);
        };
        char GetType()
        {
            using org_ptr = char (WINAPIV*)(struct CLuaCommand*);
            return (org_ptr(0x140400fb0L))(this);
        };
        void Init()
        {
            using org_ptr = void (WINAPIV*)(struct CLuaCommand*);
            (org_ptr(0x14029d910L))(this);
        };
        void SetCmd(char byType, char* strName)
        {
            using org_ptr = void (WINAPIV*)(struct CLuaCommand*, char, char*);
            (org_ptr(0x14029d930L))(this, byType, strName);
        };
        ~CLuaCommand()
        {
            using org_ptr = void (WINAPIV*)(struct CLuaCommand*);
            (org_ptr(0x14029d8f0L))(this);
        };
        void dtor_CLuaCommand()
        {
            using org_ptr = void (WINAPIV*)(struct CLuaCommand*);
            (org_ptr(0x14029d8f0L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
