// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CPostData.hpp"
#include "_INVENKEY.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 4)
    struct CPostStorage
    {
        CPostData m_PostData[50];
        int m_nSize;
        bool m_bUpdate;
    public:
        int AddNewPost(unsigned int dwSenderSerial, char* wszSendName, char* wszRecvName, char* wszTitle, char* wszContent, struct _INVENKEY Key, uint64_t dwDur, unsigned int dwUpt, unsigned int dwGold, unsigned int dwPSSerial, char byState, int* nNumber, uint64_t lnUID)
        {
            using org_ptr = int (WINAPIV*)(struct CPostStorage*, unsigned int, char*, char*, char*, char*, struct _INVENKEY, uint64_t, unsigned int, unsigned int, unsigned int, char, int*, uint64_t);
            return (org_ptr(0x140322fd0L))(this, dwSenderSerial, wszSendName, wszRecvName, wszTitle, wszContent, Key, dwDur, dwUpt, dwGold, dwPSSerial, byState, nNumber, lnUID);
        };
        int AddPostTitleData(int nIndex, unsigned int dwSerial, char byState, char* wszSendName, char* wszTitle, struct _INVENKEY Key, uint64_t dwDur, unsigned int dwUpt, unsigned int dwGold, uint64_t lnUID)
        {
            using org_ptr = int (WINAPIV*)(struct CPostStorage*, int, unsigned int, char, char*, char*, struct _INVENKEY, uint64_t, unsigned int, unsigned int, uint64_t);
            return (org_ptr(0x140323350L))(this, nIndex, dwSerial, byState, wszSendName, wszTitle, Key, dwDur, dwUpt, dwGold, lnUID);
        };
        bool AddPostTitleDataByStorageIndex(int nStorageIndex, int nNumber, unsigned int dwSerial, char byState, char* wszSendName, char* wszTitle, struct _INVENKEY Key, uint64_t dwDur, unsigned int dwUpt, unsigned int dwGold, uint64_t lnUID)
        {
            using org_ptr = bool (WINAPIV*)(struct CPostStorage*, int, int, unsigned int, char, char*, char*, struct _INVENKEY, uint64_t, unsigned int, unsigned int, uint64_t);
            return (org_ptr(0x140323200L))(this, nStorageIndex, nNumber, dwSerial, byState, wszSendName, wszTitle, Key, dwDur, dwUpt, dwGold, lnUID);
        };
        CPostStorage()
        {
            using org_ptr = void (WINAPIV*)(struct CPostStorage*);
            (org_ptr(0x140322e20L))(this);
        };
        void ctor_CPostStorage()
        {
            using org_ptr = void (WINAPIV*)(struct CPostStorage*);
            (org_ptr(0x140322e20L))(this);
        };
        void DelPostData(unsigned int dwIndex)
        {
            using org_ptr = void (WINAPIV*)(struct CPostStorage*, unsigned int);
            (org_ptr(0x1403236b0L))(this, dwIndex);
        };
        struct CPostData* GetPostDataFromInx(int nIndex)
        {
            using org_ptr = struct CPostData* (WINAPIV*)(struct CPostStorage*, int);
            return (org_ptr(0x1403235c0L))(this, nIndex);
        };
        struct CPostData* GetPostDataFromSerial(unsigned int dwPostSerial)
        {
            using org_ptr = struct CPostData* (WINAPIV*)(struct CPostStorage*, unsigned int);
            return (org_ptr(0x140323620L))(this, dwPostSerial);
        };
        int GetSize()
        {
            using org_ptr = int (WINAPIV*)(struct CPostStorage*);
            return (org_ptr(0x140322f20L))(this);
        };
        void Init()
        {
            using org_ptr = void (WINAPIV*)(struct CPostStorage*);
            (org_ptr(0x140322f40L))(this);
        };
        bool IsContentLoad(unsigned int dwIndex)
        {
            using org_ptr = bool (WINAPIV*)(struct CPostStorage*, unsigned int);
            return (org_ptr(0x140323730L))(this, dwIndex);
        };
        int SetPostContent(unsigned int dwSerial, char* wszContent)
        {
            using org_ptr = int (WINAPIV*)(struct CPostStorage*, unsigned int, char*);
            return (org_ptr(0x140323510L))(this, dwSerial, wszContent);
        };
        ~CPostStorage()
        {
            using org_ptr = void (WINAPIV*)(struct CPostStorage*);
            (org_ptr(0x140322ed0L))(this);
        };
        void dtor_CPostStorage()
        {
            using org_ptr = void (WINAPIV*)(struct CPostStorage*);
            (org_ptr(0x140322ed0L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
