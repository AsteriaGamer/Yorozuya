// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_party_member_info_upd_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::_party_member_info_updctor__party_member_info_upd2_ptr _party_member_info_updctor__party_member_info_upd2_next(nullptr);
        static info::_party_member_info_updctor__party_member_info_upd2_clbk _party_member_info_updctor__party_member_info_upd2_user(nullptr);
        static info::_party_member_info_updsize4_ptr _party_member_info_updsize4_next(nullptr);
        static info::_party_member_info_updsize4_clbk _party_member_info_updsize4_user(nullptr);
        
        static void _party_member_info_updctor__party_member_info_upd2_wrapper(struct _party_member_info_upd* _this)
        {
           _party_member_info_updctor__party_member_info_upd2_user(_this, _party_member_info_updctor__party_member_info_upd2_next);
        };
        static int _party_member_info_updsize4_wrapper(struct _party_member_info_upd* _this)
        {
           return _party_member_info_updsize4_user(_this, _party_member_info_updsize4_next);
        };
        
        static hook_record _party_member_info_upd_functions[] = {
        {   (LPVOID)0x1400efb50L,
            (LPVOID *)&_party_member_info_updctor__party_member_info_upd2_user,
            (LPVOID *)&_party_member_info_updctor__party_member_info_upd2_next,
            (LPVOID)cast_pointer_function(_party_member_info_updctor__party_member_info_upd2_wrapper),
            (LPVOID)cast_pointer_function((void(_party_member_info_upd::*)())&_party_member_info_upd::ctor__party_member_info_upd) },
        {   (LPVOID)0x1400efb70L,
            (LPVOID *)&_party_member_info_updsize4_user,
            (LPVOID *)&_party_member_info_updsize4_next,
            (LPVOID)cast_pointer_function(_party_member_info_updsize4_wrapper),
            (LPVOID)cast_pointer_function((int(_party_member_info_upd::*)())&_party_member_info_upd::size) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
