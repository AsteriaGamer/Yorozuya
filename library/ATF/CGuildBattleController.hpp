// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CGameObject.hpp"
#include "CGuild.hpp"
#include "CPlayer.hpp"


START_ATF_NAMESPACE
    struct  CGuildBattleController
    {
    public:
        char Add(struct CGuild* pSrcGuild, struct CGuild* pDestGuild, unsigned int dwStartTime, char byNumber, unsigned int dwMapInx)
        {
            using org_ptr = char (WINAPIV*)(struct CGuildBattleController*, struct CGuild*, struct CGuild*, unsigned int, char, unsigned int);
            return (org_ptr(0x14025d2a0L))(this, pSrcGuild, pDestGuild, dwStartTime, byNumber, dwMapInx);
        };
        char Add(struct CGuild* pSrcGuild, struct CGuild* pDestGuild, unsigned int dwStartTime, unsigned int dwElapseTimeCnt, char byNumber, unsigned int dwMapInx)
        {
            using org_ptr = char (WINAPIV*)(struct CGuildBattleController*, struct CGuild*, struct CGuild*, unsigned int, unsigned int, char, unsigned int);
            return (org_ptr(0x1403d5db0L))(this, pSrcGuild, pDestGuild, dwStartTime, dwElapseTimeCnt, byNumber, dwMapInx);
        };
        void AddComplete(char byResult, unsigned int uiMapID, unsigned int dwID, unsigned int dwSLID)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, char, unsigned int, unsigned int, unsigned int);
            (org_ptr(0x1403d6e20L))(this, byResult, uiMapID, dwID, dwSLID);
        };
        char AddSchedule(char* szData)
        {
            using org_ptr = char (WINAPIV*)(struct CGuildBattleController*, char*);
            return (org_ptr(0x1403d6ad0L))(this, szData);
        };
        CGuildBattleController()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*);
            (org_ptr(0x1403d5680L))(this);
        };
        void ctor_CGuildBattleController()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*);
            (org_ptr(0x1403d5680L))(this);
        };
        bool CheatCreateFieldObject(struct CPlayer* pkPlayer)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildBattleController*, struct CPlayer*);
            return (org_ptr(0x1403d72d0L))(this, pkPlayer);
        };
        bool CheatDestroyFieldObject(struct CPlayer* pkPlayer)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildBattleController*, struct CPlayer*);
            return (org_ptr(0x1403d7380L))(this, pkPlayer);
        };
        bool CheatDestroyStone(struct CPlayer* pkPlayer)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildBattleController*, struct CPlayer*);
            return (org_ptr(0x1403d7220L))(this, pkPlayer);
        };
        bool CheatDropStone(struct CPlayer* pkPlayer)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildBattleController*, struct CPlayer*);
            return (org_ptr(0x1403d7780L))(this, pkPlayer);
        };
        bool CheatForceTakeStone(struct CPlayer* pkPlayer)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildBattleController*, struct CPlayer*);
            return (org_ptr(0x1403d7850L))(this, pkPlayer);
        };
        bool CheatGetStone(struct CPlayer* pkPlayer)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildBattleController*, struct CPlayer*);
            return (org_ptr(0x1403d75e0L))(this, pkPlayer);
        };
        int CheatRegenStone(struct CPlayer* pkPlayer, int iRengenPos)
        {
            using org_ptr = int (WINAPIV*)(struct CGuildBattleController*, struct CPlayer*, int);
            return (org_ptr(0x1403d70c0L))(this, pkPlayer, iRengenPos);
        };
        bool CheatTakeStone(int iPortalInx, struct CPlayer* pkPlayer)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildBattleController*, int, struct CPlayer*);
            return (org_ptr(0x1403d7430L))(this, iPortalInx, pkPlayer);
        };
        void CheckGetGravityStone(uint16_t wIndex, unsigned int dwObjSerial, struct CPlayer* pkPlayer)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, uint16_t, unsigned int, struct CPlayer*);
            (org_ptr(0x1403d60f0L))(this, wIndex, dwObjSerial, pkPlayer);
        };
        void CheckGoal(struct CPlayer* pkPlayer, int iPortalInx)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, struct CPlayer*, int);
            (org_ptr(0x1403d61b0L))(this, pkPlayer, iPortalInx);
        };
        void CheckTakeGravityStone(int iPortalInx, struct CPlayer* pkPlayer)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, int, struct CPlayer*);
            (org_ptr(0x1403d6020L))(this, iPortalInx, pkPlayer);
        };
        void CleanUp()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*);
            (org_ptr(0x1403d7900L))(this);
        };
        void Clear()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*);
            (org_ptr(0x1403d62f0L))(this);
        };
        void CompleteClearGuildBattleRank(char byResult)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, char);
            (org_ptr(0x1403d7030L))(this, byResult);
        };
        void CompleteCreateGuildBattleRankTable(char byResult)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, char);
            (org_ptr(0x1403d6fb0L))(this, byResult);
        };
        void CompleteUpdateRank(char byResult, char byRace, char* pLoadData)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, char, char, char*);
            (org_ptr(0x1403d6ec0L))(this, byResult, byRace, pLoadData);
        };
        void CompleteUpdateReservedSchedule(unsigned int dwMapID, char* pLoadData)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, unsigned int, char*);
            (org_ptr(0x1403d6f60L))(this, dwMapID, pLoadData);
        };
        static void Destroy()
        {
            using org_ptr = void (WINAPIV*)();
            (org_ptr(0x1403d57a0L))();
        };
        void DropGravityStone(struct CPlayer* pkPlayer)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, struct CPlayer*);
            (org_ptr(0x1403d63b0L))(this, pkPlayer);
        };
        void Flip()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*);
            (org_ptr(0x1403d6260L))(this);
        };
        struct CGameObject* GetCircleZone(int iInx)
        {
            using org_ptr = struct CGameObject* (WINAPIV*)(struct CGuildBattleController*, int);
            return (org_ptr(0x1403d6860L))(this, iInx);
        };
        struct CGameObject* GetRegener(int iInx)
        {
            using org_ptr = struct CGameObject* (WINAPIV*)(struct CGuildBattleController*, int);
            return (org_ptr(0x1403d6810L))(this, iInx);
        };
        struct CGameObject* GetStone(int iInx)
        {
            using org_ptr = struct CGameObject* (WINAPIV*)(struct CGuildBattleController*, int);
            return (org_ptr(0x1403d67c0L))(this, iInx);
        };
        bool Init()
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildBattleController*);
            return (org_ptr(0x1403d5820L))(this);
        };
        static struct CGuildBattleController* Instance()
        {
            using org_ptr = struct CGuildBattleController* (WINAPIV*)();
            return (org_ptr(0x1403d56e0L))();
        };
        char IsAvailableSuggest(struct CGuild* pSrcGuild, unsigned int dwDestGuild, unsigned int dwStartTime, unsigned int dwNumber, unsigned int dwMapCode)
        {
            using org_ptr = char (WINAPIV*)(struct CGuildBattleController*, struct CGuild*, unsigned int, unsigned int, unsigned int, unsigned int);
            return (org_ptr(0x1403d5bd0L))(this, pSrcGuild, dwDestGuild, dwStartTime, dwNumber, dwMapCode);
        };
        void Join(struct CPlayer* pkPlayer)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, struct CPlayer*);
            (org_ptr(0x1403d5ed0L))(this, pkPlayer);
        };
        void JoinGuild(int n, unsigned int dwGuildSerial, unsigned int dwCharacSerial)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, int, unsigned int, unsigned int);
            (org_ptr(0x1400ad450L))(this, n, dwGuildSerial, dwCharacSerial);
        };
        void Kill(struct CPlayer* pkSrcPlayer, struct CPlayer* pkDestPlayer)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, struct CPlayer*, struct CPlayer*);
            (org_ptr(0x1403d6600L))(this, pkSrcPlayer, pkDestPlayer);
        };
        void LeaveGuild(struct CPlayer* pkPlayer)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, struct CPlayer*);
            (org_ptr(0x1403d66d0L))(this, pkPlayer);
        };
        bool Load()
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildBattleController*);
            return (org_ptr(0x1403d5950L))(this);
        };
        bool LoadINI(unsigned int* uiMapCnt, int* iToday, int* iTodayDayID, int* iTomorrow, int* iTomorrowDayID)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildBattleController*, unsigned int*, int*, int*, int*, int*);
            return (org_ptr(0x1403d7bb0L))(this, uiMapCnt, iToday, iTodayDayID, iTomorrow, iTomorrowDayID);
        };
        void LogIn(struct CPlayer* pkPlayer)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, struct CPlayer*);
            (org_ptr(0x1403d5e40L))(this, pkPlayer);
        };
        void Loop()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*);
            (org_ptr(0x1403d6760L))(this);
        };
        void NetClose(struct CPlayer* pkPlayer)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, struct CPlayer*);
            (org_ptr(0x1403d64d0L))(this, pkPlayer);
        };
        void PushClearGuildBattleRank()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*);
            (org_ptr(0x1402cfca0L))(this);
        };
        void PushCreateGuildBattleRankTable()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*);
            (org_ptr(0x1402cfc50L))(this);
        };
        bool SaveINI()
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildBattleController*);
            return (org_ptr(0x1403d7960L))(this);
        };
        void SendCurrentBattleInfoRequest(int n, unsigned int uiMapID)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, int, unsigned int);
            (org_ptr(0x1403d6a80L))(this, n, uiMapID);
        };
        void SendPossibleBattleGuildList(int n, char byRace, char byPage, unsigned int dwVer)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, int, char, char, unsigned int);
            (org_ptr(0x1403d6910L))(this, n, byRace, byPage, dwVer);
        };
        void SendPossibleBattleGuildListFirst(int n, char byRace)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, int, char);
            (org_ptr(0x1403d68b0L))(this, n, byRace);
        };
        void SendRankList(int n, char bySelfRace, unsigned int dwCurVer, unsigned int uiMapID, char byPage, unsigned int dwGuildSerial)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, int, char, unsigned int, unsigned int, char, unsigned int);
            (org_ptr(0x1403d6980L))(this, n, bySelfRace, dwCurVer, uiMapID, byPage, dwGuildSerial);
        };
        void SendReservedScheduleList(int n, unsigned int uiMapID, unsigned int dwVer, char byDay, char byPage, unsigned int dwGuildSerial)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*, int, unsigned int, unsigned int, char, char, unsigned int);
            (org_ptr(0x1403d6a00L))(this, n, uiMapID, dwVer, byDay, byPage, dwGuildSerial);
        };
        char Start(struct CPlayer* pkPlayer)
        {
            using org_ptr = char (WINAPIV*)(struct CGuildBattleController*, struct CPlayer*);
            return (org_ptr(0x1403d5f80L))(this, pkPlayer);
        };
        bool UpdateClearRerservedDayInfo(unsigned int dwStartSLID, unsigned int dwEndSLID, unsigned int dwStartSID, unsigned int dwEndSID)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildBattleController*, unsigned int, unsigned int, unsigned int, unsigned int);
            return (org_ptr(0x1403d6cf0L))(this, dwStartSLID, dwEndSLID, dwStartSID, dwEndSID);
        };
        bool UpdateDraw(char by1PRace, unsigned int dw1PGuildSerial, char by2PRace, unsigned int dw2PGuildSerial)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildBattleController*, char, unsigned int, char, unsigned int);
            return (org_ptr(0x1403d6c80L))(this, by1PRace, dw1PGuildSerial, by2PRace, dw2PGuildSerial);
        };
        void UpdatePossibleBattleGuildList()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*);
            (org_ptr(0x1403d6370L))(this);
        };
        bool UpdateRank(char byRace, char* byOutData)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildBattleController*, char, char*);
            return (org_ptr(0x1403d6d80L))(this, byRace, byOutData);
        };
        bool UpdateReservedGuildBattleSchedule(unsigned int dwSLID, char* byOutData)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildBattleController*, unsigned int, char*);
            return (org_ptr(0x1403d6dd0L))(this, dwSLID, byOutData);
        };
        bool UpdateWinLose(char byWinRace, unsigned int dwWinGuildSerial, char byLoseRace, unsigned int dwLoseGuildSerial)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildBattleController*, char, unsigned int, char, unsigned int);
            return (org_ptr(0x1403d6c10L))(this, byWinRace, dwWinGuildSerial, byLoseRace, dwLoseGuildSerial);
        };
        ~CGuildBattleController()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*);
            (org_ptr(0x1403d56a0L))(this);
        };
        void dtor_CGuildBattleController()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildBattleController*);
            (org_ptr(0x1403d56a0L))(this);
        };
    };
END_ATF_NAMESPACE
