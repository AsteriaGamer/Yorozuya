// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "lua_tinker__val2user_info.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace detail
        {
            info::lua_tinker__val2userctor_val2user5_ptr lua_tinker__val2userctor_val2user5_next(nullptr);
            info::lua_tinker__val2userctor_val2user5_clbk lua_tinker__val2userctor_val2user5_user(nullptr);
            info::lua_tinker__val2userdtor_val2user7_ptr lua_tinker__val2userdtor_val2user7_next(nullptr);
            info::lua_tinker__val2userdtor_val2user7_clbk lua_tinker__val2userdtor_val2user7_user(nullptr);
            
            void lua_tinker__val2userctor_val2user5_wrapper(struct lua_tinker::val2user<LuaParam3>* _this, int t1, int t2, int t3)
            {
               lua_tinker__val2userctor_val2user5_user(_this, t1, t2, t3);
            };
            void lua_tinker__val2userdtor_val2user7_wrapper(struct lua_tinker::val2user<LuaParam3>* _this)
            {
               lua_tinker__val2userdtor_val2user7_user(_this);
            };
            
            hook_record val2user<LuaParam3>_functions[] = {
            {   (LPVOID)0x140409df0L,
                (LPVOID *)&lua_tinker__val2userctor_val2user5_user,
                (LPVOID *)&lua_tinker__val2userctor_val2user5_next,
                (LPVOID)cast_pointer_function(lua_tinker__val2userctor_val2user5_wrapper),
                (LPVOID)cast_pointer_function((void(lua_tinker::val2user<LuaParam3>::*)(int, int, int))&lua_tinker::val2user<LuaParam3>::ctor_val2user) },
            {   (LPVOID)0x140409fc0L,
                (LPVOID *)&lua_tinker__val2userdtor_val2user7_user,
                (LPVOID *)&lua_tinker__val2userdtor_val2user7_next,
                (LPVOID)cast_pointer_function(lua_tinker__val2userdtor_val2user7_wrapper),
                (LPVOID)cast_pointer_function((void(lua_tinker::val2user<LuaParam3>::*)())&lua_tinker::val2user<LuaParam3>::dtor_val2user) },
            
            };
            
        }; // end namespace detail
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
