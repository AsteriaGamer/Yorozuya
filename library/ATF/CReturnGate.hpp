// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CGameObject.hpp"
#include "CMapData.hpp"
#include "CPlayer.hpp"
#include "CReturnGateCreateParam.hpp"
#include "_object_id.hpp"
#include "_open_return_gate_inform_zocl.hpp"
#include "CUnmannedTraderSchedule.hpp"

START_ATF_NAMESPACE
    struct  CReturnGate : CGameObject
    {
		typedef CUnmannedTraderSchedule::STATE STATE;

        STATE m_eState;
        CPlayer *m_pkOwner;
        unsigned int m_dwOwnerSerial;
        CMapData *m_pDestMap;
        float m_fBindPos[3];
        unsigned int m_dwCloseTime;
    public:
        CReturnGate(struct _object_id* pID)
        {
            using org_ptr = void (WINAPIV*)(struct CReturnGate*, struct _object_id*);
            (org_ptr(0x1401685c0L))(this, pID);
        };
        void ctor_CReturnGate(struct _object_id* pID)
        {
            using org_ptr = void (WINAPIV*)(struct CReturnGate*, struct _object_id*);
            (org_ptr(0x1401685c0L))(this, pID);
        };
        void Clear()
        {
            using org_ptr = void (WINAPIV*)(struct CReturnGate*);
            (org_ptr(0x140168720L))(this);
        };
        void Close()
        {
            using org_ptr = void (WINAPIV*)(struct CReturnGate*);
            (org_ptr(0x1401688c0L))(this);
        };
        int Enter(struct CPlayer* pkObj)
        {
            using org_ptr = int (WINAPIV*)(struct CReturnGate*, struct CPlayer*);
            return (org_ptr(0x140168930L))(this, pkObj);
        };
        uint16_t GetIndex()
        {
            using org_ptr = uint16_t (WINAPIV*)(struct CReturnGate*);
            return (org_ptr(0x140251520L))(this);
        };
        void GetInfo(struct _open_return_gate_inform_zocl* Info)
        {
            using org_ptr = void (WINAPIV*)(struct CReturnGate*, struct _open_return_gate_inform_zocl*);
            (org_ptr(0x140168b20L))(this, Info);
        };
        struct CPlayer* GetOwner()
        {
            using org_ptr = struct CPlayer* (WINAPIV*)(struct CReturnGate*);
            return (org_ptr(0x140034aa0L))(this);
        };
        bool IsClose()
        {
            using org_ptr = bool (WINAPIV*)(struct CReturnGate*);
            return (org_ptr(0x140168aa0L))(this);
        };
        bool IsOpen()
        {
            using org_ptr = bool (WINAPIV*)(struct CReturnGate*);
            return (org_ptr(0x140251540L))(this);
        };
        bool IsValidOwner()
        {
            using org_ptr = bool (WINAPIV*)(struct CReturnGate*);
            return (org_ptr(0x140168a20L))(this);
        };
        bool IsValidPosition(float* pfCurPos)
        {
            using org_ptr = bool (WINAPIV*)(struct CReturnGate*, float*);
            return (org_ptr(0x140168cf0L))(this, pfCurPos);
        };
        bool Open(struct CReturnGateCreateParam* pParam)
        {
            using org_ptr = bool (WINAPIV*)(struct CReturnGate*, struct CReturnGateCreateParam*);
            return (org_ptr(0x140168760L))(this, pParam);
        };
        void SendMsg_Create()
        {
            using org_ptr = void (WINAPIV*)(struct CReturnGate*);
            (org_ptr(0x140168d50L))(this);
        };
        void SendMsg_Destroy()
        {
            using org_ptr = void (WINAPIV*)(struct CReturnGate*);
            (org_ptr(0x140168e60L))(this);
        };
        void SendMsg_FixPosition(int n)
        {
            using org_ptr = void (WINAPIV*)(struct CReturnGate*, int);
            (org_ptr(0x140168bd0L))(this, n);
        };
        void SendMsg_MovePortal(struct CPlayer* pkObj)
        {
            using org_ptr = void (WINAPIV*)(struct CReturnGate*, struct CPlayer*);
            (org_ptr(0x140168ee0L))(this, pkObj);
        };
        ~CReturnGate()
        {
            using org_ptr = void (WINAPIV*)(struct CReturnGate*);
            (org_ptr(0x1401686d0L))(this);
        };
        void dtor_CReturnGate()
        {
            using org_ptr = void (WINAPIV*)(struct CReturnGate*);
            (org_ptr(0x1401686d0L))(this);
        };
    };
END_ATF_NAMESPACE
