// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "US__CNoneCopyAble_info.hpp"


START_ATF_NAMESPACE
    namespace US
    {
        namespace detail
        {
            static info::US__CNoneCopyAblector_CNoneCopyAble2_ptr US__CNoneCopyAblector_CNoneCopyAble2_next(nullptr);
            static info::US__CNoneCopyAblector_CNoneCopyAble2_clbk US__CNoneCopyAblector_CNoneCopyAble2_user(nullptr);
            static info::US__CNoneCopyAbledtor_CNoneCopyAble4_ptr US__CNoneCopyAbledtor_CNoneCopyAble4_next(nullptr);
            static info::US__CNoneCopyAbledtor_CNoneCopyAble4_clbk US__CNoneCopyAbledtor_CNoneCopyAble4_user(nullptr);
            
            static void US__CNoneCopyAblector_CNoneCopyAble2_wrapper(struct US::CNoneCopyAble* _this)
            {
               US__CNoneCopyAblector_CNoneCopyAble2_user(_this, US__CNoneCopyAblector_CNoneCopyAble2_next);
            };
            static void US__CNoneCopyAbledtor_CNoneCopyAble4_wrapper(struct US::CNoneCopyAble* _this)
            {
               US__CNoneCopyAbledtor_CNoneCopyAble4_user(_this, US__CNoneCopyAbledtor_CNoneCopyAble4_next);
            };
            
            static hook_record CNoneCopyAble_functions[] = {
            {   (LPVOID)0x14041d6d0L,
                (LPVOID *)&US__CNoneCopyAblector_CNoneCopyAble2_user,
                (LPVOID *)&US__CNoneCopyAblector_CNoneCopyAble2_next,
                (LPVOID)cast_pointer_function(US__CNoneCopyAblector_CNoneCopyAble2_wrapper),
                (LPVOID)cast_pointer_function((void(US::CNoneCopyAble::*)())&US::CNoneCopyAble::ctor_CNoneCopyAble) },
            {   (LPVOID)0x14041d760L,
                (LPVOID *)&US__CNoneCopyAbledtor_CNoneCopyAble4_user,
                (LPVOID *)&US__CNoneCopyAbledtor_CNoneCopyAble4_next,
                (LPVOID)cast_pointer_function(US__CNoneCopyAbledtor_CNoneCopyAble4_wrapper),
                (LPVOID)cast_pointer_function((void(US::CNoneCopyAble::*)())&US::CNoneCopyAble::dtor_CNoneCopyAble) },
            
            };
            
        }; // static end namespace detail
    }; // end namespace US
END_ATF_NAMESPACE
