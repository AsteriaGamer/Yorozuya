// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CMapData.hpp"
#include "_LAYER_SET.hpp"
#include "_dummy_position.hpp"
#include "std__vector.hpp"
#include "tagTIMESTAMP_STRUCT.hpp"
#include "RoomCharInfo.hpp"


START_ATF_NAMESPACE
    struct CGuildRoomInfo
    {
        bool m_bRent;
        char m_byRoomType;
        char m_byRace;
        int m_iGuildIdx;
        unsigned int m_dwGuildSerial;
        int m_timeBegin;
        int m_timer;
        std::vector<RoomCharInfo> m_vecRoomMember;
        CMapData *m_pRoomMap;
        unsigned __int16 m_wRoomMapLayer;
        _LAYER_SET *m_pLayerSet;
        _dummy_position *m_pRoomStartDummy;
    public:
        CGuildRoomInfo(struct CGuildRoomInfo* __that)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildRoomInfo*, struct CGuildRoomInfo*);
            (org_ptr(0x1402eb8f0L))(this, __that);
        };
        void ctor_CGuildRoomInfo(struct CGuildRoomInfo* __that)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildRoomInfo*, struct CGuildRoomInfo*);
            (org_ptr(0x1402eb8f0L))(this, __that);
        };
        CGuildRoomInfo()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildRoomInfo*);
            (org_ptr(0x1402e5920L))(this);
        };
        void ctor_CGuildRoomInfo()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildRoomInfo*);
            (org_ptr(0x1402e5920L))(this);
        };
        unsigned int GetGuildSerial()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct CGuildRoomInfo*);
            return (org_ptr(0x1402eb230L))(this);
        };
        struct CMapData* GetMapData()
        {
            using org_ptr = struct CMapData* (WINAPIV*)(struct CGuildRoomInfo*);
            return (org_ptr(0x1402eb250L))(this);
        };
        uint16_t GetMapLayer()
        {
            using org_ptr = uint16_t (WINAPIV*)(struct CGuildRoomInfo*);
            return (org_ptr(0x1402eb270L))(this);
        };
        bool GetMapPos(float* pPos)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildRoomInfo*, float*);
            return (org_ptr(0x1402e6690L))(this, pPos);
        };
        int GetRestTime()
        {
            using org_ptr = int (WINAPIV*)(struct CGuildRoomInfo*);
            return (org_ptr(0x1402e6820L))(this);
        };
        char GetRoomType()
        {
            using org_ptr = char (WINAPIV*)(struct CGuildRoomInfo*);
            return (org_ptr(0x1402eb210L))(this);
        };
        bool IsMemberIn(int n, unsigned int dwCharSerial)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildRoomInfo*, int, unsigned int);
            return (org_ptr(0x1402e65b0L))(this, n, dwCharSerial);
        };
        bool IsRent()
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildRoomInfo*);
            return (org_ptr(0x1402e6d10L))(this);
        };
        void OutAllRoomMember()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildRoomInfo*);
            (org_ptr(0x1402e6000L))(this);
        };
        int RoomIn(int n, unsigned int dwCharSerial)
        {
            using org_ptr = int (WINAPIV*)(struct CGuildRoomInfo*, int, unsigned int);
            return (org_ptr(0x1402e60f0L))(this, n, dwCharSerial);
        };
        int RoomOut(int n, unsigned int dwCharSerial)
        {
            using org_ptr = int (WINAPIV*)(struct CGuildRoomInfo*, int, unsigned int);
            return (org_ptr(0x1402e6210L))(this, n, dwCharSerial);
        };
        void RoomTimer()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildRoomInfo*);
            (org_ptr(0x1402e5f20L))(this);
        };
        void Room_Initialize()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildRoomInfo*);
            (org_ptr(0x1402e59f0L))(this);
        };
        void SendDQS_RoomInsert()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildRoomInfo*);
            (org_ptr(0x1402e66f0L))(this);
        };
        void SendDQS_RoomUpdate()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildRoomInfo*);
            (org_ptr(0x1402e6790L))(this);
        };
        void SendMsg_RoomTimeOver()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildRoomInfo*);
            (org_ptr(0x1402e6890L))(this);
        };
        bool SetPlayerOut(int n, unsigned int dwCharSerial, int iMemberIdx)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildRoomInfo*, int, unsigned int, int);
            return (org_ptr(0x1402e6310L))(this, n, dwCharSerial, iMemberIdx);
        };
        bool SetRoom(int iGuildInx, unsigned int dwGuildSerial)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildRoomInfo*, int, unsigned int);
            return (org_ptr(0x1402e5b20L))(this, iGuildInx, dwGuildSerial);
        };
        void SetRoomMapInfo(struct CMapData* pMap, uint16_t wMapLayer, char byRoomType, char byRace)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildRoomInfo*, struct CMapData*, uint16_t, char, char);
            (org_ptr(0x1402e5a80L))(this, pMap, wMapLayer, byRoomType, byRace);
        };
        void SetRoomTime()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildRoomInfo*);
            (org_ptr(0x1402e5da0L))(this);
        };
        void SetRoomTime_Restore(struct tagTIMESTAMP_STRUCT ts)
        {
            using org_ptr = void (WINAPIV*)(struct CGuildRoomInfo*, struct tagTIMESTAMP_STRUCT);
            (org_ptr(0x1402e5e10L))(this, ts);
        };
        bool SetRoom_Restore(int iGuildInx, unsigned int dwGuildSerial, struct tagTIMESTAMP_STRUCT ts)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuildRoomInfo*, int, unsigned int, struct tagTIMESTAMP_STRUCT);
            return (org_ptr(0x1402e5c80L))(this, iGuildInx, dwGuildSerial, ts);
        };
        void TimeOver()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildRoomInfo*);
            (org_ptr(0x1402e5f90L))(this);
        };
        ~CGuildRoomInfo()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildRoomInfo*);
            (org_ptr(0x1402e59b0L))(this);
        };
        void dtor_CGuildRoomInfo()
        {
            using org_ptr = void (WINAPIV*)(struct CGuildRoomInfo*);
            (org_ptr(0x1402e59b0L))(this);
        };
    };
END_ATF_NAMESPACE
