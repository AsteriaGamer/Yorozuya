// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "GUILD_BATTLE__CReservedGuildScheduleMapGroup.hpp"
#include "GUILD_BATTLE__CReservedGuildSchedulePage.hpp"
#include "_worlddb_guild_battle_reserved_schedule_info.hpp"


START_ATF_NAMESPACE
    namespace GUILD_BATTLE
    {
        struct CReservedGuildScheduleDayGroup
        {
            unsigned int m_uiMapCnt;
            char m_byToday;
            char m_byTommorow;
            CReservedGuildScheduleMapGroup *m_pkList;
        public:
            CReservedGuildScheduleDayGroup()
            {
                using org_ptr = void (WINAPIV*)(struct CReservedGuildScheduleDayGroup*);
                (org_ptr(0x1403ccbc0L))(this);
            };
            void ctor_CReservedGuildScheduleDayGroup()
            {
                using org_ptr = void (WINAPIV*)(struct CReservedGuildScheduleDayGroup*);
                (org_ptr(0x1403ccbc0L))(this);
            };
            bool Clear()
            {
                using org_ptr = bool (WINAPIV*)(struct CReservedGuildScheduleDayGroup*);
                return (org_ptr(0x1403cce80L))(this);
            };
            struct CReservedGuildSchedulePage* Find(unsigned int dwGuildSerial)
            {
                using org_ptr = struct CReservedGuildSchedulePage* (WINAPIV*)(struct CReservedGuildScheduleDayGroup*, unsigned int);
                return (org_ptr(0x1403ccfa0L))(this, dwGuildSerial);
            };
            void Flip()
            {
                using org_ptr = void (WINAPIV*)(struct CReservedGuildScheduleDayGroup*);
                (org_ptr(0x1403cd1c0L))(this);
            };
            bool Init(unsigned int uiMapCnt)
            {
                using org_ptr = bool (WINAPIV*)(struct CReservedGuildScheduleDayGroup*, unsigned int);
                return (org_ptr(0x1403ccc90L))(this, uiMapCnt);
            };
            bool Load(char byDayID, unsigned int uiMapInx, struct _worlddb_guild_battle_reserved_schedule_info* kInfo)
            {
                using org_ptr = bool (WINAPIV*)(struct CReservedGuildScheduleDayGroup*, char, unsigned int, struct _worlddb_guild_battle_reserved_schedule_info*);
                return (org_ptr(0x1403ccf20L))(this, byDayID, uiMapInx, kInfo);
            };
            void Send(char byDayID, unsigned int uiMapID, int n, unsigned int dwVer, char byPage, unsigned int dwGuildSerial)
            {
                using org_ptr = void (WINAPIV*)(struct CReservedGuildScheduleDayGroup*, char, unsigned int, int, unsigned int, char, unsigned int);
                (org_ptr(0x1403cd040L))(this, byDayID, uiMapID, n, dwVer, byPage, dwGuildSerial);
            };
            ~CReservedGuildScheduleDayGroup()
            {
                using org_ptr = void (WINAPIV*)(struct CReservedGuildScheduleDayGroup*);
                (org_ptr(0x1403ccbf0L))(this);
            };
            void dtor_CReservedGuildScheduleDayGroup()
            {
                using org_ptr = void (WINAPIV*)(struct CReservedGuildScheduleDayGroup*);
                (org_ptr(0x1403ccbf0L))(this);
            };
        };
    }; // end namespace GUILD_BATTLE
END_ATF_NAMESPACE
