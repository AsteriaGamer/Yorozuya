// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CEventLootTable_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::CEventLootTableAddRecord2_ptr CEventLootTableAddRecord2_next(nullptr);
        static info::CEventLootTableAddRecord2_clbk CEventLootTableAddRecord2_user(nullptr);
        static info::CEventLootTablector_CEventLootTable4_ptr CEventLootTablector_CEventLootTable4_next(nullptr);
        static info::CEventLootTablector_CEventLootTable4_clbk CEventLootTablector_CEventLootTable4_user(nullptr);
        static info::CEventLootTableGetRecord6_ptr CEventLootTableGetRecord6_next(nullptr);
        static info::CEventLootTableGetRecord6_clbk CEventLootTableGetRecord6_user(nullptr);
        static info::CEventLootTableReadRecord8_ptr CEventLootTableReadRecord8_next(nullptr);
        static info::CEventLootTableReadRecord8_clbk CEventLootTableReadRecord8_user(nullptr);
        static info::CEventLootTabledtor_CEventLootTable13_ptr CEventLootTabledtor_CEventLootTable13_next(nullptr);
        static info::CEventLootTabledtor_CEventLootTable13_clbk CEventLootTabledtor_CEventLootTable13_user(nullptr);
        
        static info::CEventLootTable___event_dropctor__event_drop2_ptr CEventLootTable___event_dropctor__event_drop2_next(nullptr);
        static info::CEventLootTable___event_dropctor__event_drop2_clbk CEventLootTable___event_dropctor__event_drop2_user(nullptr);
        
        static void CEventLootTableAddRecord2_wrapper(struct CEventLootTable* _this, struct CEventLootTable::_event_drop* pEventDrop)
        {
           CEventLootTableAddRecord2_user(_this, pEventDrop, CEventLootTableAddRecord2_next);
        };
        static void CEventLootTablector_CEventLootTable4_wrapper(struct CEventLootTable* _this)
        {
           CEventLootTablector_CEventLootTable4_user(_this, CEventLootTablector_CEventLootTable4_next);
        };
        static struct CEventLootTable::_event_drop* CEventLootTableGetRecord6_wrapper(struct CEventLootTable* _this, char* szRecordCode)
        {
           return CEventLootTableGetRecord6_user(_this, szRecordCode, CEventLootTableGetRecord6_next);
        };
        static bool CEventLootTableReadRecord8_wrapper(struct CEventLootTable* _this)
        {
           return CEventLootTableReadRecord8_user(_this, CEventLootTableReadRecord8_next);
        };
        static void CEventLootTabledtor_CEventLootTable13_wrapper(struct CEventLootTable* _this)
        {
           CEventLootTabledtor_CEventLootTable13_user(_this, CEventLootTabledtor_CEventLootTable13_next);
        };
        
        static void CEventLootTable___event_dropctor__event_drop2_wrapper(struct CEventLootTable::_event_drop* _this)
        {
           CEventLootTable___event_dropctor__event_drop2_user(_this, CEventLootTable___event_dropctor__event_drop2_next);
        };
        
        static hook_record CEventLootTable_functions[] = {
        {   (LPVOID)0x140203e70L,
            (LPVOID *)&CEventLootTableAddRecord2_user,
            (LPVOID *)&CEventLootTableAddRecord2_next,
            (LPVOID)cast_pointer_function(CEventLootTableAddRecord2_wrapper),
            (LPVOID)cast_pointer_function((void(CEventLootTable::*)(struct CEventLootTable::_event_drop*))&CEventLootTable::AddRecord) },
        {   (LPVOID)0x140202640L,
            (LPVOID *)&CEventLootTablector_CEventLootTable4_user,
            (LPVOID *)&CEventLootTablector_CEventLootTable4_next,
            (LPVOID)cast_pointer_function(CEventLootTablector_CEventLootTable4_wrapper),
            (LPVOID)cast_pointer_function((void(CEventLootTable::*)())&CEventLootTable::ctor_CEventLootTable) },
        {   (LPVOID)0x140136c80L,
            (LPVOID *)&CEventLootTableGetRecord6_user,
            (LPVOID *)&CEventLootTableGetRecord6_next,
            (LPVOID)cast_pointer_function(CEventLootTableGetRecord6_wrapper),
            (LPVOID)cast_pointer_function((struct CEventLootTable::_event_drop*(CEventLootTable::*)(char*))&CEventLootTable::GetRecord) },
        {   (LPVOID)0x140203ac0L,
            (LPVOID *)&CEventLootTableReadRecord8_user,
            (LPVOID *)&CEventLootTableReadRecord8_next,
            (LPVOID)cast_pointer_function(CEventLootTableReadRecord8_wrapper),
            (LPVOID)cast_pointer_function((bool(CEventLootTable::*)())&CEventLootTable::ReadRecord) },
        {   (LPVOID)0x1402026f0L,
            (LPVOID *)&CEventLootTabledtor_CEventLootTable13_user,
            (LPVOID *)&CEventLootTabledtor_CEventLootTable13_next,
            (LPVOID)cast_pointer_function(CEventLootTabledtor_CEventLootTable13_wrapper),
            (LPVOID)cast_pointer_function((void(CEventLootTable::*)())&CEventLootTable::dtor_CEventLootTable) },
        
        {   (LPVOID)0x140203e10L,
            (LPVOID *)&CEventLootTable___event_dropctor__event_drop2_user,
            (LPVOID *)&CEventLootTable___event_dropctor__event_drop2_next,
            (LPVOID)cast_pointer_function(CEventLootTable___event_dropctor__event_drop2_wrapper),
            (LPVOID)cast_pointer_function((void(CEventLootTable::_event_drop::*)())&CEventLootTable::_event_drop::ctor__event_drop) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
