// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "INI_Section_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::INI_SectionGetKey2_ptr INI_SectionGetKey2_next(nullptr);
        static info::INI_SectionGetKey2_clbk INI_SectionGetKey2_user(nullptr);
        static info::INI_Sectionctor_INI_Section4_ptr INI_Sectionctor_INI_Section4_next(nullptr);
        static info::INI_Sectionctor_INI_Section4_clbk INI_Sectionctor_INI_Section4_user(nullptr);
        static info::INI_Sectiondtor_INI_Section8_ptr INI_Sectiondtor_INI_Section8_next(nullptr);
        static info::INI_Sectiondtor_INI_Section8_clbk INI_Sectiondtor_INI_Section8_user(nullptr);
        
        static struct INI_Key* INI_SectionGetKey2_wrapper(struct INI_Section* _this, char* strKey)
        {
           return INI_SectionGetKey2_user(_this, strKey, INI_SectionGetKey2_next);
        };
        static void INI_Sectionctor_INI_Section4_wrapper(struct INI_Section* _this)
        {
           INI_Sectionctor_INI_Section4_user(_this, INI_Sectionctor_INI_Section4_next);
        };
        static void INI_Sectiondtor_INI_Section8_wrapper(struct INI_Section* _this)
        {
           INI_Sectiondtor_INI_Section8_user(_this, INI_Sectiondtor_INI_Section8_next);
        };
        
        static hook_record INI_Section_functions[] = {
        {   (LPVOID)0x14046c270L,
            (LPVOID *)&INI_SectionGetKey2_user,
            (LPVOID *)&INI_SectionGetKey2_next,
            (LPVOID)cast_pointer_function(INI_SectionGetKey2_wrapper),
            (LPVOID)cast_pointer_function((struct INI_Key*(INI_Section::*)(char*))&INI_Section::GetKey) },
        {   (LPVOID)0x140470050L,
            (LPVOID *)&INI_Sectionctor_INI_Section4_user,
            (LPVOID *)&INI_Sectionctor_INI_Section4_next,
            (LPVOID)cast_pointer_function(INI_Sectionctor_INI_Section4_wrapper),
            (LPVOID)cast_pointer_function((void(INI_Section::*)())&INI_Section::ctor_INI_Section) },
        {   (LPVOID)0x14046fc50L,
            (LPVOID *)&INI_Sectiondtor_INI_Section8_user,
            (LPVOID *)&INI_Sectiondtor_INI_Section8_next,
            (LPVOID)cast_pointer_function(INI_Sectiondtor_INI_Section8_wrapper),
            (LPVOID)cast_pointer_function((void(INI_Section::*)())&INI_Section::dtor_INI_Section) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
