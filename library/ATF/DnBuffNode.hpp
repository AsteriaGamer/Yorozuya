// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "DnBuffNodeVtbl.hpp"


START_ATF_NAMESPACE
    struct DnBuffNode
    {
        enum BuffUserState
        {
            eBuff_empty = 0x0,
            eBuff_open = 0x1,
            eBuf_close = 0x2,
        };
        DnBuffNodeVtbl *vfptr;
        unsigned int m_dwBuffIndex;
        int m_nBuffUserState;
    public:
        DnBuffNode()
        {
            using org_ptr = void (WINAPIV*)(struct DnBuffNode*);
            (org_ptr(0x1402ab2b0L))(this);
        };
        void ctor_DnBuffNode()
        {
            using org_ptr = void (WINAPIV*)(struct DnBuffNode*);
            (org_ptr(0x1402ab2b0L))(this);
        };
        void DnNodeClear()
        {
            using org_ptr = void (WINAPIV*)(struct DnBuffNode*);
            (org_ptr(0x1402ab310L))(this);
        };
        void DnNodeClose()
        {
            using org_ptr = void (WINAPIV*)(struct DnBuffNode*);
            (org_ptr(0x1402ab3b0L))(this);
        };
        void DnNodeOpen(unsigned int dwBuffIndex)
        {
            using org_ptr = void (WINAPIV*)(struct DnBuffNode*, unsigned int);
            (org_ptr(0x1402ab340L))(this, dwBuffIndex);
        };
        unsigned int GetBuffIndex()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct DnBuffNode*);
            return (org_ptr(0x1402ab5c0L))(this);
        };
        ~DnBuffNode()
        {
            using org_ptr = void (WINAPIV*)(struct DnBuffNode*);
            (org_ptr(0x1402ab480L))(this);
        };
        void dtor_DnBuffNode()
        {
            using org_ptr = void (WINAPIV*)(struct DnBuffNode*);
            (org_ptr(0x1402ab480L))(this);
        };
    };
END_ATF_NAMESPACE
