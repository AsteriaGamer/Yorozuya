// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CMoveMapLimitRightInfo.hpp"
#include "CPlayer.hpp"
#include "std__vector.hpp"


START_ATF_NAMESPACE
    struct CMoveMapLimitRightInfoList
    {
        std::vector<CMoveMapLimitRightInfo,std::allocator<CMoveMapLimitRightInfo> > m_vecRight;
    public:
        CMoveMapLimitRightInfoList()
        {
            using org_ptr = void (WINAPIV*)(struct CMoveMapLimitRightInfoList*);
            (org_ptr(0x1403a1e10L))(this);
        };
        void ctor_CMoveMapLimitRightInfoList()
        {
            using org_ptr = void (WINAPIV*)(struct CMoveMapLimitRightInfoList*);
            (org_ptr(0x1403a1e10L))(this);
        };
        void CreateComplete(struct CPlayer* pkPlayer)
        {
            using org_ptr = void (WINAPIV*)(struct CMoveMapLimitRightInfoList*, struct CPlayer*);
            (org_ptr(0x1403add30L))(this, pkPlayer);
        };
        struct CMoveMapLimitRightInfo* Get(int iInx)
        {
            using org_ptr = struct CMoveMapLimitRightInfo* (WINAPIV*)(struct CMoveMapLimitRightInfoList*, int);
            return (org_ptr(0x1403a1fe0L))(this, iInx);
        };
        bool Init(struct std::vector<int,std::allocator<int> >* vecRightTypeList)
        {
            using org_ptr = bool (WINAPIV*)(struct CMoveMapLimitRightInfoList*, struct std::vector<int,std::allocator<int> >*);
            return (org_ptr(0x1403ad800L))(this, vecRightTypeList);
        };
        void Load(struct CPlayer* pkPlayer)
        {
            using org_ptr = void (WINAPIV*)(struct CMoveMapLimitRightInfoList*, struct CPlayer*);
            (org_ptr(0x1403adc10L))(this, pkPlayer);
        };
        void LogIn(struct CPlayer* pkPlayer)
        {
            using org_ptr = void (WINAPIV*)(struct CMoveMapLimitRightInfoList*, struct CPlayer*);
            (org_ptr(0x1403adca0L))(this, pkPlayer);
        };
        void LogOut(struct CPlayer* pkPlayer)
        {
            using org_ptr = void (WINAPIV*)(struct CMoveMapLimitRightInfoList*, struct CPlayer*);
            (org_ptr(0x1403addc0L))(this, pkPlayer);
        };
        ~CMoveMapLimitRightInfoList()
        {
            using org_ptr = void (WINAPIV*)(struct CMoveMapLimitRightInfoList*);
            (org_ptr(0x1403a1e60L))(this);
        };
        void dtor_CMoveMapLimitRightInfoList()
        {
            using org_ptr = void (WINAPIV*)(struct CMoveMapLimitRightInfoList*);
            (org_ptr(0x1403a1e60L))(this);
        };
    };
END_ATF_NAMESPACE
