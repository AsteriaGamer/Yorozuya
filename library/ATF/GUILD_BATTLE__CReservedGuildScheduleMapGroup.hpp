// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "GUILD_BATTLE__CReservedGuildSchedulePage.hpp"
#include "_worlddb_guild_battle_reserved_schedule_info.hpp"


START_ATF_NAMESPACE
    namespace GUILD_BATTLE
    {
        struct CReservedGuildScheduleMapGroup
        {
            unsigned int m_uiMapInx;
            char m_byMaxPage;
            CReservedGuildSchedulePage m_kList[6];
        public:
            CReservedGuildScheduleMapGroup()
            {
                using org_ptr = void (WINAPIV*)(struct CReservedGuildScheduleMapGroup*);
                (org_ptr(0x1403cc340L))(this);
            };
            void ctor_CReservedGuildScheduleMapGroup()
            {
                using org_ptr = void (WINAPIV*)(struct CReservedGuildScheduleMapGroup*);
                (org_ptr(0x1403cc340L))(this);
            };
            bool Clear()
            {
                using org_ptr = bool (WINAPIV*)(struct CReservedGuildScheduleMapGroup*);
                return (org_ptr(0x1403cc4c0L))(this);
            };
            struct CReservedGuildSchedulePage* Find(unsigned int dwGuildSerial)
            {
                using org_ptr = struct CReservedGuildSchedulePage* (WINAPIV*)(struct CReservedGuildScheduleMapGroup*, unsigned int);
                return (org_ptr(0x1403cca30L))(this, dwGuildSerial);
            };
            void Flip()
            {
                using org_ptr = void (WINAPIV*)(struct CReservedGuildScheduleMapGroup*);
                (org_ptr(0x1403ccb50L))(this);
            };
            char GetMaxPage()
            {
                using org_ptr = char (WINAPIV*)(struct CReservedGuildScheduleMapGroup*);
                return (org_ptr(0x1403d0a80L))(this);
            };
            bool Init(unsigned int uiMapInx)
            {
                using org_ptr = bool (WINAPIV*)(struct CReservedGuildScheduleMapGroup*, unsigned int);
                return (org_ptr(0x1403cc420L))(this, uiMapInx);
            };
            bool Load(char byDayID, struct _worlddb_guild_battle_reserved_schedule_info* kInfo)
            {
                using org_ptr = bool (WINAPIV*)(struct CReservedGuildScheduleMapGroup*, char, struct _worlddb_guild_battle_reserved_schedule_info*);
                return (org_ptr(0x1403cc540L))(this, byDayID, kInfo);
            };
            void Send(int n, unsigned int dwVer, char byPage, struct CReservedGuildSchedulePage* pkSelfInfoPage)
            {
                using org_ptr = void (WINAPIV*)(struct CReservedGuildScheduleMapGroup*, int, unsigned int, char, struct CReservedGuildSchedulePage*);
                (org_ptr(0x1403ccad0L))(this, n, dwVer, byPage, pkSelfInfoPage);
            };
            ~CReservedGuildScheduleMapGroup()
            {
                using org_ptr = void (WINAPIV*)(struct CReservedGuildScheduleMapGroup*);
                (org_ptr(0x1403cc3c0L))(this);
            };
            void dtor_CReservedGuildScheduleMapGroup()
            {
                using org_ptr = void (WINAPIV*)(struct CReservedGuildScheduleMapGroup*);
                (org_ptr(0x1403cc3c0L))(this);
            };
        };
    }; // end namespace GUILD_BATTLE
END_ATF_NAMESPACE
