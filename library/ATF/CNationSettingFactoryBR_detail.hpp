// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CNationSettingFactoryBR_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::CNationSettingFactoryBRctor_CNationSettingFactoryBR2_ptr CNationSettingFactoryBRctor_CNationSettingFactoryBR2_next(nullptr);
        static info::CNationSettingFactoryBRctor_CNationSettingFactoryBR2_clbk CNationSettingFactoryBRctor_CNationSettingFactoryBR2_user(nullptr);
        static info::CNationSettingFactoryBRCreate4_ptr CNationSettingFactoryBRCreate4_next(nullptr);
        static info::CNationSettingFactoryBRCreate4_clbk CNationSettingFactoryBRCreate4_user(nullptr);
        
        static void CNationSettingFactoryBRctor_CNationSettingFactoryBR2_wrapper(struct CNationSettingFactoryBR* _this)
        {
           CNationSettingFactoryBRctor_CNationSettingFactoryBR2_user(_this, CNationSettingFactoryBRctor_CNationSettingFactoryBR2_next);
        };
        static struct CNationSettingData* CNationSettingFactoryBRCreate4_wrapper(struct CNationSettingFactoryBR* _this, int iNationCode, char* szNationCodeStr, bool bServiceMode)
        {
           return CNationSettingFactoryBRCreate4_user(_this, iNationCode, szNationCodeStr, bServiceMode, CNationSettingFactoryBRCreate4_next);
        };
        
        static hook_record CNationSettingFactoryBR_functions[] = {
        {   (LPVOID)0x140219700L,
            (LPVOID *)&CNationSettingFactoryBRctor_CNationSettingFactoryBR2_user,
            (LPVOID *)&CNationSettingFactoryBRctor_CNationSettingFactoryBR2_next,
            (LPVOID)cast_pointer_function(CNationSettingFactoryBRctor_CNationSettingFactoryBR2_wrapper),
            (LPVOID)cast_pointer_function((void(CNationSettingFactoryBR::*)())&CNationSettingFactoryBR::ctor_CNationSettingFactoryBR) },
        {   (LPVOID)0x14022f4f0L,
            (LPVOID *)&CNationSettingFactoryBRCreate4_user,
            (LPVOID *)&CNationSettingFactoryBRCreate4_next,
            (LPVOID)cast_pointer_function(CNationSettingFactoryBRCreate4_wrapper),
            (LPVOID)cast_pointer_function((struct CNationSettingData*(CNationSettingFactoryBR::*)(int, char*, bool))&CNationSettingFactoryBR::Create) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
