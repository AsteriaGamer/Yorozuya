// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CCharacter.hpp"
#include "CGameObject.hpp"
#include "CPlayer.hpp"
#include "CRecordData.hpp"
#include "_attack_param.hpp"
#include "_be_damaged_char.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 8)
    struct CAttack
    {
        _attack_param *m_pp;
        CCharacter *m_pAttChar;
        bool m_bIsCrtAtt;
        bool m_bActiveSucc;
        int m_nDamagedObjNum;
        _be_damaged_char m_DamList[30];
        bool m_bFailure;
    public:
        void AreaDamageProc(int nLimitRadius, int nAttPower, float* pTar, int nEffAttPower, bool bUseEffBullet)
        {
            using org_ptr = void (WINAPIV*)(struct CAttack*, int, int, float*, int, bool);
            (org_ptr(0x14016c320L))(this, nLimitRadius, nAttPower, pTar, nEffAttPower, bUseEffBullet);
        };
        void AttackForce(struct _attack_param* pParam, bool bUseEffBullet)
        {
            using org_ptr = void (WINAPIV*)(struct CAttack*, struct _attack_param*, bool);
            (org_ptr(0x14016a210L))(this, pParam, bUseEffBullet);
        };
        void AttackGen(struct _attack_param* pParam, bool bMustMiss, bool bUseEffBullet)
        {
            using org_ptr = void (WINAPIV*)(struct CAttack*, struct _attack_param*, bool, bool);
            (org_ptr(0x140169520L))(this, pParam, bMustMiss, bUseEffBullet);
        };
        CAttack(struct CCharacter* pThis)
        {
            using org_ptr = void (WINAPIV*)(struct CAttack*, struct CCharacter*);
            (org_ptr(0x140169480L))(this, pThis);
        };
        void ctor_CAttack(struct CCharacter* pThis)
        {
            using org_ptr = void (WINAPIV*)(struct CAttack*, struct CCharacter*);
            (org_ptr(0x140169480L))(this, pThis);
        };
        void CalcAvgDamage()
        {
            using org_ptr = void (WINAPIV*)(struct CAttack*);
            (org_ptr(0x14016dbb0L))(this);
        };
        bool CheckGuildBattleLimit(struct CGameObject* pObject, bool* pbInGuildBattle)
        {
            using org_ptr = bool (WINAPIV*)(struct CAttack*, struct CGameObject*, bool*);
            return (org_ptr(0x14016b570L))(this, pObject, pbInGuildBattle);
        };
        void FlashDamageProc(int nLimDist, int nAttPower, int nAngle, int nEffAttPower, bool bUseEffBullet)
        {
            using org_ptr = void (WINAPIV*)(struct CAttack*, int, int, int, int, bool);
            (org_ptr(0x14016b6f0L))(this, nLimDist, nAttPower, nAngle, nEffAttPower, bUseEffBullet);
        };
        float GetAttackFC(struct CPlayer* pPlayer, char bySkill, bool bNear, bool bUnit)
        {
            using org_ptr = float (WINAPIV*)(struct CAttack*, struct CPlayer*, char, bool, bool);
            return (org_ptr(0x14016dd00L))(this, pPlayer, bySkill, bNear, bUnit);
        };
        static int GetMeleeSkillIndex(int nMeleeTechCode)
        {
            using org_ptr = int (WINAPIV*)(int);
            return (org_ptr(0x14016d880L))(nMeleeTechCode);
        };
        static int IsCharInSector(float* chkpos, float* src, float* dest, float angle, float radius)
        {
            using org_ptr = int (WINAPIV*)(float*, float*, float*, float, float);
            return (org_ptr(0x14016d920L))(chkpos, src, dest, angle, radius);
        };
        int MonsterCritical_Exception_Rate(struct CCharacter* pCharacter, bool bBackAttack)
        {
            using org_ptr = int (WINAPIV*)(struct CAttack*, struct CCharacter*, bool);
            return (org_ptr(0x14016a8f0L))(this, pCharacter, bBackAttack);
        };
        void SectorDamageProc(int nSkillLv, int nAttPower, int nAngle, int nShotNum, int nWeaponRange, int nEffAttPower, bool bUseEffBullet)
        {
            using org_ptr = void (WINAPIV*)(struct CAttack*, int, int, int, int, int, int, bool);
            (org_ptr(0x14016cdd0L))(this, nSkillLv, nAttPower, nAngle, nShotNum, nWeaponRange, nEffAttPower, bUseEffBullet);
        };
        void SetActiveSucc(bool bSucc)
        {
            using org_ptr = void (WINAPIV*)(struct CAttack*, bool);
            (org_ptr(0x14008e710L))(this, bSucc);
        };
        static void SetStaticMember(struct CRecordData* pSkillData)
        {
            using org_ptr = void (WINAPIV*)(struct CRecordData*);
            (org_ptr(0x14016d860L))(pSkillData);
        };
        int _CalcForceAttPnt(bool bUseEffBullet)
        {
            using org_ptr = int (WINAPIV*)(struct CAttack*, bool);
            return (org_ptr(0x14016af70L))(this, bUseEffBullet);
        };
        int _CalcGenAttPnt(bool bUseEffBullet)
        {
            using org_ptr = int (WINAPIV*)(struct CAttack*, bool);
            return (org_ptr(0x14016aa00L))(this, bUseEffBullet);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
