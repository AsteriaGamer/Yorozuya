// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "DnBuffNode_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::DnBuffNodector_DnBuffNode2_ptr DnBuffNodector_DnBuffNode2_next(nullptr);
        info::DnBuffNodector_DnBuffNode2_clbk DnBuffNodector_DnBuffNode2_user(nullptr);
        info::DnBuffNodeDnNodeClear4_ptr DnBuffNodeDnNodeClear4_next(nullptr);
        info::DnBuffNodeDnNodeClear4_clbk DnBuffNodeDnNodeClear4_user(nullptr);
        info::DnBuffNodeDnNodeClose6_ptr DnBuffNodeDnNodeClose6_next(nullptr);
        info::DnBuffNodeDnNodeClose6_clbk DnBuffNodeDnNodeClose6_user(nullptr);
        info::DnBuffNodeDnNodeOpen8_ptr DnBuffNodeDnNodeOpen8_next(nullptr);
        info::DnBuffNodeDnNodeOpen8_clbk DnBuffNodeDnNodeOpen8_user(nullptr);
        info::DnBuffNodeGetBuffIndex10_ptr DnBuffNodeGetBuffIndex10_next(nullptr);
        info::DnBuffNodeGetBuffIndex10_clbk DnBuffNodeGetBuffIndex10_user(nullptr);
        info::DnBuffNodedtor_DnBuffNode15_ptr DnBuffNodedtor_DnBuffNode15_next(nullptr);
        info::DnBuffNodedtor_DnBuffNode15_clbk DnBuffNodedtor_DnBuffNode15_user(nullptr);
        
        void DnBuffNodector_DnBuffNode2_wrapper(struct DnBuffNode* _this)
        {
           DnBuffNodector_DnBuffNode2_user(_this, DnBuffNodector_DnBuffNode2_next);
        };
        void DnBuffNodeDnNodeClear4_wrapper(struct DnBuffNode* _this)
        {
           DnBuffNodeDnNodeClear4_user(_this, DnBuffNodeDnNodeClear4_next);
        };
        void DnBuffNodeDnNodeClose6_wrapper(struct DnBuffNode* _this)
        {
           DnBuffNodeDnNodeClose6_user(_this, DnBuffNodeDnNodeClose6_next);
        };
        void DnBuffNodeDnNodeOpen8_wrapper(struct DnBuffNode* _this, unsigned int dwBuffIndex)
        {
           DnBuffNodeDnNodeOpen8_user(_this, dwBuffIndex, DnBuffNodeDnNodeOpen8_next);
        };
        unsigned int DnBuffNodeGetBuffIndex10_wrapper(struct DnBuffNode* _this)
        {
           return DnBuffNodeGetBuffIndex10_user(_this, DnBuffNodeGetBuffIndex10_next);
        };
        void DnBuffNodedtor_DnBuffNode15_wrapper(struct DnBuffNode* _this)
        {
           DnBuffNodedtor_DnBuffNode15_user(_this, DnBuffNodedtor_DnBuffNode15_next);
        };
        
        hook_record DnBuffNode_functions[] = {
        {   (LPVOID)0x1402ab2b0L,
            (LPVOID *)&DnBuffNodector_DnBuffNode2_user,
            (LPVOID *)&DnBuffNodector_DnBuffNode2_next,
            (LPVOID)cast_pointer_function(DnBuffNodector_DnBuffNode2_wrapper),
            (LPVOID)cast_pointer_function((void(DnBuffNode::*)())&DnBuffNode::ctor_DnBuffNode) },
        {   (LPVOID)0x1402ab310L,
            (LPVOID *)&DnBuffNodeDnNodeClear4_user,
            (LPVOID *)&DnBuffNodeDnNodeClear4_next,
            (LPVOID)cast_pointer_function(DnBuffNodeDnNodeClear4_wrapper),
            (LPVOID)cast_pointer_function((void(DnBuffNode::*)())&DnBuffNode::DnNodeClear) },
        {   (LPVOID)0x1402ab3b0L,
            (LPVOID *)&DnBuffNodeDnNodeClose6_user,
            (LPVOID *)&DnBuffNodeDnNodeClose6_next,
            (LPVOID)cast_pointer_function(DnBuffNodeDnNodeClose6_wrapper),
            (LPVOID)cast_pointer_function((void(DnBuffNode::*)())&DnBuffNode::DnNodeClose) },
        {   (LPVOID)0x1402ab340L,
            (LPVOID *)&DnBuffNodeDnNodeOpen8_user,
            (LPVOID *)&DnBuffNodeDnNodeOpen8_next,
            (LPVOID)cast_pointer_function(DnBuffNodeDnNodeOpen8_wrapper),
            (LPVOID)cast_pointer_function((void(DnBuffNode::*)(unsigned int))&DnBuffNode::DnNodeOpen) },
        {   (LPVOID)0x1402ab5c0L,
            (LPVOID *)&DnBuffNodeGetBuffIndex10_user,
            (LPVOID *)&DnBuffNodeGetBuffIndex10_next,
            (LPVOID)cast_pointer_function(DnBuffNodeGetBuffIndex10_wrapper),
            (LPVOID)cast_pointer_function((unsigned int(DnBuffNode::*)())&DnBuffNode::GetBuffIndex) },
        {   (LPVOID)0x1402ab480L,
            (LPVOID *)&DnBuffNodedtor_DnBuffNode15_user,
            (LPVOID *)&DnBuffNodedtor_DnBuffNode15_next,
            (LPVOID)cast_pointer_function(DnBuffNodedtor_DnBuffNode15_wrapper),
            (LPVOID)cast_pointer_function((void(DnBuffNode::*)())&DnBuffNode::dtor_DnBuffNode) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
