// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CMyTimer.hpp"
#include "Player_TL_Status.hpp"
#include "_SYSTEMTIME.hpp"
#include "tm.hpp"


START_ATF_NAMESPACE
    struct TimeLimitMgr
    {
        CMyTimer m_tmLoopTime;
        Player_TL_Status m_lstTLStaus[2532];
        unsigned __int16 m_wEnable;
        unsigned __int16 m_wPeriodCnt;
        unsigned int m_dwLogoutTerm;
        unsigned int m_dwNotifyTerm;
        unsigned __int16 *m_pwTime;
        unsigned __int16 *m_pwFatigue;
        long double *m_pdPercent;
        unsigned int m_dwPlayFDegree;
        unsigned int m_dwLogoutFDegree;
    public:
        void Chack_Time()
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitMgr*);
            (org_ptr(0x14040e500L))(this);
        };
        bool CheckPlayerStatus(uint16_t wIndex, unsigned int dwLastContSaveTime, char* pbyStatus, unsigned int* pdwFatigue)
        {
            using org_ptr = bool (WINAPIV*)(struct TimeLimitMgr*, uint16_t, unsigned int, char*, unsigned int*);
            return (org_ptr(0x14040e860L))(this, wIndex, dwLastContSaveTime, pbyStatus, pdwFatigue);
        };
        unsigned int ClacLastLogoutTimeSec(unsigned int dwLastConnTime)
        {
            using org_ptr = unsigned int (WINAPIV*)(struct TimeLimitMgr*, unsigned int);
            return (org_ptr(0x14040dc30L))(this, dwLastConnTime);
        };
        unsigned int ClacLastLogoutTimeToFatigue(unsigned int dwLastConnTime)
        {
            using org_ptr = unsigned int (WINAPIV*)(struct TimeLimitMgr*, unsigned int);
            return (org_ptr(0x14040d8f0L))(this, dwLastConnTime);
        };
        void Delete_All()
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitMgr*);
            (org_ptr(0x14040e480L))(this);
        };
        struct Player_TL_Status* Find_Data(unsigned int dwSerial)
        {
            using org_ptr = struct Player_TL_Status* (WINAPIV*)(struct TimeLimitMgr*, unsigned int);
            return (org_ptr(0x14040e3b0L))(this, dwSerial);
        };
        struct Player_TL_Status* Find_Data(uint16_t wIndex)
        {
            using org_ptr = struct Player_TL_Status* (WINAPIV*)(struct TimeLimitMgr*, uint16_t);
            return (org_ptr(0x14040e360L))(this, wIndex);
        };
        uint16_t GetEndPlayTime()
        {
            using org_ptr = uint16_t (WINAPIV*)(struct TimeLimitMgr*);
            return (org_ptr(0x1400f0760L))(this);
        };
        uint16_t GetPeriodCnt()
        {
            using org_ptr = uint16_t (WINAPIV*)(struct TimeLimitMgr*);
            return (org_ptr(0x14029da20L))(this);
        };
        unsigned int GetPlayFDegree()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct TimeLimitMgr*);
            return (org_ptr(0x1400f0740L))(this);
        };
        uint16_t GetPlayerData(uint16_t wIndex, char* psStatus, long double* pdPercent)
        {
            using org_ptr = uint16_t (WINAPIV*)(struct TimeLimitMgr*, uint16_t, char*, long double*);
            return (org_ptr(0x14040ed20L))(this, wIndex, psStatus, pdPercent);
        };
        long double GetPlayerPenalty(uint16_t wIndex)
        {
            using org_ptr = long double (WINAPIV*)(struct TimeLimitMgr*, uint16_t);
            return (org_ptr(0x14040ebf0L))(this, wIndex);
        };
        char GetPlayerStatus(uint16_t wIndex)
        {
            using org_ptr = char (WINAPIV*)(struct TimeLimitMgr*, uint16_t);
            return (org_ptr(0x14040eca0L))(this, wIndex);
        };
        void InitializeTLMgr()
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitMgr*);
            (org_ptr(0x14040d4e0L))(this);
        };
        void InsertPlayerStatus(uint16_t wIndex, unsigned int dwAccountSerial, char byStatus, unsigned int dwFatigue, unsigned int dwLastLogoutTime, bool bAgeLimit)
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitMgr*, uint16_t, unsigned int, char, unsigned int, unsigned int, bool);
            (org_ptr(0x14040ea70L))(this, wIndex, dwAccountSerial, byStatus, dwFatigue, dwLastLogoutTime, bAgeLimit);
        };
        static struct TimeLimitMgr* Instance()
        {
            using org_ptr = struct TimeLimitMgr* (WINAPIV*)();
            return (org_ptr(0x14040ce50L))();
        };
        void LoadTLINIFile()
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitMgr*);
            (org_ptr(0x14040cf10L))(this);
        };
        void Pop_Data(unsigned int dwAccountSerial, uint16_t wIndex)
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitMgr*, unsigned int, uint16_t);
            (org_ptr(0x14040e2d0L))(this, dwAccountSerial, wIndex);
        };
        void Push_Data(struct Player_TL_Status* data, uint16_t wIndex)
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitMgr*, struct Player_TL_Status*, uint16_t);
            (org_ptr(0x14040e1f0L))(this, data, wIndex);
        };
        void ReInitFatigue()
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitMgr*);
            (org_ptr(0x14040d610L))(this);
        };
        void ReSetPercent(uint16_t wIndex)
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitMgr*, uint16_t);
            (org_ptr(0x14040d6c0L))(this, wIndex);
        };
        bool SetConfig(uint16_t time1, uint16_t time2, uint16_t time3, uint16_t time4, uint16_t time5)
        {
            using org_ptr = bool (WINAPIV*)(struct TimeLimitMgr*, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t);
            return (org_ptr(0x14040edb0L))(this, time1, time2, time3, time4, time5);
        };
        void SetLogoutFDegree(unsigned int dwDegree)
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitMgr*, unsigned int);
            (org_ptr(0x14029dab0L))(this, dwDegree);
        };
        void SetPlayFDegree(unsigned int dwDegree)
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitMgr*, unsigned int);
            (org_ptr(0x14029da80L))(this, dwDegree);
        };
        void SetTLEnable(uint16_t wState)
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitMgr*, uint16_t);
            (org_ptr(0x14029daf0L))(this, wState);
        };
        void SetTime(unsigned int dwTime, uint16_t iIndex)
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitMgr*, unsigned int, uint16_t);
            (org_ptr(0x14029da40L))(this, dwTime, iIndex);
        };
        unsigned int SumMinuteBetweenSec(struct tm* tmLast)
        {
            using org_ptr = unsigned int (WINAPIV*)(struct TimeLimitMgr*, struct tm*);
            return (org_ptr(0x14040e0d0L))(this, tmLast);
        };
        unsigned int SumMinuteOne(struct _SYSTEMTIME* tm)
        {
            using org_ptr = unsigned int (WINAPIV*)(struct TimeLimitMgr*, struct _SYSTEMTIME*);
            return (org_ptr(0x14040df50L))(this, tm);
        };
        TimeLimitMgr()
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitMgr*);
            (org_ptr(0x14040ccd0L))(this);
        };
        void ctor_TimeLimitMgr()
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitMgr*);
            (org_ptr(0x14040ccd0L))(this);
        };
        bool UpdatePlayerStatus(uint16_t wIndex, unsigned int dwFatigue, char wStatus)
        {
            using org_ptr = bool (WINAPIV*)(struct TimeLimitMgr*, uint16_t, unsigned int, char);
            return (org_ptr(0x14040eb20L))(this, wIndex, dwFatigue, wStatus);
        };
        ~TimeLimitMgr()
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitMgr*);
            (org_ptr(0x14040cd40L))(this);
        };
        void dtor_TimeLimitMgr()
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitMgr*);
            (org_ptr(0x14040cd40L))(this);
        };
    };
END_ATF_NAMESPACE
