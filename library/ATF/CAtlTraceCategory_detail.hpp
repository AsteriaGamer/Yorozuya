// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CAtlTraceCategory_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::CAtlTraceCategoryctor_CAtlTraceCategory1_ptr CAtlTraceCategoryctor_CAtlTraceCategory1_next(nullptr);
        info::CAtlTraceCategoryctor_CAtlTraceCategory1_clbk CAtlTraceCategoryctor_CAtlTraceCategory1_user(nullptr);
        info::CAtlTraceCategoryName2_ptr CAtlTraceCategoryName2_next(nullptr);
        info::CAtlTraceCategoryName2_clbk CAtlTraceCategoryName2_user(nullptr);
        info::CAtlTraceCategoryReset3_ptr CAtlTraceCategoryReset3_next(nullptr);
        info::CAtlTraceCategoryReset3_clbk CAtlTraceCategoryReset3_user(nullptr);
        
        void CAtlTraceCategoryctor_CAtlTraceCategory1_wrapper(struct CAtlTraceCategory* _this)
        {
           CAtlTraceCategoryctor_CAtlTraceCategory1_user(_this, CAtlTraceCategoryctor_CAtlTraceCategory1_next);
        };
        wchar_t* CAtlTraceCategoryName2_wrapper(struct CAtlTraceCategory* _this)
        {
           return CAtlTraceCategoryName2_user(_this, CAtlTraceCategoryName2_next);
        };
        void CAtlTraceCategoryReset3_wrapper(struct CAtlTraceCategory* _this, wchar_t* pszName, int nModuleCookie)
        {
           CAtlTraceCategoryReset3_user(_this, pszName, nModuleCookie, CAtlTraceCategoryReset3_next);
        };
        
        hook_record CAtlTraceCategory_functions[] = {
        {   (LPVOID)0x140675fd0L,
            (LPVOID *)&CAtlTraceCategoryctor_CAtlTraceCategory1_user,
            (LPVOID *)&CAtlTraceCategoryctor_CAtlTraceCategory1_next,
            (LPVOID)cast_pointer_function(CAtlTraceCategoryctor_CAtlTraceCategory1_wrapper),
            (LPVOID)cast_pointer_function((void(CAtlTraceCategory::*)())&CAtlTraceCategory::ctor_CAtlTraceCategory) },
        {   (LPVOID)0x14066ffb0L,
            (LPVOID *)&CAtlTraceCategoryName2_user,
            (LPVOID *)&CAtlTraceCategoryName2_next,
            (LPVOID)cast_pointer_function(CAtlTraceCategoryName2_wrapper),
            (LPVOID)cast_pointer_function((wchar_t*(CAtlTraceCategory::*)())&CAtlTraceCategory::Name) },
        {   (LPVOID)0x140676020L,
            (LPVOID *)&CAtlTraceCategoryReset3_user,
            (LPVOID *)&CAtlTraceCategoryReset3_next,
            (LPVOID)cast_pointer_function(CAtlTraceCategoryReset3_wrapper),
            (LPVOID)cast_pointer_function((void(CAtlTraceCategory::*)(wchar_t*, int))&CAtlTraceCategory::Reset) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
