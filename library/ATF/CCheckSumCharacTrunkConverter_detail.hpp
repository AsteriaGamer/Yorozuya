// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CCheckSumCharacTrunkConverter_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::CCheckSumCharacTrunkConverterConvert2_ptr CCheckSumCharacTrunkConverterConvert2_next(nullptr);
        static info::CCheckSumCharacTrunkConverterConvert2_clbk CCheckSumCharacTrunkConverterConvert2_user(nullptr);
        static info::CCheckSumCharacTrunkConverterConvertTrunk4_ptr CCheckSumCharacTrunkConverterConvertTrunk4_next(nullptr);
        static info::CCheckSumCharacTrunkConverterConvertTrunk4_clbk CCheckSumCharacTrunkConverterConvertTrunk4_user(nullptr);
        
        static void CCheckSumCharacTrunkConverterConvert2_wrapper(struct CCheckSumCharacTrunkConverter* _this, struct _AVATOR_DATA* pAvator, struct CCheckSumCharacAccountTrunkData* pkCheckSum)
        {
           CCheckSumCharacTrunkConverterConvert2_user(_this, pAvator, pkCheckSum, CCheckSumCharacTrunkConverterConvert2_next);
        };
        static void CCheckSumCharacTrunkConverterConvertTrunk4_wrapper(struct CCheckSumCharacTrunkConverter* _this, unsigned int dwSerial, long double* pVal)
        {
           CCheckSumCharacTrunkConverterConvertTrunk4_user(_this, dwSerial, pVal, CCheckSumCharacTrunkConverterConvertTrunk4_next);
        };
        
        static hook_record CCheckSumCharacTrunkConverter_functions[] = {
        {   (LPVOID)0x1402c14d0L,
            (LPVOID *)&CCheckSumCharacTrunkConverterConvert2_user,
            (LPVOID *)&CCheckSumCharacTrunkConverterConvert2_next,
            (LPVOID)cast_pointer_function(CCheckSumCharacTrunkConverterConvert2_wrapper),
            (LPVOID)cast_pointer_function((void(CCheckSumCharacTrunkConverter::*)(struct _AVATOR_DATA*, struct CCheckSumCharacAccountTrunkData*))&CCheckSumCharacTrunkConverter::Convert) },
        {   (LPVOID)0x1402c16c0L,
            (LPVOID *)&CCheckSumCharacTrunkConverterConvertTrunk4_user,
            (LPVOID *)&CCheckSumCharacTrunkConverterConvertTrunk4_next,
            (LPVOID)cast_pointer_function(CCheckSumCharacTrunkConverterConvertTrunk4_wrapper),
            (LPVOID)cast_pointer_function((void(CCheckSumCharacTrunkConverter::*)(unsigned int, long double*))&CCheckSumCharacTrunkConverter::ConvertTrunk) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
