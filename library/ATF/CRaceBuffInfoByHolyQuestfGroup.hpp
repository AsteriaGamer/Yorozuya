// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CPlayer.hpp"
#include "std__vector.hpp"
#include "CRaceBuffInfoByHolyQuest.hpp"

START_ATF_NAMESPACE
    struct CRaceBuffInfoByHolyQuestfGroup
    {
        enum RESULT_TYPE
        {
            RT_WINGETSCANER = 0x0,
            RT_WINEMPTYSCANER = 0x1,
            RT_FAIL = 0x2,
            RT_LOSE = 0x3,
            RT_MAX_TYPE_NUM = 0x4,
        };
        unsigned int m_uiNTh;
        std::vector<CRaceBuffInfoByHolyQuest *> m_vecInfo;
    public:
        bool Apply(int iResultType, struct CPlayer* pkDest)
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBuffInfoByHolyQuestfGroup*, int, struct CPlayer*);
            return (org_ptr(0x1403b4c70L))(this, iResultType, pkDest);
        };
        CRaceBuffInfoByHolyQuestfGroup(unsigned int uiNTh)
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBuffInfoByHolyQuestfGroup*, unsigned int);
            (org_ptr(0x1403b7ab0L))(this, uiNTh);
        };
        void ctor_CRaceBuffInfoByHolyQuestfGroup(unsigned int uiNTh)
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBuffInfoByHolyQuestfGroup*, unsigned int);
            (org_ptr(0x1403b7ab0L))(this, uiNTh);
        };
        bool CreateComplete(int iResultType, struct CPlayer* pkDest)
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBuffInfoByHolyQuestfGroup*, int, struct CPlayer*);
            return (org_ptr(0x1403b4bd0L))(this, iResultType, pkDest);
        };
        bool Init()
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBuffInfoByHolyQuestfGroup*);
            return (org_ptr(0x1403b4a30L))(this);
        };
        bool Release(int iResultType, struct CPlayer* pkDest)
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBuffInfoByHolyQuestfGroup*, int, struct CPlayer*);
            return (org_ptr(0x1403b4d10L))(this, iResultType, pkDest);
        };
        ~CRaceBuffInfoByHolyQuestfGroup()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBuffInfoByHolyQuestfGroup*);
            (org_ptr(0x1403b4790L))(this);
        };
        void dtor_CRaceBuffInfoByHolyQuestfGroup()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBuffInfoByHolyQuestfGroup*);
            (org_ptr(0x1403b4790L))(this);
        };
    };
END_ATF_NAMESPACE
