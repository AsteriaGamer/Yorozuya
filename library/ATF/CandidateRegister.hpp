// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CPlayer.hpp"
#include "Cmd.hpp"
#include "ElectProcessor.hpp"
#include "_pt_result_fcandidacy_list_zocl.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 8)
    struct  CandidateRegister : ElectProcessor
    {
        char _byPtType[2];
        _pt_result_fcandidacy_list_zocl _kSend[3];
        bool _bInitCandidate;
    public:
        CandidateRegister()
			: ElectProcessor(ElectProcessor::ProcessorType::_eCandidateRegister)
        {
            using org_ptr = void (WINAPIV*)(struct CandidateRegister*);
            (org_ptr(0x1402b6720L))(this);
        };
        void ctor_CandidateRegister()
        {
            using org_ptr = void (WINAPIV*)(struct CandidateRegister*);
            (org_ptr(0x1402b6720L))(this);
        };
        int Doit(Cmd eCmd, struct CPlayer* pOne, char* pdata)
        {
            using org_ptr = int (WINAPIV*)(struct CandidateRegister*, Cmd, struct CPlayer*, char*);
            return (org_ptr(0x1402b68f0L))(this, eCmd, pOne, pdata);
        };
        bool Initialize()
        {
            using org_ptr = bool (WINAPIV*)(struct CandidateRegister*);
            return (org_ptr(0x1402b67e0L))(this);
        };
        bool _AddToPacket(struct CPlayer* pOne, unsigned int dwWinCnt)
        {
            using org_ptr = bool (WINAPIV*)(struct CandidateRegister*, struct CPlayer*, unsigned int);
            return (org_ptr(0x1402b6e40L))(this, pOne, dwWinCnt);
        };
        int _CheckPlayerInfo(struct CPlayer* pOne)
        {
            using org_ptr = int (WINAPIV*)(struct CandidateRegister*, struct CPlayer*);
            return (org_ptr(0x1402b6d70L))(this, pOne);
        };
        void _InitCandidate()
        {
            using org_ptr = void (WINAPIV*)(struct CandidateRegister*);
            (org_ptr(0x1402b70c0L))(this);
        };
        int _Regist(struct CPlayer* pOne, char* pdata)
        {
            using org_ptr = int (WINAPIV*)(struct CandidateRegister*, struct CPlayer*, char*);
            return (org_ptr(0x1402b6a40L))(this, pOne, pdata);
        };
        int _SendList(uint16_t wSock, char byRace)
        {
            using org_ptr = int (WINAPIV*)(struct CandidateRegister*, uint16_t, char);
            return (org_ptr(0x1402b6cc0L))(this, wSock, byRace);
        };
        void _SortCandidacyByPvpPoint(char byRace)
        {
            using org_ptr = void (WINAPIV*)(struct CandidateRegister*, char);
            (org_ptr(0x1402b7530L))(this, byRace);
        };
        void _UpdatePacketWin(char byRace, char* wszName, unsigned int dwWinCnt)
        {
            using org_ptr = void (WINAPIV*)(struct CandidateRegister*, char, char*, unsigned int);
            (org_ptr(0x1402b7430L))(this, byRace, wszName, dwWinCnt);
        };
        ~CandidateRegister()
        {
            using org_ptr = void (WINAPIV*)(struct CandidateRegister*);
            (org_ptr(0x1402b7df0L))(this);
        };
        void dtor_CandidateRegister()
        {
            using org_ptr = void (WINAPIV*)(struct CandidateRegister*);
            (org_ptr(0x1402b7df0L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
