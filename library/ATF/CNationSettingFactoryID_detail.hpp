// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CNationSettingFactoryID_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::CNationSettingFactoryIDctor_CNationSettingFactoryID2_ptr CNationSettingFactoryIDctor_CNationSettingFactoryID2_next(nullptr);
        info::CNationSettingFactoryIDctor_CNationSettingFactoryID2_clbk CNationSettingFactoryIDctor_CNationSettingFactoryID2_user(nullptr);
        info::CNationSettingFactoryIDCreate4_ptr CNationSettingFactoryIDCreate4_next(nullptr);
        info::CNationSettingFactoryIDCreate4_clbk CNationSettingFactoryIDCreate4_user(nullptr);
        
        void CNationSettingFactoryIDctor_CNationSettingFactoryID2_wrapper(struct CNationSettingFactoryID* _this)
        {
           CNationSettingFactoryIDctor_CNationSettingFactoryID2_user(_this, CNationSettingFactoryIDctor_CNationSettingFactoryID2_next);
        };
        struct CNationSettingData* CNationSettingFactoryIDCreate4_wrapper(struct CNationSettingFactoryID* _this, int iNationCode, char* szNationCodeStr, bool bServiceMode)
        {
           return CNationSettingFactoryIDCreate4_user(_this, iNationCode, szNationCodeStr, bServiceMode, CNationSettingFactoryIDCreate4_next);
        };
        
        hook_record CNationSettingFactoryID_functions[] = {
        {   (LPVOID)0x140219580L,
            (LPVOID *)&CNationSettingFactoryIDctor_CNationSettingFactoryID2_user,
            (LPVOID *)&CNationSettingFactoryIDctor_CNationSettingFactoryID2_next,
            (LPVOID)cast_pointer_function(CNationSettingFactoryIDctor_CNationSettingFactoryID2_wrapper),
            (LPVOID)cast_pointer_function((void(CNationSettingFactoryID::*)())&CNationSettingFactoryID::ctor_CNationSettingFactoryID) },
        {   (LPVOID)0x14022c590L,
            (LPVOID *)&CNationSettingFactoryIDCreate4_user,
            (LPVOID *)&CNationSettingFactoryIDCreate4_next,
            (LPVOID)cast_pointer_function(CNationSettingFactoryIDCreate4_wrapper),
            (LPVOID)cast_pointer_function((struct CNationSettingData*(CNationSettingFactoryID::*)(int, char*, bool))&CNationSettingFactoryID::Create) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
