// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CUnmannedTraderSubClassInfo.hpp"
#include "std__vector.hpp"


START_ATF_NAMESPACE
    struct CUnmannedTraderSubClassFactory
    {
        std::vector<CUnmannedTraderSubClassInfo *,std::allocator<CUnmannedTraderSubClassInfo *> > m_vecTable;
    public:
        CUnmannedTraderSubClassFactory()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderSubClassFactory*);
            (org_ptr(0x1403851a0L))(this);
        };
        void ctor_CUnmannedTraderSubClassFactory()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderSubClassFactory*);
            (org_ptr(0x1403851a0L))(this);
        };
        struct CUnmannedTraderSubClassInfo* Create(char* szType, unsigned int dwID)
        {
            using org_ptr = struct CUnmannedTraderSubClassInfo* (WINAPIV*)(struct CUnmannedTraderSubClassFactory*, char*, unsigned int);
            return (org_ptr(0x1403856f0L))(this, szType, dwID);
        };
        void Destroy()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderSubClassFactory*);
            (org_ptr(0x1403858e0L))(this);
        };
        bool Regist(struct CUnmannedTraderSubClassInfo* pkType)
        {
            using org_ptr = bool (WINAPIV*)(struct CUnmannedTraderSubClassFactory*, struct CUnmannedTraderSubClassInfo*);
            return (org_ptr(0x1403854c0L))(this, pkType);
        };
        ~CUnmannedTraderSubClassFactory()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderSubClassFactory*);
            (org_ptr(0x140385440L))(this);
        };
        void dtor_CUnmannedTraderSubClassFactory()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderSubClassFactory*);
            (org_ptr(0x140385440L))(this);
        };
    };
END_ATF_NAMESPACE
