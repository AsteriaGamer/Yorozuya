// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_quick_link_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::_quick_linkctor__quick_link2_ptr _quick_linkctor__quick_link2_next(nullptr);
        static info::_quick_linkctor__quick_link2_clbk _quick_linkctor__quick_link2_user(nullptr);
        static info::_quick_linkinit4_ptr _quick_linkinit4_next(nullptr);
        static info::_quick_linkinit4_clbk _quick_linkinit4_user(nullptr);
        
        static void _quick_linkctor__quick_link2_wrapper(struct _quick_link* _this)
        {
           _quick_linkctor__quick_link2_user(_this, _quick_linkctor__quick_link2_next);
        };
        static void _quick_linkinit4_wrapper(struct _quick_link* _this)
        {
           _quick_linkinit4_user(_this, _quick_linkinit4_next);
        };
        
        static hook_record _quick_link_functions[] = {
        {   (LPVOID)0x14010e060L,
            (LPVOID *)&_quick_linkctor__quick_link2_user,
            (LPVOID *)&_quick_linkctor__quick_link2_next,
            (LPVOID)cast_pointer_function(_quick_linkctor__quick_link2_wrapper),
            (LPVOID)cast_pointer_function((void(_quick_link::*)())&_quick_link::ctor__quick_link) },
        {   (LPVOID)0x14010e0b0L,
            (LPVOID *)&_quick_linkinit4_user,
            (LPVOID *)&_quick_linkinit4_next,
            (LPVOID)cast_pointer_function(_quick_linkinit4_wrapper),
            (LPVOID)cast_pointer_function((void(_quick_link::*)())&_quick_link::init) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
