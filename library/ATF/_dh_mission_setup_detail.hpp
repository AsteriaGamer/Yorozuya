// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_dh_mission_setup_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::_dh_mission_setupctor__dh_mission_setup2_ptr _dh_mission_setupctor__dh_mission_setup2_next(nullptr);
        static info::_dh_mission_setupctor__dh_mission_setup2_clbk _dh_mission_setupctor__dh_mission_setup2_user(nullptr);
        static info::_dh_mission_setupdtor__dh_mission_setup7_ptr _dh_mission_setupdtor__dh_mission_setup7_next(nullptr);
        static info::_dh_mission_setupdtor__dh_mission_setup7_clbk _dh_mission_setupdtor__dh_mission_setup7_user(nullptr);
        
        static void _dh_mission_setupctor__dh_mission_setup2_wrapper(struct _dh_mission_setup* _this)
        {
           _dh_mission_setupctor__dh_mission_setup2_user(_this, _dh_mission_setupctor__dh_mission_setup2_next);
        };
        static void _dh_mission_setupdtor__dh_mission_setup7_wrapper(struct _dh_mission_setup* _this)
        {
           _dh_mission_setupdtor__dh_mission_setup7_user(_this, _dh_mission_setupdtor__dh_mission_setup7_next);
        };
        
        static hook_record _dh_mission_setup_functions[] = {
        {   (LPVOID)0x140270dc0L,
            (LPVOID *)&_dh_mission_setupctor__dh_mission_setup2_user,
            (LPVOID *)&_dh_mission_setupctor__dh_mission_setup2_next,
            (LPVOID)cast_pointer_function(_dh_mission_setupctor__dh_mission_setup2_wrapper),
            (LPVOID)cast_pointer_function((void(_dh_mission_setup::*)())&_dh_mission_setup::ctor__dh_mission_setup) },
        {   (LPVOID)0x1402710d0L,
            (LPVOID *)&_dh_mission_setupdtor__dh_mission_setup7_user,
            (LPVOID *)&_dh_mission_setupdtor__dh_mission_setup7_next,
            (LPVOID)cast_pointer_function(_dh_mission_setupdtor__dh_mission_setup7_wrapper),
            (LPVOID)cast_pointer_function((void(_dh_mission_setup::*)())&_dh_mission_setup::dtor__dh_mission_setup) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
