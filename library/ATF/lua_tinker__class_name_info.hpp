// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "lua_tinker__class_name.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__class_namector_name2_ptr = char* (WINAPIV*)(char*);
            using lua_tinker__class_namector_name2_clbk = char* (WINAPIV*)(char*, lua_tinker__class_namector_name2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__class_name.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__class_namector_name2_ptr = char* (WINAPIV*)(char*);
            using lua_tinker__class_namector_name2_clbk = char* (WINAPIV*)(char*, lua_tinker__class_namector_name2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__class_name.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__class_namector_name2_ptr = char* (WINAPIV*)(char*);
            using lua_tinker__class_namector_name2_clbk = char* (WINAPIV*)(char*, lua_tinker__class_namector_name2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__class_name.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__class_namector_name2_ptr = char* (WINAPIV*)(char*);
            using lua_tinker__class_namector_name2_clbk = char* (WINAPIV*)(char*, lua_tinker__class_namector_name2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__class_name.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__class_namector_name2_ptr = char* (WINAPIV*)(char*);
            using lua_tinker__class_namector_name2_clbk = char* (WINAPIV*)(char*, lua_tinker__class_namector_name2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__class_name.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__class_namector_name2_ptr = char* (WINAPIV*)(char*);
            using lua_tinker__class_namector_name2_clbk = char* (WINAPIV*)(char*, lua_tinker__class_namector_name2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
