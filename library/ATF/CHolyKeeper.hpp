// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CAttack.hpp"
#include "CCharacter.hpp"
#include "CMyTimer.hpp"
#include "CPlayer.hpp"
#include "_attack_param.hpp"
#include "_dummy_position.hpp"
#include "_keeper_create_setdata.hpp"
#include "_monster_fld.hpp"
#include "_object_id.hpp"


START_ATF_NAMESPACE
    struct  CHolyKeeper : CCharacter
    {
        int m_nHP;
        unsigned int m_dwLastDestroyTime;
        _monster_fld *m_pRec;
        _dummy_position *m_pPosCreate;
        _dummy_position *m_pPosActive;
        _dummy_position *m_pPosCenter;
        int m_nMasterRace;
        bool m_bExit;
        bool m_bChaos;
        unsigned int m_dwLastStopTime;
        int m_nDefPart[5];
        CPlayer *m_pLastMoveTarget;
        CAttack *m_at;
        _attack_param m_ap;
        bool m_bDamageAbleState;
        int m_nCurrLootIndex;
        int m_nEndLootIndex;
        int m_nCurrDropIndex;
        unsigned __int16 m_wMagnifications;
        unsigned __int16 m_wRange;
        unsigned __int16 m_wDropCntOnce;
        CMyTimer m_tmrDropTime;
    public:
        CHolyKeeper()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*);
            (org_ptr(0x140132b00L))(this);
        };
        void ctor_CHolyKeeper()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*);
            (org_ptr(0x140132b00L))(this);
        };
        bool CheckAttack()
        {
            using org_ptr = bool (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x1401338d0L))(this);
        };
        void CheckCurPos()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*);
            (org_ptr(0x140133cc0L))(this);
        };
        void CheckExit()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*);
            (org_ptr(0x140133bf0L))(this);
        };
        void CheckMove()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*);
            (org_ptr(0x140133470L))(this);
        };
        bool Create(struct _keeper_create_setdata* pData, int nCreateType)
        {
            using org_ptr = bool (WINAPIV*)(struct CHolyKeeper*, struct _keeper_create_setdata*, int);
            return (org_ptr(0x140132e20L))(this, pData, nCreateType);
        };
        bool Destroy(char byDestroyCode, struct CCharacter* pAtter)
        {
            using org_ptr = bool (WINAPIV*)(struct CHolyKeeper*, char, struct CCharacter*);
            return (org_ptr(0x1401332e0L))(this, byDestroyCode, pAtter);
        };
        void DropItem()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*);
            (org_ptr(0x140135540L))(this);
        };
        bool Exit()
        {
            using org_ptr = bool (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x1401333d0L))(this);
        };
        int GetAttackDP()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x140136b30L))(this);
        };
        float* GetAttackPivot()
        {
            using org_ptr = float* (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x140133e40L))(this);
        };
        float GetAttackRange()
        {
            using org_ptr = float (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x140136880L))(this);
        };
        int GetDefFC(int nAttactPart, struct CCharacter* pAttChar, int* pnConvertPart)
        {
            using org_ptr = int (WINAPIV*)(struct CHolyKeeper*, int, struct CCharacter*, int*);
            return (org_ptr(0x140134ac0L))(this, nAttactPart, pAttChar, pnConvertPart);
        };
        float GetDefFacing(int nPart)
        {
            using org_ptr = float (WINAPIV*)(struct CHolyKeeper*, int);
            return (org_ptr(0x140136a50L))(this, nPart);
        };
        float GetDefGap(int nPart)
        {
            using org_ptr = float (WINAPIV*)(struct CHolyKeeper*, int);
            return (org_ptr(0x1401369f0L))(this, nPart);
        };
        int GetDefSkill(bool bBackAttack)
        {
            using org_ptr = int (WINAPIV*)(struct CHolyKeeper*, bool);
            return (org_ptr(0x140136900L))(this, bBackAttack);
        };
        int GetFireTol()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x140136930L))(this);
        };
        int GetGenAttackProb(struct CCharacter* pDst, int nPart, bool bBackAttack)
        {
            using org_ptr = int (WINAPIV*)(struct CHolyKeeper*, struct CCharacter*, int, bool);
            return (org_ptr(0x140134b40L))(this, pDst, nPart, bBackAttack);
        };
        int GetHP()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x140136780L))(this);
        };
        int GetLevel()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x1401368d0L))(this);
        };
        int GetMaxHP()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x1401367a0L))(this);
        };
        char* GetObjName()
        {
            using org_ptr = char* (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x140134c80L))(this);
        };
        int GetObjRace()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x140136b50L))(this);
        };
        int GetSoilTol()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x140136990L))(this);
        };
        int GetWaterTol()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x140136960L))(this);
        };
        float GetWeaponAdjust()
        {
            using org_ptr = float (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x140136ab0L))(this);
        };
        int GetWeaponClass()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x140136b20L))(this);
        };
        float GetWidth()
        {
            using org_ptr = float (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x140136830L))(this);
        };
        int GetWindTol()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x1401369c0L))(this);
        };
        bool Init(struct _object_id* pID)
        {
            using org_ptr = bool (WINAPIV*)(struct CHolyKeeper*, struct _object_id*);
            return (org_ptr(0x140132c90L))(this, pID);
        };
        bool IsBeAttackedAble(bool bFirst)
        {
            using org_ptr = bool (WINAPIV*)(struct CHolyKeeper*, bool);
            return (org_ptr(0x140136b00L))(this, bFirst);
        };
        bool IsBeDamagedAble(struct CCharacter* pAtter)
        {
            using org_ptr = bool (WINAPIV*)(struct CHolyKeeper*, struct CCharacter*);
            return (org_ptr(0x140133d90L))(this, pAtter);
        };
        void Loop()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*);
            (org_ptr(0x140134920L))(this);
        };
        void OutOfSec()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*);
            (org_ptr(0x140136730L))(this);
        };
        struct CCharacter* SearchAttackTarget()
        {
            using org_ptr = struct CCharacter* (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x140133f70L))(this);
        };
        struct CPlayer* SearchMoveTarget()
        {
            using org_ptr = struct CPlayer* (WINAPIV*)(struct CHolyKeeper*);
            return (org_ptr(0x140134660L))(this);
        };
        void SendMsg_Attack()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*);
            (org_ptr(0x140134ef0L))(this);
        };
        void SendMsg_Create()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*);
            (org_ptr(0x140134d70L))(this);
        };
        void SendMsg_Destroy(char byDesType)
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*, char);
            (org_ptr(0x140134e60L))(this, byDesType);
        };
        void SendMsg_FixPosition(int n)
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*, int);
            (org_ptr(0x1401351d0L))(this, n);
        };
        void SendMsg_Move()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*);
            (org_ptr(0x1401350a0L))(this);
        };
        void SendMsg_RealMovePoint(int n)
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*, int);
            (org_ptr(0x1401352d0L))(this, n);
        };
        int SetDamage(int nDam, struct CCharacter* pDst, int nDstLv, bool bCrt, int nAttackType, unsigned int dwAttackSerial, bool bJadeReturn)
        {
            using org_ptr = int (WINAPIV*)(struct CHolyKeeper*, int, struct CCharacter*, int, bool, int, unsigned int, bool);
            return (org_ptr(0x1401349b0L))(this, nDam, pDst, nDstLv, bCrt, nAttackType, dwAttackSerial, bJadeReturn);
        };
        void SetDamageAbleState(bool bDamageAbState)
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*, bool);
            (org_ptr(0x140284770L))(this, bDamageAbState);
        };
        void SetDropItem()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*);
            (org_ptr(0x1401353f0L))(this);
        };
        void SetHP(int nHP)
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*, int);
            (org_ptr(0x1401367d0L))(this, nHP);
        };
        void SetMaxHP(int nMaxHP)
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*, int);
            (org_ptr(0x140136800L))(this, nMaxHP);
        };
        void SetStateChaos()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*);
            (org_ptr(0x140133e00L))(this);
        };
        ~CHolyKeeper()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*);
            (org_ptr(0x140132bc0L))(this);
        };
        void dtor_CHolyKeeper()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyKeeper*);
            (org_ptr(0x140132bc0L))(this);
        };
    };
END_ATF_NAMESPACE
