// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "$29A697514CF2312F71664FA328543839.hpp"


START_ATF_NAMESPACE
    struct CVertexBuffer
    {
        unsigned int m_Flag;
        unsigned int m_Size;
        $29A697514CF2312F71664FA328543839 ___u2;
    public:
        CVertexBuffer()
        {
            using org_ptr = void (WINAPIV*)(void*);
            (org_ptr(0x14050c180L))(this);
        };
        void ctor_CVertexBuffer()
        {
            using org_ptr = void (WINAPIV*)(void*);
            (org_ptr(0x14050c180L))(this);
        };
        void InitVertexBuffer(int arg_0, int arg_1, uint32_t arg_2)
        {
            using org_ptr = void (WINAPIV*)(struct CVertexBuffer*, int, int, uint32_t);
            (org_ptr(0x14050c1a0L))(this, arg_0, arg_1, arg_2);
        };
        void ReleaseVertexBuffer()
        {
            using org_ptr = void (WINAPIV*)(struct CVertexBuffer*);
            (org_ptr(0x14050c280L))(this);
        };
        uint8_t* VPLock(int arg_0, int arg_1, uint32_t arg_2)
        {
            using org_ptr = uint8_t* (WINAPIV*)(struct CVertexBuffer*, int, int, uint32_t);
            return (org_ptr(0x14050c2c0L))(this, arg_0, arg_1, arg_2);
        };
        void VPUnLock()
        {
            using org_ptr = void (WINAPIV*)(struct CVertexBuffer*);
            (org_ptr(0x14050c340L))(this);
        };
        ~CVertexBuffer()
        {
            using org_ptr = void (WINAPIV*)(void*);
            (org_ptr(0x14050c190L))(this);
        };
        void dtor_CVertexBuffer()
        {
            using org_ptr = void (WINAPIV*)(void*);
            (org_ptr(0x14050c190L))(this);
        };
    };
END_ATF_NAMESPACE
