// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "AutominePersonal.hpp"
#include "CGuild.hpp"
#include "CPlayer.hpp"
#include "CPostStorage.hpp"
#include "CPostReturnStorage.hpp"
#include "_AVATOR_DATA.hpp"
#include "_ITEMCOMBINE_DB_BASE.hpp"
#include "_QUEST_DB_BASE.hpp"
#include "_SFCONT_DB_BASE.hpp"
#include "_STORAGE_LIST.hpp"
#include "_UNIT_DB_BASE.hpp"
#include "_class_fld.hpp"
#include "_guild_member_info.hpp"
#include "_personal_amine_inven_db_load.hpp"
#include "_quick_link.hpp"
#include "_character_db_load.hpp"
#include "_bag_db_load.hpp"
#include "_equip_db_load.hpp"
#include "_embellish_db_load.hpp"
#include "_force_db_load.hpp"
#include "_animus_db_load.hpp"
#include "_trunk_db_load.hpp"
#include "_Exttrunk_db_load.hpp"


START_ATF_NAMESPACE
    struct CPlayerDB
    {
        char m_byPvPGrade;
        _character_db_load m_dbChar;
        _bag_db_load m_dbInven;
        _equip_db_load m_dbEquip;
        _embellish_db_load m_dbEmbellish;
        _force_db_load m_dbForce;
        _animus_db_load m_dbAnimus;
        _trunk_db_load m_dbTrunk;
        _Exttrunk_db_load m_dbExtTrunk;
        _STORAGE_LIST *m_pStoragePtr[8];
        _UNIT_DB_BASE m_UnitDB;
        _QUEST_DB_BASE m_QuestDB;
        _SFCONT_DB_BASE m_SFContDB;
        _ITEMCOMBINE_DB_BASE m_ItemCombineDB;
        CPostStorage m_PostStorage;
        CPostReturnStorage m_ReturnPostStorage;
        bool m_bPersonalAmineInven;
        AutominePersonal *m_pAPM;
        _personal_amine_inven_db_load m_dbPersonalAmineInven;
        unsigned __int16 *m_wCuttingResBuffer;
        char m_byNameLen;
        unsigned int m_dwAlterMastery[80];
        _class_fld *m_pClassData;
        _class_fld *m_pClassHistory[3];
        _class_fld **m_ppHistoryEffect[4];
        _quick_link m_QLink[50];
        CGuild *m_pGuild;
        _guild_member_info *m_pGuildMemPtr;
        char m_byClassInGuild;
        CGuild *m_pApplyGuild;
        bool m_bGuildLock;
        bool m_bTrunkOpen;
        char m_wszTrunkPasswd[13];
        long double m_dTrunkDalant;
        long double m_dTrunkGold;
        char m_byTrunkSlotNum;
        char m_byTrunkHintIndex;
        char m_wszTrunkHintAnswer[17];
        char m_byExtTrunkSlotNum;
        int m_nMakeTrapMaxNum;
        long double m_dPvpPointLeak;
        bool m_bLastAttBuff;
        unsigned __int16 m_wSerialCount;
        CPlayer *m_pThis;
        char m_aszName[17];
    public:
        void AddTrunkDalant(unsigned int dwPush)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, unsigned int);
            (org_ptr(0x14010c200L))(this, dwPush);
        };
        void AddTrunkGold(unsigned int dwPush)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, unsigned int);
            (org_ptr(0x14010c330L))(this, dwPush);
        };
        void AppointSerialStorageItem()
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*);
            (org_ptr(0x14010b950L))(this);
        };
        bool BeHaveBoxOfAMP()
        {
            using org_ptr = bool (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x1400ef400L))(this);
        };
        CPlayerDB()
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*);
            (org_ptr(0x1401087e0L))(this);
        };
        void ctor_CPlayerDB()
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*);
            (org_ptr(0x1401087e0L))(this);
        };
        static char CalcCharGrade(char byLv, uint16_t wRankRate)
        {
            using org_ptr = char (WINAPIV*)(char, uint16_t);
            return (org_ptr(0x14010bc80L))(byLv, wRankRate);
        };
        bool ConvertAvatorDB(struct _AVATOR_DATA* pData)
        {
            using org_ptr = bool (WINAPIV*)(struct CPlayerDB*, struct _AVATOR_DATA*);
            return (org_ptr(0x140108ee0L))(this, pData);
        };
        bool ConvertGeneralDB(struct _AVATOR_DATA* pData, struct _AVATOR_DATA* pOutData)
        {
            using org_ptr = bool (WINAPIV*)(struct CPlayerDB*, struct _AVATOR_DATA*, struct _AVATOR_DATA*);
            return (org_ptr(0x140109450L))(this, pData, pOutData);
        };
        bool DeleteItemCountFromCode(char* pszItemCode, int nCount)
        {
            using org_ptr = bool (WINAPIV*)(struct CPlayerDB*, char*, int);
            return (org_ptr(0x14010c760L))(this, pszItemCode, nCount);
        };
        char GetBagNum()
        {
            using org_ptr = char (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x140034910L))(this);
        };
        char* GetCharNameA()
        {
            using org_ptr = char* (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x140034810L))(this);
        };
        char* GetCharNameW()
        {
            using org_ptr = char* (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x140078d40L))(this);
        };
        unsigned int GetCharSerial()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x140078d60L))(this);
        };
        char GetClassInGuild()
        {
            using org_ptr = char (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x1400ad430L))(this);
        };
        uint16_t GetCurItemSerial()
        {
            using org_ptr = uint16_t (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x14007ba10L))(this);
        };
        float* GetCurPos()
        {
            using org_ptr = float* (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x14007d380L))(this);
        };
        int GetDP()
        {
            using org_ptr = int (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x14007c4d0L))(this);
        };
        unsigned int GetDalant()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x140034930L))(this);
        };
        long double GetExp()
        {
            using org_ptr = long double (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x1400348b0L))(this);
        };
        char GetExtTrunkSlotNum()
        {
            using org_ptr = char (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x1400c2cb0L))(this);
        };
        char GetExtTrunkSlotRace(unsigned int dwItemSerial)
        {
            using org_ptr = char (WINAPIV*)(struct CPlayerDB*, unsigned int);
            return (org_ptr(0x14010c4d0L))(this, dwItemSerial);
        };
        int GetFP()
        {
            using org_ptr = int (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x140034870L))(this);
        };
        unsigned int GetGold()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x140034950L))(this);
        };
        unsigned int GetGuildSerial()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x14010c540L))(this);
        };
        int GetHP()
        {
            using org_ptr = int (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x140034850L))(this);
        };
        int GetHaveUnitNum()
        {
            using org_ptr = int (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x140108e60L))(this);
        };
        int GetInvenItemCountFromCode(char* pszItemCode)
        {
            using org_ptr = int (WINAPIV*)(struct CPlayerDB*, char*);
            return (org_ptr(0x14010c630L))(this, pszItemCode);
        };
        struct _STORAGE_LIST::_db_con* GetItem(char byInvenIndex)
        {
            using org_ptr = struct _STORAGE_LIST::_db_con* (WINAPIV*)(struct CPlayerDB*, char);
            return (org_ptr(0x14010c5a0L))(this, byInvenIndex);
        };
        int GetLevel()
        {
            using org_ptr = int (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x1400348f0L))(this);
        };
        long double GetLossExp()
        {
            using org_ptr = long double (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x14007a520L))(this);
        };
        int GetMapCode()
        {
            using org_ptr = int (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x14007d360L))(this);
        };
        int GetMaxLevel()
        {
            using org_ptr = int (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x14007a890L))(this);
        };
        uint16_t GetNewItemSerial()
        {
            using org_ptr = uint16_t (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x14010c100L))(this);
        };
        struct _class_fld* GetPtrBaseClass()
        {
            using org_ptr = struct _class_fld* (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x14007dc50L))(this);
        };
        struct _class_fld* GetPtrCurClass()
        {
            using org_ptr = struct _class_fld* (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x14007dc30L))(this);
        };
        struct _STORAGE_LIST::_db_con* GetPtrItemStorage(uint16_t wSerial, char* pbyStorageCode)
        {
            using org_ptr = struct _STORAGE_LIST::_db_con* (WINAPIV*)(struct CPlayerDB*, uint16_t, char*);
            return (org_ptr(0x14010c160L))(this, wSerial, pbyStorageCode);
        };
        long double GetPvPCashBag()
        {
            using org_ptr = long double (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x1400f7870L))(this);
        };
        long double GetPvPPoint()
        {
            using org_ptr = long double (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x140077f70L))(this);
        };
        unsigned int GetPvpRank()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x1402b63e0L))(this);
        };
        int GetRaceCode()
        {
            using org_ptr = int (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x140034830L))(this);
        };
        int GetRaceSexCode()
        {
            using org_ptr = int (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x1400790f0L))(this);
        };
        char GetResBufferNum()
        {
            using org_ptr = char (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x14010bdd0L))(this);
        };
        int GetSP()
        {
            using org_ptr = int (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x140034890L))(this);
        };
        char* GetTrunkPasswdW()
        {
            using org_ptr = char* (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x1400fc2d0L))(this);
        };
        char GetTrunkSlotNum()
        {
            using org_ptr = char (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x1400c2c90L))(this);
        };
        char GetTrunkSlotRace(unsigned int dwItemSerial)
        {
            using org_ptr = char (WINAPIV*)(struct CPlayerDB*, unsigned int);
            return (org_ptr(0x14010c460L))(this, dwItemSerial);
        };
        char GetUseSlot()
        {
            using org_ptr = char (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x1400d3e50L))(this);
        };
        void InitAlterMastery()
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*);
            (org_ptr(0x14007db10L))(this);
        };
        void InitClass()
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*);
            (org_ptr(0x14010b7b0L))(this);
        };
        void InitPlayerDB(struct CPlayer* pThis)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, struct CPlayer*);
            (org_ptr(0x140108b60L))(this, pThis);
        };
        void InitResBuffer()
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*);
            (org_ptr(0x14010be50L))(this);
        };
        bool IsActableClassSkill(char* pszSkillCode, int* pnClassGrade)
        {
            using org_ptr = bool (WINAPIV*)(struct CPlayerDB*, char*, int*);
            return (org_ptr(0x14010bf40L))(this, pszSkillCode, pnClassGrade);
        };
        bool IsClassChangeableLv()
        {
            using org_ptr = bool (WINAPIV*)(struct CPlayerDB*);
            return (org_ptr(0x14010bed0L))(this);
        };
        void PopLink(int nLinkIndex)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, int);
            (org_ptr(0x14010b900L))(this, nLinkIndex);
        };
        bool PushLink(int nLinkIndex, uint16_t wSerail, bool bInit)
        {
            using org_ptr = bool (WINAPIV*)(struct CPlayerDB*, int, uint16_t, bool);
            return (org_ptr(0x14010b830L))(this, nLinkIndex, wSerail, bInit);
        };
        void SelectClass(char byHistoryRecordNum, struct _class_fld* pSelectClass)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, char, struct _class_fld*);
            (org_ptr(0x14010b700L))(this, byHistoryRecordNum, pSelectClass);
        };
        void SetBagNum(char byNum)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, char);
            (org_ptr(0x1400b8590L))(this, byNum);
        };
        void SetClassInGuild(char byClassInGuild)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, char);
            (org_ptr(0x1400ad320L))(this, byClassInGuild);
        };
        void SetCurPos(float* fPos)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, float*);
            (org_ptr(0x140079ee0L))(this, fPos);
        };
        void SetDP(unsigned int dwDP)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, unsigned int);
            (org_ptr(0x14007d9d0L))(this, dwDP);
        };
        void SetDalant(unsigned int dwDt)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, unsigned int);
            (org_ptr(0x14007c270L))(this, dwDt);
        };
        void SetExp(long double dExp)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, long double);
            (org_ptr(0x14007d6c0L))(this, dExp);
        };
        void SetFP(unsigned int dwFP)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, unsigned int);
            (org_ptr(0x14007d990L))(this, dwFP);
        };
        void SetGold(unsigned int dwGold)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, unsigned int);
            (org_ptr(0x14007c290L))(this, dwGold);
        };
        void SetHP(unsigned int dwHP)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, unsigned int);
            (org_ptr(0x14007d970L))(this, dwHP);
        };
        void SetHaveBoxOfAMP(bool bFlag)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, bool);
            (org_ptr(0x1402e1c40L))(this, bFlag);
        };
        void SetLevel(int nLv)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, int);
            (org_ptr(0x14007c250L))(this, nLv);
        };
        void SetLossExp(long double dLossExp)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, long double);
            (org_ptr(0x14007a560L))(this, dLossExp);
        };
        void SetMapCode(char byCode)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, char);
            (org_ptr(0x140079ec0L))(this, byCode);
        };
        void SetMaxLevel(int nLv)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, int);
            (org_ptr(0x1400c2cf0L))(this, nLv);
        };
        void SetPvPPoint(long double dPoint)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, long double);
            (org_ptr(0x14007d9f0L))(this, dPoint);
        };
        void SetSP(unsigned int dwSP)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, unsigned int);
            (org_ptr(0x14007d9b0L))(this, dwSP);
        };
        void SubTrunkDalant(unsigned int dwSub)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, unsigned int);
            (org_ptr(0x14010c2a0L))(this, dwSub);
        };
        void SubTrunkGold(unsigned int dwSub)
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*, unsigned int);
            (org_ptr(0x14010c3d0L))(this, dwSub);
        };
        ~CPlayerDB()
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*);
            (org_ptr(0x140108aa0L))(this);
        };
        void dtor_CPlayerDB()
        {
            using org_ptr = void (WINAPIV*)(struct CPlayerDB*);
            (org_ptr(0x140108aa0L))(this);
        };
    };
END_ATF_NAMESPACE
