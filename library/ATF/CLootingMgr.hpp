// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CMapData.hpp"


START_ATF_NAMESPACE
    struct CLootingMgr
    {
        struct _list
        {
            CPlayer *pAtter;
            unsigned int dwAtterSerial;
            unsigned int dwAttCount;
            unsigned int dwDamage;
            unsigned int dwLastAttTime;
        public:
            long double GetScore(bool bBonus)
            {
                using org_ptr = long double (WINAPIV*)(struct _list*, bool);
                return (org_ptr(0x14014ca10L))(this, bBonus);
            };
            void Init()
            {
                using org_ptr = void (WINAPIV*)(struct _list*);
                (org_ptr(0x14014b850L))(this);
            };
            _list()
            {
                using org_ptr = void (WINAPIV*)(struct _list*);
                (org_ptr(0x14014b800L))(this);
            };
            void ctor__list()
            {
                using org_ptr = void (WINAPIV*)(struct _list*);
                (org_ptr(0x14014b800L))(this);
            };
        };
        bool m_bFirst;
        char m_byUserNode;
        _list m_AtterList[64];
    public:
        CLootingMgr()
        {
            using org_ptr = void (WINAPIV*)(struct CLootingMgr*);
            (org_ptr(0x14014b780L))(this);
        };
        void ctor_CLootingMgr()
        {
            using org_ptr = void (WINAPIV*)(struct CLootingMgr*);
            (org_ptr(0x14014b780L))(this);
        };
        struct CPlayer* GetLooter(struct CMapData* pMap, float* pPos, struct CPlayer* pSkipObject)
        {
            using org_ptr = struct CPlayer* (WINAPIV*)(struct CLootingMgr*, struct CMapData*, float*, struct CPlayer*);
            return (org_ptr(0x14014c830L))(this, pMap, pPos, pSkipObject);
        };
        void Init(int nUserNode)
        {
            using org_ptr = void (WINAPIV*)(struct CLootingMgr*, int);
            (org_ptr(0x14014be90L))(this, nUserNode);
        };
        void PushDamage(struct CPlayer* pAtter, uint16_t wDamage)
        {
            using org_ptr = void (WINAPIV*)(struct CLootingMgr*, struct CPlayer*, uint16_t);
            (org_ptr(0x14014c470L))(this, pAtter, wDamage);
        };
    };
END_ATF_NAMESPACE
