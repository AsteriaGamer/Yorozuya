// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "$C2F6557BF5244D9840704C1D21365DBC.hpp"


START_ATF_NAMESPACE
    struct MiningTicket
    {
        struct _AuthKeyTicket
        {
            $C2F6557BF5244D9840704C1D21365DBC ___u0;
        public:
            void Init()
            {
                using org_ptr = void (WINAPIV*)(struct _AuthKeyTicket*);
                (org_ptr(0x140073bc0L))(this);
            };
            void Set(unsigned int uiSrc)
            {
                using org_ptr = void (WINAPIV*)(struct _AuthKeyTicket*, unsigned int);
                (org_ptr(0x140078ed0L))(this, uiSrc);
            };
            void Set(uint16_t byYear, char byMonth, char byDay, char byHour, char byNumofTime)
            {
                using org_ptr = void (WINAPIV*)(struct _AuthKeyTicket*, uint16_t, char, char, char, char);
                (org_ptr(0x1400a6ba0L))(this, byYear, byMonth, byDay, byHour, byNumofTime);
            };
        };
        _AuthKeyTicket m_dwTakeLastMentalTicket;
        _AuthKeyTicket m_dwTakeLastCriTicket;
    public:
        int AuthLastCriTicket(uint16_t byCurrentYear, char byCurrentMonth, char byCurrentDay, char byCurrentHour, char byNumOfTime)
        {
            using org_ptr = int (WINAPIV*)(struct MiningTicket*, uint16_t, char, char, char, char);
            return (org_ptr(0x1400d01d0L))(this, byCurrentYear, byCurrentMonth, byCurrentDay, byCurrentHour, byNumOfTime);
        };
        int AuthLastMentalTicket(uint16_t byCurrentYear, char byCurrentMonth, char byCurrentDay, char byCurrentHour, char byNumOfTime)
        {
            using org_ptr = int (WINAPIV*)(struct MiningTicket*, uint16_t, char, char, char, char);
            return (org_ptr(0x1400cfdb0L))(this, byCurrentYear, byCurrentMonth, byCurrentDay, byCurrentHour, byNumOfTime);
        };
        unsigned int GetLastCriTicket()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct MiningTicket*);
            return (org_ptr(0x1400d0000L))(this);
        };
        unsigned int GetLastMentalTicket()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct MiningTicket*);
            return (org_ptr(0x1400d0120L))(this);
        };
        void Init()
        {
            using org_ptr = void (WINAPIV*)(struct MiningTicket*);
            (org_ptr(0x140073b60L))(this);
        };
        MiningTicket()
        {
            using org_ptr = void (WINAPIV*)(struct MiningTicket*);
            (org_ptr(0x140073b10L))(this);
        };
        void ctor_MiningTicket()
        {
            using org_ptr = void (WINAPIV*)(struct MiningTicket*);
            (org_ptr(0x140073b10L))(this);
        };
        void SetLastCriTicket(unsigned int uiCriTicket)
        {
            using org_ptr = void (WINAPIV*)(struct MiningTicket*, unsigned int);
            (org_ptr(0x140078e90L))(this, uiCriTicket);
        };
        void SetLastCriTicket(uint16_t byCurrentYear, char byCurrentMonth, char byCurrentDay, char byCurrentHour, char byNumOfTime)
        {
            using org_ptr = void (WINAPIV*)(struct MiningTicket*, uint16_t, char, char, char, char);
            (org_ptr(0x1400cff00L))(this, byCurrentYear, byCurrentMonth, byCurrentDay, byCurrentHour, byNumOfTime);
        };
        void SetLastMentalTicket(unsigned int uiMentalTicket)
        {
            using org_ptr = void (WINAPIV*)(struct MiningTicket*, unsigned int);
            (org_ptr(0x140078eb0L))(this, uiMentalTicket);
        };
        void SetLastMentalTicket(uint16_t byCurrentYear, char byCurrentMonth, char byCurrentDay, char byCurrentHour, char byNumOfTime)
        {
            using org_ptr = void (WINAPIV*)(struct MiningTicket*, uint16_t, char, char, char, char);
            (org_ptr(0x1400d0020L))(this, byCurrentYear, byCurrentMonth, byCurrentDay, byCurrentHour, byNumOfTime);
        };
    };
END_ATF_NAMESPACE
