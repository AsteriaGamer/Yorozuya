// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CLuaCommandEx_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::CLuaCommandExctor_CLuaCommandEx2_ptr CLuaCommandExctor_CLuaCommandEx2_next(nullptr);
        info::CLuaCommandExctor_CLuaCommandEx2_clbk CLuaCommandExctor_CLuaCommandEx2_user(nullptr);
        info::CLuaCommandExGetScriptName4_ptr CLuaCommandExGetScriptName4_next(nullptr);
        info::CLuaCommandExGetScriptName4_clbk CLuaCommandExGetScriptName4_user(nullptr);
        info::CLuaCommandExSetCmd6_ptr CLuaCommandExSetCmd6_next(nullptr);
        info::CLuaCommandExSetCmd6_clbk CLuaCommandExSetCmd6_user(nullptr);
        info::CLuaCommandExdtor_CLuaCommandEx10_ptr CLuaCommandExdtor_CLuaCommandEx10_next(nullptr);
        info::CLuaCommandExdtor_CLuaCommandEx10_clbk CLuaCommandExdtor_CLuaCommandEx10_user(nullptr);
        
        info::CLuaCommandEx___Statector__State2_ptr CLuaCommandEx___Statector__State2_next(nullptr);
        info::CLuaCommandEx___Statector__State2_clbk CLuaCommandEx___Statector__State2_user(nullptr);
        
        void CLuaCommandExctor_CLuaCommandEx2_wrapper(struct CLuaCommandEx* _this)
        {
           CLuaCommandExctor_CLuaCommandEx2_user(_this, CLuaCommandExctor_CLuaCommandEx2_next);
        };
        char* CLuaCommandExGetScriptName4_wrapper(struct CLuaCommandEx* _this)
        {
           return CLuaCommandExGetScriptName4_user(_this, CLuaCommandExGetScriptName4_next);
        };
        void CLuaCommandExSetCmd6_wrapper(struct CLuaCommandEx* _this, char byType, char* strScriptName, char* strName)
        {
           CLuaCommandExSetCmd6_user(_this, byType, strScriptName, strName, CLuaCommandExSetCmd6_next);
        };
        void CLuaCommandExdtor_CLuaCommandEx10_wrapper(struct CLuaCommandEx* _this)
        {
           CLuaCommandExdtor_CLuaCommandEx10_user(_this, CLuaCommandExdtor_CLuaCommandEx10_next);
        };
        
        void CLuaCommandEx___Statector__State2_wrapper(struct CLuaCommandEx::_State* _this)
        {
           CLuaCommandEx___Statector__State2_user(_this, CLuaCommandEx___Statector__State2_next);
        };
        
        hook_record CLuaCommandEx_functions[] = {
        {   (LPVOID)0x1404024e0L,
            (LPVOID *)&CLuaCommandExctor_CLuaCommandEx2_user,
            (LPVOID *)&CLuaCommandExctor_CLuaCommandEx2_next,
            (LPVOID)cast_pointer_function(CLuaCommandExctor_CLuaCommandEx2_wrapper),
            (LPVOID)cast_pointer_function((void(CLuaCommandEx::*)())&CLuaCommandEx::ctor_CLuaCommandEx) },
        {   (LPVOID)0x140401260L,
            (LPVOID *)&CLuaCommandExGetScriptName4_user,
            (LPVOID *)&CLuaCommandExGetScriptName4_next,
            (LPVOID)cast_pointer_function(CLuaCommandExGetScriptName4_wrapper),
            (LPVOID)cast_pointer_function((char*(CLuaCommandEx::*)())&CLuaCommandEx::GetScriptName) },
        {   (LPVOID)0x1404011d0L,
            (LPVOID *)&CLuaCommandExSetCmd6_user,
            (LPVOID *)&CLuaCommandExSetCmd6_next,
            (LPVOID)cast_pointer_function(CLuaCommandExSetCmd6_wrapper),
            (LPVOID)cast_pointer_function((void(CLuaCommandEx::*)(char, char*, char*))&CLuaCommandEx::SetCmd) },
        {   (LPVOID)0x140402540L,
            (LPVOID *)&CLuaCommandExdtor_CLuaCommandEx10_user,
            (LPVOID *)&CLuaCommandExdtor_CLuaCommandEx10_next,
            (LPVOID)cast_pointer_function(CLuaCommandExdtor_CLuaCommandEx10_wrapper),
            (LPVOID)cast_pointer_function((void(CLuaCommandEx::*)())&CLuaCommandEx::dtor_CLuaCommandEx) },
        
        {   (LPVOID)0x1404027f0L,
            (LPVOID *)&CLuaCommandEx___Statector__State2_user,
            (LPVOID *)&CLuaCommandEx___Statector__State2_next,
            (LPVOID)cast_pointer_function(CLuaCommandEx___Statector__State2_wrapper),
            (LPVOID)cast_pointer_function((void(CLuaCommandEx::_State::*)())&CLuaCommandEx::_State::ctor__State) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
