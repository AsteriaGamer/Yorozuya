// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "lua_tinker__table_info.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace detail
        {
            static info::lua_tinker__tablector_table2_ptr lua_tinker__tablector_table2_next(nullptr);
            static info::lua_tinker__tablector_table2_clbk lua_tinker__tablector_table2_user(nullptr);
            static info::lua_tinker__tablector_table4_ptr lua_tinker__tablector_table4_next(nullptr);
            static info::lua_tinker__tablector_table4_clbk lua_tinker__tablector_table4_user(nullptr);
            static info::lua_tinker__tablector_table6_ptr lua_tinker__tablector_table6_next(nullptr);
            static info::lua_tinker__tablector_table6_clbk lua_tinker__tablector_table6_user(nullptr);
            static info::lua_tinker__tablector_table8_ptr lua_tinker__tablector_table8_next(nullptr);
            static info::lua_tinker__tablector_table8_clbk lua_tinker__tablector_table8_user(nullptr);
            static info::lua_tinker__tabledtor_table10_ptr lua_tinker__tabledtor_table10_next(nullptr);
            static info::lua_tinker__tabledtor_table10_clbk lua_tinker__tabledtor_table10_user(nullptr);
            
            static void lua_tinker__tablector_table2_wrapper(struct lua_tinker::table* _this, lua_State* L)
            {
               lua_tinker__tablector_table2_user(_this, L, lua_tinker__tablector_table2_next);
            };
            static void lua_tinker__tablector_table4_wrapper(struct lua_tinker::table* _this, lua_State* L, char* name)
            {
               lua_tinker__tablector_table4_user(_this, L, name, lua_tinker__tablector_table4_next);
            };
            static void lua_tinker__tablector_table6_wrapper(struct lua_tinker::table* _this, lua_State* L, int index)
            {
               lua_tinker__tablector_table6_user(_this, L, index, lua_tinker__tablector_table6_next);
            };
            static void lua_tinker__tablector_table8_wrapper(struct lua_tinker::table* _this, struct lua_tinker::table* input)
            {
               lua_tinker__tablector_table8_user(_this, input, lua_tinker__tablector_table8_next);
            };
            static void lua_tinker__tabledtor_table10_wrapper(struct lua_tinker::table* _this)
            {
               lua_tinker__tabledtor_table10_user(_this, lua_tinker__tabledtor_table10_next);
            };
            
            static hook_record table_functions[] = {
            {   (LPVOID)0x1404463d0L,
                (LPVOID *)&lua_tinker__tablector_table2_user,
                (LPVOID *)&lua_tinker__tablector_table2_next,
                (LPVOID)cast_pointer_function(lua_tinker__tablector_table2_wrapper),
                (LPVOID)cast_pointer_function((void(lua_tinker::table::*)(lua_State*))&lua_tinker::table::ctor_table) },
            {   (LPVOID)0x1404464c0L,
                (LPVOID *)&lua_tinker__tablector_table4_user,
                (LPVOID *)&lua_tinker__tablector_table4_next,
                (LPVOID)cast_pointer_function(lua_tinker__tablector_table4_wrapper),
                (LPVOID)cast_pointer_function((void(lua_tinker::table::*)(lua_State*, char*))&lua_tinker::table::ctor_table) },
            {   (LPVOID)0x140446630L,
                (LPVOID *)&lua_tinker__tablector_table6_user,
                (LPVOID *)&lua_tinker__tablector_table6_next,
                (LPVOID)cast_pointer_function(lua_tinker__tablector_table6_wrapper),
                (LPVOID)cast_pointer_function((void(lua_tinker::table::*)(lua_State*, int))&lua_tinker::table::ctor_table) },
            {   (LPVOID)0x140446720L,
                (LPVOID *)&lua_tinker__tablector_table8_user,
                (LPVOID *)&lua_tinker__tablector_table8_next,
                (LPVOID)cast_pointer_function(lua_tinker__tablector_table8_wrapper),
                (LPVOID)cast_pointer_function((void(lua_tinker::table::*)(struct lua_tinker::table*))&lua_tinker::table::ctor_table) },
            {   (LPVOID)0x140446780L,
                (LPVOID *)&lua_tinker__tabledtor_table10_user,
                (LPVOID *)&lua_tinker__tabledtor_table10_next,
                (LPVOID)cast_pointer_function(lua_tinker__tabledtor_table10_wrapper),
                (LPVOID)cast_pointer_function((void(lua_tinker::table::*)())&lua_tinker::table::dtor_table) },
            
            };
            
        }; // static end namespace detail
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
