// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CGuild.hpp"
#include "CLogFile.hpp"
#include "CMyTimer.hpp"
#include "std__vector.hpp"
#include "TRC_AutoTrade.hpp"

START_ATF_NAMESPACE
    struct CUnmannedTraderTaxRateManager
    {
        CMyTimer *m_pkTimer;
        std::vector<TRC_AutoTrade *> m_vecTRC;
    public:
        CUnmannedTraderTaxRateManager()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderTaxRateManager*);
            (org_ptr(0x14038ecd0L))(this);
        };
        void ctor_CUnmannedTraderTaxRateManager()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderTaxRateManager*);
            (org_ptr(0x14038ecd0L))(this);
        };
        int ChangeOwner(char byRace, struct CGuild* pGuild)
        {
            using org_ptr = int (WINAPIV*)(struct CUnmannedTraderTaxRateManager*, char, struct CGuild*);
            return (org_ptr(0x14038df40L))(this, byRace, pGuild);
        };
        bool CheatChangeTaxRate(char byRace, unsigned int dwNewTaxRate, char* pCheaterName)
        {
            using org_ptr = bool (WINAPIV*)(struct CUnmannedTraderTaxRateManager*, char, unsigned int, char*);
            return (org_ptr(0x14038e6d0L))(this, byRace, dwNewTaxRate, pCheaterName);
        };
        void CleanUp()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderTaxRateManager*);
            (org_ptr(0x14038e7c0L))(this);
        };
        void CompleteCreate(uint16_t wInx)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderTaxRateManager*, uint16_t);
            (org_ptr(0x14038e5e0L))(this, wInx);
        };
        void DQSCompleteInAtradTaxMoney(char byRace, char* pdata)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderTaxRateManager*, char, char*);
            (org_ptr(0x14038e390L))(this, byRace, pdata);
        };
        static void Destroy()
        {
            using org_ptr = void (WINAPIV*)();
            (org_ptr(0x14038daf0L))();
        };
        unsigned int GetSuggestedTime(char byRace)
        {
            using org_ptr = unsigned int (WINAPIV*)(struct CUnmannedTraderTaxRateManager*, char);
            return (org_ptr(0x14038e550L))(this, byRace);
        };
        unsigned int GetTax(char byRace, unsigned int dwGuildSerial, unsigned int dwPrice)
        {
            using org_ptr = unsigned int (WINAPIV*)(struct CUnmannedTraderTaxRateManager*, char, unsigned int, unsigned int);
            return (org_ptr(0x14038e110L))(this, byRace, dwGuildSerial, dwPrice);
        };
        float GetTaxRate(char byRace)
        {
            using org_ptr = float (WINAPIV*)(struct CUnmannedTraderTaxRateManager*, char);
            return (org_ptr(0x14038e080L))(this, byRace);
        };
        bool Init(struct CLogFile* pkLogger)
        {
            using org_ptr = bool (WINAPIV*)(struct CUnmannedTraderTaxRateManager*, struct CLogFile*);
            return (org_ptr(0x14038db70L))(this, pkLogger);
        };
        static struct CUnmannedTraderTaxRateManager* Instance()
        {
            using org_ptr = struct CUnmannedTraderTaxRateManager* (WINAPIV*)();
            return (org_ptr(0x14038da30L))();
        };
        bool IsOwnerGuild(char byRace, unsigned int dwGuildSerial)
        {
            using org_ptr = bool (WINAPIV*)(struct CUnmannedTraderTaxRateManager*, char, unsigned int);
            return (org_ptr(0x14038dfe0L))(this, byRace, dwGuildSerial);
        };
        bool Load()
        {
            using org_ptr = bool (WINAPIV*)(struct CUnmannedTraderTaxRateManager*);
            return (org_ptr(0x14038dd80L))(this);
        };
        void Loop()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderTaxRateManager*);
            (org_ptr(0x14038de90L))(this);
        };
        void SendTaxRate(int n, char byRace)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderTaxRateManager*, int, char);
            (org_ptr(0x14038e420L))(this, n, byRace);
        };
        void SendTaxRatePatriarch(int n, char byRace)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderTaxRateManager*, int, char);
            (org_ptr(0x14038e4c0L))(this, n, byRace);
        };
        void SetGuildMaintainMoney(char byRace, unsigned int dwTax, unsigned int dwSeller)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderTaxRateManager*, char, unsigned int, unsigned int);
            (org_ptr(0x14038e260L))(this, byRace, dwTax, dwSeller);
        };
        void SetPatriarchTaxMoney(char byRace, unsigned int dwTax)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderTaxRateManager*, char, unsigned int);
            (org_ptr(0x14038e300L))(this, byRace, dwTax);
        };
        void SetSuggested(char byRace, char byMatterType, unsigned int dwMatterDst, char* wszMatterDst, unsigned int dwNext)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderTaxRateManager*, char, char, unsigned int, char*, unsigned int);
            (org_ptr(0x14038e1b0L))(this, byRace, byMatterType, dwMatterDst, wszMatterDst, dwNext);
        };
        ~CUnmannedTraderTaxRateManager()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderTaxRateManager*);
            (org_ptr(0x14038eda0L))(this);
        };
        void dtor_CUnmannedTraderTaxRateManager()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderTaxRateManager*);
            (org_ptr(0x14038eda0L))(this);
        };
    };
END_ATF_NAMESPACE
