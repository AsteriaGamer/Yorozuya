// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManager_info.hpp"


START_ATF_NAMESPACE
    namespace ATL
    {
        namespace _ATL_SAFE_ALLOCA_IMPL
        {
            namespace detail
            {
                info::ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerAllocate2_ptr ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerAllocate2_next(nullptr);
                info::ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerAllocate2_clbk ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerAllocate2_user(nullptr);
                info::ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerctor_CAtlSafeAllocBufferManager4_ptr ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerctor_CAtlSafeAllocBufferManager4_next(nullptr);
                info::ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerctor_CAtlSafeAllocBufferManager4_clbk ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerctor_CAtlSafeAllocBufferManager4_user(nullptr);
                info::ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerdtor_CAtlSafeAllocBufferManager6_ptr ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerdtor_CAtlSafeAllocBufferManager6_next(nullptr);
                info::ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerdtor_CAtlSafeAllocBufferManager6_clbk ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerdtor_CAtlSafeAllocBufferManager6_user(nullptr);
                
                info::ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManager__CAtlSafeAllocBufferNodeGetData2_ptr ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManager__CAtlSafeAllocBufferNodeGetData2_next(nullptr);
                info::ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManager__CAtlSafeAllocBufferNodeGetData2_clbk ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManager__CAtlSafeAllocBufferNodeGetData2_user(nullptr);
                
                void* ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerAllocate2_wrapper(struct ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>* _this, uint64_t nRequestedSize)
                {
                   return ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerAllocate2_user(_this, nRequestedSize);
                };
                void ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerctor_CAtlSafeAllocBufferManager4_wrapper(struct ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>* _this)
                {
                   ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerctor_CAtlSafeAllocBufferManager4_user(_this);
                };
                void ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerdtor_CAtlSafeAllocBufferManager6_wrapper(struct ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>* _this)
                {
                   ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerdtor_CAtlSafeAllocBufferManager6_user(_this);
                };
                
                void* ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManager__CAtlSafeAllocBufferNodeGetData2_wrapper(struct ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode* _this)
                {
                   return ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManager__CAtlSafeAllocBufferNodeGetData2_user(_this);
                };
                
                hook_record ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>_functions[] = {
                {   (LPVOID)0x140026c30L,
                    (LPVOID *)&ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerAllocate2_user,
                    (LPVOID *)&ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerAllocate2_next,
                    (LPVOID)cast_pointer_function(ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerAllocate2_wrapper),
                    (LPVOID)cast_pointer_function((void*(ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::*)(uint64_t))&ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate) },
                {   (LPVOID)0x140026c10L,
                    (LPVOID *)&ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerctor_CAtlSafeAllocBufferManager4_user,
                    (LPVOID *)&ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerctor_CAtlSafeAllocBufferManager4_next,
                    (LPVOID)cast_pointer_function(ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerctor_CAtlSafeAllocBufferManager4_wrapper),
                    (LPVOID)cast_pointer_function((void(ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::*)())&ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::ctor_CAtlSafeAllocBufferManager) },
                {   (LPVOID)0x140026d20L,
                    (LPVOID *)&ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerdtor_CAtlSafeAllocBufferManager6_user,
                    (LPVOID *)&ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerdtor_CAtlSafeAllocBufferManager6_next,
                    (LPVOID)cast_pointer_function(ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManagerdtor_CAtlSafeAllocBufferManager6_wrapper),
                    (LPVOID)cast_pointer_function((void(ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::*)())&ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::dtor_CAtlSafeAllocBufferManager) },
                
                {   (LPVOID)0x1400273d0L,
                    (LPVOID *)&ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManager__CAtlSafeAllocBufferNodeGetData2_user,
                    (LPVOID *)&ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManager__CAtlSafeAllocBufferNodeGetData2_next,
                    (LPVOID)cast_pointer_function(ATL___ATL_SAFE_ALLOCA_IMPL__CAtlSafeAllocBufferManager__CAtlSafeAllocBufferNodeGetData2_wrapper),
                    (LPVOID)cast_pointer_function((void*(ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::*)())&ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData) },
                
                };
                
            }; // end namespace detail
        }; // end namespace _ATL_SAFE_ALLOCA_IMPL
    }; // end namespace ATL
END_ATF_NAMESPACE
