// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "HBITMAP__.hpp"
#include "HFONT__.hpp"
#include "IDirectDraw7.hpp"
#include "IDirectDrawSurface7.hpp"
#include "_DDSURFACEDESC2.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 8)
    struct CSurface
    {
        IDirectDrawSurface7 *m_pdds;
        _DDSURFACEDESC2 m_ddsd;
        int m_bColorKeyed;
    public:
        CSurface()
        {
            using org_ptr = void (WINAPIV*)(struct CSurface*);
            (org_ptr(0x140434d80L))(this);
        };
        void ctor_CSurface()
        {
            using org_ptr = void (WINAPIV*)(struct CSurface*);
            (org_ptr(0x140434d80L))(this);
        };
        unsigned int ConvertGDIColor(unsigned int dwGDIColor)
        {
            using org_ptr = unsigned int (WINAPIV*)(struct CSurface*, unsigned int);
            return (org_ptr(0x1404355e0L))(this, dwGDIColor);
        };
        HRESULT Create(struct IDirectDraw7* pDD, struct _DDSURFACEDESC2* pddsd)
        {
            using org_ptr = HRESULT (WINAPIV*)(struct CSurface*, struct IDirectDraw7*, struct _DDSURFACEDESC2*);
            return (org_ptr(0x140434ec0L))(this, pDD, pddsd);
        };
        HRESULT Create(struct IDirectDrawSurface7* pdds)
        {
            using org_ptr = HRESULT (WINAPIV*)(struct CSurface*, struct IDirectDrawSurface7*);
            return (org_ptr(0x140434e10L))(this, pdds);
        };
        HRESULT Destroy()
        {
            using org_ptr = HRESULT (WINAPIV*)(struct CSurface*);
            return (org_ptr(0x140434f80L))(this);
        };
        HRESULT DrawBitmap(struct HBITMAP__* hBMP, unsigned int dwBMPOriginX, unsigned int dwBMPOriginY, unsigned int dwBMPWidth, unsigned int dwBMPHeight)
        {
            using org_ptr = HRESULT (WINAPIV*)(struct CSurface*, struct HBITMAP__*, unsigned int, unsigned int, unsigned int, unsigned int);
            return (org_ptr(0x140434fe0L))(this, hBMP, dwBMPOriginX, dwBMPOriginY, dwBMPWidth, dwBMPHeight);
        };
        HRESULT DrawBitmap(char* strBMP, unsigned int dwDesiredWidth, unsigned int dwDesiredHeight)
        {
            using org_ptr = HRESULT (WINAPIV*)(struct CSurface*, char*, unsigned int, unsigned int);
            return (org_ptr(0x140435410L))(this, strBMP, dwDesiredWidth, dwDesiredHeight);
        };
        HRESULT DrawTextA(struct HFONT__* hFont, char* strText, unsigned int dwOriginX, unsigned int dwOriginY, unsigned int crBackground, unsigned int crForeground)
        {
            using org_ptr = HRESULT (WINAPIV*)(struct CSurface*, struct HFONT__*, char*, unsigned int, unsigned int, unsigned int, unsigned int);
            return (org_ptr(0x140435290L))(this, hFont, strText, dwOriginX, dwOriginY, crBackground, crForeground);
        };
        HRESULT FillColor(unsigned int crColor)
        {
            using org_ptr = HRESULT (WINAPIV*)(struct CSurface*, unsigned int);
            return (org_ptr(0x140435800L))(this, crColor);
        };
        static HRESULT GetBitMaskInfo(unsigned int dwBitMask, unsigned int* pdwShift, unsigned int* pdwBits)
        {
            using org_ptr = HRESULT (WINAPIV*)(unsigned int, unsigned int*, unsigned int*);
            return (org_ptr(0x1404358b0L))(dwBitMask, pdwShift, pdwBits);
        };
        struct _DDSURFACEDESC2* GetDDSurfaceDesc()
        {
            using org_ptr = struct _DDSURFACEDESC2* (WINAPIV*)(struct CSurface*);
            return (org_ptr(0x1401a13f0L))(this);
        };
        struct IDirectDrawSurface7* GetDDrawSurface()
        {
            using org_ptr = struct IDirectDrawSurface7* (WINAPIV*)(struct CSurface*);
            return (org_ptr(0x14019c4f0L))(this);
        };
        int IsColorKeyed()
        {
            using org_ptr = int (WINAPIV*)(struct CSurface*);
            return (org_ptr(0x140436390L))(this);
        };
        HRESULT SetColorKey(unsigned int dwColorKey)
        {
            using org_ptr = HRESULT (WINAPIV*)(struct CSurface*, unsigned int);
            return (org_ptr(0x140435530L))(this, dwColorKey);
        };
        ~CSurface()
        {
            using org_ptr = void (WINAPIV*)(struct CSurface*);
            (org_ptr(0x140434db0L))(this);
        };
        void dtor_CSurface()
        {
            using org_ptr = void (WINAPIV*)(struct CSurface*);
            (org_ptr(0x140434db0L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
