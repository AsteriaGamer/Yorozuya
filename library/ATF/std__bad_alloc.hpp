// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "std__exception.hpp"


START_ATF_NAMESPACE
    namespace std
    {
        struct  bad_alloc : exception
        {
        public:
            bad_alloc(char* _Message)
            {
                using org_ptr = void (WINAPIV*)(struct bad_alloc*, char*);
                (org_ptr(0x14007efb0L))(this, _Message);
            };
            void ctor_bad_alloc(char* _Message)
            {
                using org_ptr = void (WINAPIV*)(struct bad_alloc*, char*);
                (org_ptr(0x14007efb0L))(this, _Message);
            };
            bad_alloc(struct bad_alloc* __that)
            {
                using org_ptr = void (WINAPIV*)(struct bad_alloc*, struct bad_alloc*);
                (org_ptr(0x14007f0f0L))(this, __that);
            };
            void ctor_bad_alloc(struct bad_alloc* __that)
            {
                using org_ptr = void (WINAPIV*)(struct bad_alloc*, struct bad_alloc*);
                (org_ptr(0x14007f0f0L))(this, __that);
            };
            bad_alloc()
            {
                using org_ptr = int64_t (WINAPIV*)(struct bad_alloc*);
                (org_ptr(0x14061f760L))(this);
            };
            int64_t ctor_bad_alloc()
            {
                using org_ptr = int64_t (WINAPIV*)(struct bad_alloc*);
                return (org_ptr(0x14061f760L))(this);
            };
            ~bad_alloc()
            {
                using org_ptr = void (WINAPIV*)(struct bad_alloc*);
                (org_ptr(0x14007f020L))(this);
            };
            void dtor_bad_alloc()
            {
                using org_ptr = void (WINAPIV*)(struct bad_alloc*);
                (org_ptr(0x14007f020L))(this);
            };
        };
    }; // end namespace std
END_ATF_NAMESPACE
