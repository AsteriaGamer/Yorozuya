// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CGuild.hpp"
#include "CMyTimer.hpp"
#include "CNetIndexList.hpp"
#include "_suggested_matter.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 8)
    struct CMgrGuildHistory
    {
        struct __LOG_DATA
        {
            char szFileName[128];
            int nLen;
            char sData[300];
        };
        char m_szStdPath[128];
        unsigned int m_dwLastLocalDate;
        unsigned int m_dwLastLocalHour;
        CMyTimer m_tmrUpdateTime;
        char m_szCurTime[32];
        __LOG_DATA m_LogData[2532];
        CNetIndexList m_listLogData;
        CNetIndexList m_listLogDataEmpty;
        bool m_bIOThread;
    public:
        CMgrGuildHistory()
        {
            using org_ptr = void (WINAPIV*)(struct CMgrGuildHistory*);
            (org_ptr(0x140248460L))(this);
        };
        void ctor_CMgrGuildHistory()
        {
            using org_ptr = void (WINAPIV*)(struct CMgrGuildHistory*);
            (org_ptr(0x140248460L))(this);
        };
        void GetNewFileName(unsigned int dwGuildSerial, char* pszFileName)
        {
            using org_ptr = void (WINAPIV*)(struct CMgrGuildHistory*, unsigned int, char*);
            (org_ptr(0x1402488a0L))(this, dwGuildSerial, pszFileName);
        };
        int GetTotalWaitSize()
        {
            using org_ptr = int (WINAPIV*)(struct CMgrGuildHistory*);
            return (org_ptr(0x140249a70L))(this);
        };
        static void IOThread(void* pv)
        {
            using org_ptr = void (WINAPIV*)(void*);
            (org_ptr(0x140249890L))(pv);
        };
        void OnLoop()
        {
            using org_ptr = void (WINAPIV*)(struct CMgrGuildHistory*);
            (org_ptr(0x140248900L))(this);
        };
        void WriteFile(char* pszFileName, char* pszLog)
        {
            using org_ptr = void (WINAPIV*)(struct CMgrGuildHistory*, char*, char*);
            (org_ptr(0x140249760L))(this, pszFileName, pszLog);
        };
        void change_atrade_taxrate(char* pszSugerName, unsigned int dwSugerSerial, char byCurTax, char byNextTax, char* pszFileName)
        {
            using org_ptr = void (WINAPIV*)(struct CMgrGuildHistory*, char*, unsigned int, char, char, char*);
            (org_ptr(0x1402496b0L))(this, pszSugerName, dwSugerSerial, byCurTax, byNextTax, pszFileName);
        };
        void join_member(char* pszJoinerName, unsigned int dwJoinerSerial, char* pszOKerName, unsigned int dwOKSerial, int nMemNum, char* pszFileName)
        {
            using org_ptr = void (WINAPIV*)(struct CMgrGuildHistory*, char*, unsigned int, char*, unsigned int, int, char*);
            (org_ptr(0x140248e30L))(this, pszJoinerName, dwJoinerSerial, pszOKerName, dwOKSerial, nMemNum, pszFileName);
        };
        void leave_member(char* pszLeaverName, unsigned int dwLeaverSerial, bool bSelf, int nMemNum, char* pszFileName, bool bPunish)
        {
            using org_ptr = void (WINAPIV*)(struct CMgrGuildHistory*, char*, unsigned int, bool, int, char*, bool);
            (org_ptr(0x140248ee0L))(this, pszLeaverName, dwLeaverSerial, bSelf, nMemNum, pszFileName, bPunish);
        };
        void load_guild(struct CGuild* pGuild, char* pszFileName)
        {
            using org_ptr = void (WINAPIV*)(struct CMgrGuildHistory*, struct CGuild*, char*);
            (org_ptr(0x1402489f0L))(this, pGuild, pszFileName);
        };
        void pop_money(char* pszIOerName, unsigned int dwIOerSerial, int nPopDalant, int nPopGold, long double dTotalDalant, long double dTotalGold, char* pszFileName)
        {
            using org_ptr = void (WINAPIV*)(struct CMgrGuildHistory*, char*, unsigned int, int, int, long double, long double, char*);
            (org_ptr(0x1402495e0L))(this, pszIOerName, dwIOerSerial, nPopDalant, nPopGold, dTotalDalant, dTotalGold, pszFileName);
        };
        void push_money(char* pszIOerName, unsigned int dwIOerSerial, int nPushDalant, int nPushGold, long double dTotalDalant, long double dTotalGold, char* pszFileName)
        {
            using org_ptr = void (WINAPIV*)(struct CMgrGuildHistory*, char*, unsigned int, int, int, long double, long double, char*);
            (org_ptr(0x140249510L))(this, pszIOerName, dwIOerSerial, nPushDalant, nPushGold, dTotalDalant, dTotalGold, pszFileName);
        };
        void start_guild(struct CGuild* pGuild, char* pszFileName)
        {
            using org_ptr = void (WINAPIV*)(struct CMgrGuildHistory*, struct CGuild*, char*);
            (org_ptr(0x140248c10L))(this, pGuild, pszFileName);
        };
        void suggest_cancel(char* pszSugerName, unsigned int dwSugerSerial, struct _suggested_matter* pMatter, char* pszFileName)
        {
            using org_ptr = void (WINAPIV*)(struct CMgrGuildHistory*, char*, unsigned int, struct _suggested_matter*, char*);
            (org_ptr(0x140249480L))(this, pszSugerName, dwSugerSerial, pMatter, pszFileName);
        };
        void suggest_complete(char* pszSugerName, unsigned int dwSugerSerial, struct _suggested_matter* pMatter, bool bPass, char* pszFileName)
        {
            using org_ptr = void (WINAPIV*)(struct CMgrGuildHistory*, char*, unsigned int, struct _suggested_matter*, bool, char*);
            (org_ptr(0x140249380L))(this, pszSugerName, dwSugerSerial, pMatter, bPass, pszFileName);
        };
        void suggest_vote(char* pszSugerName, unsigned int dwSugerSerial, struct _suggested_matter* pMatter, char* pszFileName)
        {
            using org_ptr = void (WINAPIV*)(struct CMgrGuildHistory*, char*, unsigned int, struct _suggested_matter*, char*);
            (org_ptr(0x140249000L))(this, pszSugerName, dwSugerSerial, pMatter, pszFileName);
        };
        ~CMgrGuildHistory()
        {
            using org_ptr = void (WINAPIV*)(struct CMgrGuildHistory*);
            (org_ptr(0x1402487c0L))(this);
        };
        void dtor_CMgrGuildHistory()
        {
            using org_ptr = void (WINAPIV*)(struct CMgrGuildHistory*);
            (org_ptr(0x1402487c0L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
