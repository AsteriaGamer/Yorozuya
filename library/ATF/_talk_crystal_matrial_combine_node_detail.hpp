// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_talk_crystal_matrial_combine_node_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::_talk_crystal_matrial_combine_nodeConsume2_ptr _talk_crystal_matrial_combine_nodeConsume2_next(nullptr);
        info::_talk_crystal_matrial_combine_nodeConsume2_clbk _talk_crystal_matrial_combine_nodeConsume2_user(nullptr);
        info::_talk_crystal_matrial_combine_nodeGetMixNeedNum4_ptr _talk_crystal_matrial_combine_nodeGetMixNeedNum4_next(nullptr);
        info::_talk_crystal_matrial_combine_nodeGetMixNeedNum4_clbk _talk_crystal_matrial_combine_nodeGetMixNeedNum4_user(nullptr);
        info::_talk_crystal_matrial_combine_nodeGetRequiredSlotCount6_ptr _talk_crystal_matrial_combine_nodeGetRequiredSlotCount6_next(nullptr);
        info::_talk_crystal_matrial_combine_nodeGetRequiredSlotCount6_clbk _talk_crystal_matrial_combine_nodeGetRequiredSlotCount6_user(nullptr);
        info::_talk_crystal_matrial_combine_nodeInit8_ptr _talk_crystal_matrial_combine_nodeInit8_next(nullptr);
        info::_talk_crystal_matrial_combine_nodeInit8_clbk _talk_crystal_matrial_combine_nodeInit8_user(nullptr);
        info::_talk_crystal_matrial_combine_nodeMake10_ptr _talk_crystal_matrial_combine_nodeMake10_next(nullptr);
        info::_talk_crystal_matrial_combine_nodeMake10_clbk _talk_crystal_matrial_combine_nodeMake10_user(nullptr);
        info::_talk_crystal_matrial_combine_nodePush12_ptr _talk_crystal_matrial_combine_nodePush12_next(nullptr);
        info::_talk_crystal_matrial_combine_nodePush12_clbk _talk_crystal_matrial_combine_nodePush12_user(nullptr);
        info::_talk_crystal_matrial_combine_nodeSet14_ptr _talk_crystal_matrial_combine_nodeSet14_next(nullptr);
        info::_talk_crystal_matrial_combine_nodeSet14_clbk _talk_crystal_matrial_combine_nodeSet14_user(nullptr);
        info::_talk_crystal_matrial_combine_nodector__talk_crystal_matrial_combine_node16_ptr _talk_crystal_matrial_combine_nodector__talk_crystal_matrial_combine_node16_next(nullptr);
        info::_talk_crystal_matrial_combine_nodector__talk_crystal_matrial_combine_node16_clbk _talk_crystal_matrial_combine_nodector__talk_crystal_matrial_combine_node16_user(nullptr);
        
        info::_talk_crystal_matrial_combine_node___matrialinfoInit2_ptr _talk_crystal_matrial_combine_node___matrialinfoInit2_next(nullptr);
        info::_talk_crystal_matrial_combine_node___matrialinfoInit2_clbk _talk_crystal_matrial_combine_node___matrialinfoInit2_user(nullptr);
        info::_talk_crystal_matrial_combine_node___matrialinfoctor__matrialinfo4_ptr _talk_crystal_matrial_combine_node___matrialinfoctor__matrialinfo4_next(nullptr);
        info::_talk_crystal_matrial_combine_node___matrialinfoctor__matrialinfo4_clbk _talk_crystal_matrial_combine_node___matrialinfoctor__matrialinfo4_user(nullptr);
        
        void _talk_crystal_matrial_combine_nodeConsume2_wrapper(struct _talk_crystal_matrial_combine_node* _this, int nConsumeCount)
        {
           _talk_crystal_matrial_combine_nodeConsume2_user(_this, nConsumeCount, _talk_crystal_matrial_combine_nodeConsume2_next);
        };
        int _talk_crystal_matrial_combine_nodeGetMixNeedNum4_wrapper(struct _talk_crystal_matrial_combine_node* _this)
        {
           return _talk_crystal_matrial_combine_nodeGetMixNeedNum4_user(_this, _talk_crystal_matrial_combine_nodeGetMixNeedNum4_next);
        };
        int _talk_crystal_matrial_combine_nodeGetRequiredSlotCount6_wrapper(struct _talk_crystal_matrial_combine_node* _this)
        {
           return _talk_crystal_matrial_combine_nodeGetRequiredSlotCount6_user(_this, _talk_crystal_matrial_combine_nodeGetRequiredSlotCount6_next);
        };
        void _talk_crystal_matrial_combine_nodeInit8_wrapper(struct _talk_crystal_matrial_combine_node* _this)
        {
           _talk_crystal_matrial_combine_nodeInit8_user(_this, _talk_crystal_matrial_combine_nodeInit8_next);
        };
        void _talk_crystal_matrial_combine_nodeMake10_wrapper(struct _talk_crystal_matrial_combine_node* _this, int nMakeCount)
        {
           _talk_crystal_matrial_combine_nodeMake10_user(_this, nMakeCount, _talk_crystal_matrial_combine_nodeMake10_next);
        };
        bool _talk_crystal_matrial_combine_nodePush12_wrapper(struct _talk_crystal_matrial_combine_node* _this, struct _STORAGE_LIST::_db_con* pItem, char byUseCount, char byClientIndex)
        {
           return _talk_crystal_matrial_combine_nodePush12_user(_this, pItem, byUseCount, byClientIndex, _talk_crystal_matrial_combine_nodePush12_next);
        };
        bool _talk_crystal_matrial_combine_nodeSet14_wrapper(struct _talk_crystal_matrial_combine_node* _this, int nMixIndex, int nNeedItemNum, char byTableCode, uint16_t wItemIndex)
        {
           return _talk_crystal_matrial_combine_nodeSet14_user(_this, nMixIndex, nNeedItemNum, byTableCode, wItemIndex, _talk_crystal_matrial_combine_nodeSet14_next);
        };
        void _talk_crystal_matrial_combine_nodector__talk_crystal_matrial_combine_node16_wrapper(struct _talk_crystal_matrial_combine_node* _this)
        {
           _talk_crystal_matrial_combine_nodector__talk_crystal_matrial_combine_node16_user(_this, _talk_crystal_matrial_combine_nodector__talk_crystal_matrial_combine_node16_next);
        };
        
        void _talk_crystal_matrial_combine_node___matrialinfoInit2_wrapper(struct _talk_crystal_matrial_combine_node::_matrialinfo* _this)
        {
           _talk_crystal_matrial_combine_node___matrialinfoInit2_user(_this, _talk_crystal_matrial_combine_node___matrialinfoInit2_next);
        };
        void _talk_crystal_matrial_combine_node___matrialinfoctor__matrialinfo4_wrapper(struct _talk_crystal_matrial_combine_node::_matrialinfo* _this)
        {
           _talk_crystal_matrial_combine_node___matrialinfoctor__matrialinfo4_user(_this, _talk_crystal_matrial_combine_node___matrialinfoctor__matrialinfo4_next);
        };
        
        hook_record _talk_crystal_matrial_combine_node_functions[] = {
        {   (LPVOID)0x140430a90L,
            (LPVOID *)&_talk_crystal_matrial_combine_nodeConsume2_user,
            (LPVOID *)&_talk_crystal_matrial_combine_nodeConsume2_next,
            (LPVOID)cast_pointer_function(_talk_crystal_matrial_combine_nodeConsume2_wrapper),
            (LPVOID)cast_pointer_function((void(_talk_crystal_matrial_combine_node::*)(int))&_talk_crystal_matrial_combine_node::Consume) },
        {   (LPVOID)0x1404321f0L,
            (LPVOID *)&_talk_crystal_matrial_combine_nodeGetMixNeedNum4_user,
            (LPVOID *)&_talk_crystal_matrial_combine_nodeGetMixNeedNum4_next,
            (LPVOID)cast_pointer_function(_talk_crystal_matrial_combine_nodeGetMixNeedNum4_wrapper),
            (LPVOID)cast_pointer_function((int(_talk_crystal_matrial_combine_node::*)())&_talk_crystal_matrial_combine_node::GetMixNeedNum) },
        {   (LPVOID)0x140432210L,
            (LPVOID *)&_talk_crystal_matrial_combine_nodeGetRequiredSlotCount6_user,
            (LPVOID *)&_talk_crystal_matrial_combine_nodeGetRequiredSlotCount6_next,
            (LPVOID)cast_pointer_function(_talk_crystal_matrial_combine_nodeGetRequiredSlotCount6_wrapper),
            (LPVOID)cast_pointer_function((int(_talk_crystal_matrial_combine_node::*)())&_talk_crystal_matrial_combine_node::GetRequiredSlotCount) },
        {   (LPVOID)0x1404307f0L,
            (LPVOID *)&_talk_crystal_matrial_combine_nodeInit8_user,
            (LPVOID *)&_talk_crystal_matrial_combine_nodeInit8_next,
            (LPVOID)cast_pointer_function(_talk_crystal_matrial_combine_nodeInit8_wrapper),
            (LPVOID)cast_pointer_function((void(_talk_crystal_matrial_combine_node::*)())&_talk_crystal_matrial_combine_node::Init) },
        {   (LPVOID)0x140430b70L,
            (LPVOID *)&_talk_crystal_matrial_combine_nodeMake10_user,
            (LPVOID *)&_talk_crystal_matrial_combine_nodeMake10_next,
            (LPVOID)cast_pointer_function(_talk_crystal_matrial_combine_nodeMake10_wrapper),
            (LPVOID)cast_pointer_function((void(_talk_crystal_matrial_combine_node::*)(int))&_talk_crystal_matrial_combine_node::Make) },
        {   (LPVOID)0x1404309c0L,
            (LPVOID *)&_talk_crystal_matrial_combine_nodePush12_user,
            (LPVOID *)&_talk_crystal_matrial_combine_nodePush12_next,
            (LPVOID)cast_pointer_function(_talk_crystal_matrial_combine_nodePush12_wrapper),
            (LPVOID)cast_pointer_function((bool(_talk_crystal_matrial_combine_node::*)(struct _STORAGE_LIST::_db_con*, char, char))&_talk_crystal_matrial_combine_node::Push) },
        {   (LPVOID)0x1404308f0L,
            (LPVOID *)&_talk_crystal_matrial_combine_nodeSet14_user,
            (LPVOID *)&_talk_crystal_matrial_combine_nodeSet14_next,
            (LPVOID)cast_pointer_function(_talk_crystal_matrial_combine_nodeSet14_wrapper),
            (LPVOID)cast_pointer_function((bool(_talk_crystal_matrial_combine_node::*)(int, int, char, uint16_t))&_talk_crystal_matrial_combine_node::Set) },
        {   (LPVOID)0x140432110L,
            (LPVOID *)&_talk_crystal_matrial_combine_nodector__talk_crystal_matrial_combine_node16_user,
            (LPVOID *)&_talk_crystal_matrial_combine_nodector__talk_crystal_matrial_combine_node16_next,
            (LPVOID)cast_pointer_function(_talk_crystal_matrial_combine_nodector__talk_crystal_matrial_combine_node16_wrapper),
            (LPVOID)cast_pointer_function((void(_talk_crystal_matrial_combine_node::*)())&_talk_crystal_matrial_combine_node::ctor__talk_crystal_matrial_combine_node) },
        
        {   (LPVOID)0x140432070L,
            (LPVOID *)&_talk_crystal_matrial_combine_node___matrialinfoInit2_user,
            (LPVOID *)&_talk_crystal_matrial_combine_node___matrialinfoInit2_next,
            (LPVOID)cast_pointer_function(_talk_crystal_matrial_combine_node___matrialinfoInit2_wrapper),
            (LPVOID)cast_pointer_function((void(_talk_crystal_matrial_combine_node::_matrialinfo::*)())&_talk_crystal_matrial_combine_node::_matrialinfo::Init) },
        {   (LPVOID)0x1404321a0L,
            (LPVOID *)&_talk_crystal_matrial_combine_node___matrialinfoctor__matrialinfo4_user,
            (LPVOID *)&_talk_crystal_matrial_combine_node___matrialinfoctor__matrialinfo4_next,
            (LPVOID)cast_pointer_function(_talk_crystal_matrial_combine_node___matrialinfoctor__matrialinfo4_wrapper),
            (LPVOID)cast_pointer_function((void(_talk_crystal_matrial_combine_node::_matrialinfo::*)())&_talk_crystal_matrial_combine_node::_matrialinfo::ctor__matrialinfo) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
