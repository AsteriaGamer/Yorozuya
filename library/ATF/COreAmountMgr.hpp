// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CLogFile.hpp"
#include "COreAmountMgrVtbl.hpp"
#include "_FILETIME.hpp"


START_ATF_NAMESPACE
    struct COreAmountMgr
    {
        COreAmountMgrVtbl *vfptr;
        int m_bChangeRemainRate;
        unsigned int m_dwTotalOreSet;
        unsigned int m_dwMinOreSet;
        float m_fMultipleRate[7][3];
        unsigned int m_dwTotalOreAmount;
        unsigned int m_dwRemainOreAmount;
        unsigned int m_uiProccessIndex;
        char m_byDepositRate;
        _FILETIME m_ftWrite;
        unsigned int m_dwOreTransferAmount;
        char m_byOreTransferCount;
        bool m_bCheckExhOreLog;
        CLogFile m_logOreAmount;
    public:
        COreAmountMgr()
        {
            using org_ptr = void (WINAPIV*)(struct COreAmountMgr*);
            (org_ptr(0x1403f8da0L))(this);
        };
        void ctor_COreAmountMgr()
        {
            using org_ptr = void (WINAPIV*)(struct COreAmountMgr*);
            (org_ptr(0x1403f8da0L))(this);
        };
        bool CheatOreAmount(unsigned int dwTot, unsigned int dwRemain)
        {
            using org_ptr = bool (WINAPIV*)(struct COreAmountMgr*, unsigned int, unsigned int);
            return (org_ptr(0x1403f9b90L))(this, dwTot, dwRemain);
        };
        void DecreaseOre(unsigned int dwAlt)
        {
            using org_ptr = void (WINAPIV*)(struct COreAmountMgr*, unsigned int);
            (org_ptr(0x1400d3ea0L))(this, dwAlt);
        };
        char GetDepositRate()
        {
            using org_ptr = char (WINAPIV*)(struct COreAmountMgr*);
            return (org_ptr(0x1400f06b0L))(this);
        };
        float* GetMultipleRate()
        {
            using org_ptr = float* (WINAPIV*)(struct COreAmountMgr*);
            return (org_ptr(0x14029d840L))(this);
        };
        unsigned int GetOreTransferAmount()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct COreAmountMgr*);
            return (org_ptr(0x1402845d0L))(this);
        };
        char GetOreTransferCount()
        {
            using org_ptr = char (WINAPIV*)(struct COreAmountMgr*);
            return (org_ptr(0x1400f06d0L))(this);
        };
        unsigned int GetRemainOre()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct COreAmountMgr*);
            return (org_ptr(0x140284590L))(this);
        };
        unsigned int GetTotalOre()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct COreAmountMgr*);
            return (org_ptr(0x1402845b0L))(this);
        };
        void IncreaseOreAmount()
        {
            using org_ptr = void (WINAPIV*)(struct COreAmountMgr*);
            (org_ptr(0x140284910L))(this);
        };
        void IncreaseOreCount()
        {
            using org_ptr = void (WINAPIV*)(struct COreAmountMgr*);
            (org_ptr(0x140284880L))(this);
        };
        void InitRemainOreAmount(unsigned int dwRemain, unsigned int dwTotal)
        {
            using org_ptr = void (WINAPIV*)(struct COreAmountMgr*, unsigned int, unsigned int);
            (org_ptr(0x1403f93e0L))(this, dwRemain, dwTotal);
        };
        void InitTransferOre(unsigned int dwTransAmount, char byTransCount)
        {
            using org_ptr = void (WINAPIV*)(struct COreAmountMgr*, unsigned int, char);
            (org_ptr(0x1403f98b0L))(this, dwTransAmount, byTransCount);
        };
        void InsertOreLog(char byType)
        {
            using org_ptr = void (WINAPIV*)(struct COreAmountMgr*, char);
            (org_ptr(0x1403f9680L))(this, byType);
        };
        static struct COreAmountMgr* Instance()
        {
            using org_ptr = struct COreAmountMgr* (WINAPIV*)();
            return (org_ptr(0x1403f8ff0L))();
        };
        bool IsINIFileChanged()
        {
            using org_ptr = bool (WINAPIV*)(struct COreAmountMgr*);
            return (org_ptr(0x1403f9ca0L))(this);
        };
        int IsOreRemain()
        {
            using org_ptr = int (WINAPIV*)(struct COreAmountMgr*);
            return (org_ptr(0x1400d3df0L))(this);
        };
        int LoadINI()
        {
            using org_ptr = int (WINAPIV*)(struct COreAmountMgr*);
            return (org_ptr(0x1403f9130L))(this);
        };
        void Loop()
        {
            using org_ptr = void (WINAPIV*)(struct COreAmountMgr*);
            (org_ptr(0x1403f9a40L))(this);
        };
        void LoopSubProcSendInform()
        {
            using org_ptr = void (WINAPIV*)(struct COreAmountMgr*);
            (org_ptr(0x1403f9a90L))(this);
        };
        bool ReLoad()
        {
            using org_ptr = bool (WINAPIV*)(struct COreAmountMgr*);
            return (org_ptr(0x1403f9c20L))(this);
        };
        void Release()
        {
            using org_ptr = void (WINAPIV*)(struct COreAmountMgr*);
            (org_ptr(0x1403f90b0L))(this);
        };
        void SetOreTransferAmount()
        {
            using org_ptr = void (WINAPIV*)(struct COreAmountMgr*);
            (org_ptr(0x1402849e0L))(this);
        };
        void UpdateDepositeRate()
        {
            using org_ptr = void (WINAPIV*)(struct COreAmountMgr*);
            (org_ptr(0x1403f9940L))(this);
        };
        void UpdateForce()
        {
            using org_ptr = void (WINAPIV*)(struct COreAmountMgr*);
            (org_ptr(0x1403f97d0L))(this);
        };
        ~COreAmountMgr()
        {
            using org_ptr = void (WINAPIV*)(struct COreAmountMgr*);
            (org_ptr(0x1403f8f90L))(this);
        };
        void dtor_COreAmountMgr()
        {
            using org_ptr = void (WINAPIV*)(struct COreAmountMgr*);
            (org_ptr(0x1403f8f90L))(this);
        };
    };
END_ATF_NAMESPACE
