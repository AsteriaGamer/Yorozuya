// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CGuild.hpp"
#include "CPlayer.hpp"
#include "GUILD_BATTLE__CGuildBattleSchedule.hpp"
#include "GUILD_BATTLE__CNormalGuildBattle.hpp"
#include "_worlddb_guild_battle_info.hpp"


START_ATF_NAMESPACE
    namespace GUILD_BATTLE
    {
        struct CNormalGuildBattleManager
        {
            bool m_bLoad;
            bool m_bDone;
            unsigned int m_uiMapCnt;
            unsigned int m_uiMaxBattleCnt;
            CNormalGuildBattle **m_ppkNormalBattle;
            CNormalGuildBattle **m_ppkTodayBattle;
            CNormalGuildBattle **m_ppkTomorrowBattle;
        public:
            char Add(struct CGuild* pSrcGuild, struct CGuild* pDestGuild, unsigned int dwStartTime, unsigned int dwElapseTimeCnt, char byNumber, unsigned int dwMapCode)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattleManager*, struct CGuild*, struct CGuild*, unsigned int, unsigned int, char, unsigned int);
                return (org_ptr(0x1403d3dc0L))(this, pSrcGuild, pDestGuild, dwStartTime, dwElapseTimeCnt, byNumber, dwMapCode);
            };
            void AddComplete(char byRet, unsigned int dwBattleID)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*, char, unsigned int);
                (org_ptr(0x1403d4060L))(this, byRet, dwBattleID);
            };
            bool AddDefaultDBRecord()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleManager*);
                return (org_ptr(0x1403d4fd0L))(this);
            };
            CNormalGuildBattleManager()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*);
                (org_ptr(0x1403d33c0L))(this);
            };
            void ctor_CNormalGuildBattleManager()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*);
                (org_ptr(0x1403d33c0L))(this);
            };
            void CheckGetGravityStone(uint16_t wIndex, unsigned int dwObjSerial, int n, unsigned int dwGuildSerial, unsigned int dwCharacSerial)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*, uint16_t, unsigned int, int, unsigned int, unsigned int);
                (org_ptr(0x1403d4800L))(this, wIndex, dwObjSerial, n, dwGuildSerial, dwCharacSerial);
            };
            void CheckGoal(int n, unsigned int dwGuildSerial, unsigned int dwCharacSerial, int iPortalInx)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*, int, unsigned int, unsigned int, int);
                (org_ptr(0x1403d4910L))(this, n, dwGuildSerial, dwCharacSerial, iPortalInx);
            };
            void CheckTakeGravityStone(int iPortalInx, int n, unsigned int dwGuildSerial, unsigned int dwCharacSerial)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*, int, int, unsigned int, unsigned int);
                (org_ptr(0x1403d4700L))(this, iPortalInx, n, dwGuildSerial, dwCharacSerial);
            };
            void Clear(struct CNormalGuildBattle** ppkStart)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*, struct CNormalGuildBattle**);
                (org_ptr(0x1403d5400L))(this, ppkStart);
            };
            void Clear()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*);
                (org_ptr(0x1403d4280L))(this);
            };
            static void Destroy()
            {
                using org_ptr = void (WINAPIV*)();
                (org_ptr(0x1403d35f0L))();
            };
            void DoDayChangedWork()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*);
                (org_ptr(0x1403d4220L))(this);
            };
            char DropGravityStone(unsigned int dwGuildSerial, unsigned int dwCharacSerial)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattleManager*, unsigned int, unsigned int);
                return (org_ptr(0x1403d4a10L))(this, dwGuildSerial, dwCharacSerial);
            };
            void Flip()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*);
                (org_ptr(0x1403d41c0L))(this);
            };
            struct CNormalGuildBattle* GetBattle(unsigned int dwID)
            {
                using org_ptr = struct CNormalGuildBattle* (WINAPIV*)(struct CNormalGuildBattleManager*, unsigned int);
                return (org_ptr(0x1403d5520L))(this, dwID);
            };
            struct CNormalGuildBattle* GetBattleByGuildSerial(unsigned int dwGuildSerial)
            {
                using org_ptr = struct CNormalGuildBattle* (WINAPIV*)(struct CNormalGuildBattleManager*, unsigned int);
                return (org_ptr(0x1403d5580L))(this, dwGuildSerial);
            };
            bool Init()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleManager*);
                return (org_ptr(0x1403d3670L))(this);
            };
            static struct CNormalGuildBattleManager* Instance()
            {
                using org_ptr = struct CNormalGuildBattleManager* (WINAPIV*)();
                return (org_ptr(0x1403d3530L))();
            };
            void Join(int n, unsigned int dwGuildSerial, unsigned int dwCharacSerial)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*, int, unsigned int, unsigned int);
                (org_ptr(0x1403d4420L))(this, n, dwGuildSerial, dwCharacSerial);
            };
            void JoinGuild(int n, unsigned int dwGuildSerial, unsigned int dwCharacSerial)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*, int, unsigned int, unsigned int);
                (org_ptr(0x1403d4bb0L))(this, n, dwGuildSerial, dwCharacSerial);
            };
            int Kill(unsigned int dwGuildSerial, unsigned int dwSrcCharacSerial, unsigned int dwDestCharacSerial)
            {
                using org_ptr = int (WINAPIV*)(struct CNormalGuildBattleManager*, unsigned int, unsigned int, unsigned int);
                return (org_ptr(0x1403d4b20L))(this, dwGuildSerial, dwSrcCharacSerial, dwDestCharacSerial);
            };
            char LeaveGuild(struct CPlayer* pkPlayer)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattleManager*, struct CPlayer*);
                return (org_ptr(0x1403d4c60L))(this, pkPlayer);
            };
            bool Load(bool bToday, unsigned int uiDayID, struct CNormalGuildBattle** ppkStart)
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleManager*, bool, unsigned int, struct CNormalGuildBattle**);
                return (org_ptr(0x1403d4d90L))(this, bToday, uiDayID, ppkStart);
            };
            bool Load(int iCurDay, unsigned int uiOldMapCnt, int iToday, int iTodayDayID, int iTomorrow, int iTomorrowDayID)
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleManager*, int, unsigned int, int, int, int, int);
                return (org_ptr(0x1403d38f0L))(this, iCurDay, uiOldMapCnt, iToday, iTodayDayID, iTomorrow, iTomorrowDayID);
            };
            bool LoadDBGuildBattleInfo(unsigned int dwStartID, struct _worlddb_guild_battle_info* kInfo)
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleManager*, unsigned int, struct _worlddb_guild_battle_info*);
                return (org_ptr(0x1403d4f40L))(this, dwStartID, kInfo);
            };
            void LogIn(int n, unsigned int dwGuildSerial, unsigned int dwCharacSerial)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*, int, unsigned int, unsigned int);
                (org_ptr(0x1403d4360L))(this, n, dwGuildSerial, dwCharacSerial);
            };
            void Loop()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*);
                (org_ptr(0x1403d4110L))(this);
            };
            char NetClose(unsigned int dwGuildSerial, unsigned int dwCharacSerial, struct CPlayer* pkPlayer)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattleManager*, unsigned int, unsigned int, struct CPlayer*);
                return (org_ptr(0x1403d4a90L))(this, dwGuildSerial, dwCharacSerial, pkPlayer);
            };
            char ProcCheckGetGravityStone(uint16_t wIndex, unsigned int dwObjSerial, unsigned int dwGuildSerial, unsigned int dwCharacSerial)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattleManager*, uint16_t, unsigned int, unsigned int, unsigned int);
                return (org_ptr(0x1403d52c0L))(this, wIndex, dwObjSerial, dwGuildSerial, dwCharacSerial);
            };
            char ProcCheckGoal(unsigned int dwGuildSerial, unsigned int dwCharacSerial, int iPortalInx)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattleManager*, unsigned int, unsigned int, int);
                return (org_ptr(0x1403d5360L))(this, dwGuildSerial, dwCharacSerial, iPortalInx);
            };
            char ProcCheckTakeGravityStone(int iPortalInx, unsigned int dwGuildSerial, unsigned int dwCharacSerial)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattleManager*, int, unsigned int, unsigned int);
                return (org_ptr(0x1403d5220L))(this, iPortalInx, dwGuildSerial, dwCharacSerial);
            };
            int ProcJoin(unsigned int dwGuildSerial, unsigned int dwCharacSerial)
            {
                using org_ptr = int (WINAPIV*)(struct CNormalGuildBattleManager*, unsigned int, unsigned int);
                return (org_ptr(0x1403d5190L))(this, dwGuildSerial, dwCharacSerial);
            };
            bool PushDQSData(unsigned int uiFieldInx, unsigned int uiSLID, struct CNormalGuildBattle* pkBattle, struct CGuildBattleSchedule* pkSchedule)
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleManager*, unsigned int, unsigned int, struct CNormalGuildBattle*, struct CGuildBattleSchedule*);
                return (org_ptr(0x1403d5050L))(this, uiFieldInx, uiSLID, pkBattle, pkSchedule);
            };
            bool Save(unsigned int dwID)
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleManager*, unsigned int);
                return (org_ptr(0x1403d3d10L))(this, dwID);
            };
            void SendMemberPosition(unsigned int dwGuildSerial, unsigned int dwCharacSerial)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*, unsigned int, unsigned int);
                (org_ptr(0x1403d4cd0L))(this, dwGuildSerial, dwCharacSerial);
            };
            void SetNextEvent()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*);
                (org_ptr(0x1403ded80L))(this);
            };
            void SetReadyState(struct CNormalGuildBattle** ppkStart)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*, struct CNormalGuildBattle**);
                (org_ptr(0x1403d5480L))(this, ppkStart);
            };
            char Start(struct CPlayer* pkPlayer, unsigned int dwGuildSerial, unsigned int dwCharacSerial)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattleManager*, struct CPlayer*, unsigned int, unsigned int);
                return (org_ptr(0x1403d44e0L))(this, pkPlayer, dwGuildSerial, dwCharacSerial);
            };
            bool UpdateClearGuildBattleDayInfo(unsigned int dwStartSID, unsigned int dwEndSID)
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleManager*, unsigned int, unsigned int);
                return (org_ptr(0x1403d42e0L))(this, dwStartSID, dwEndSID);
            };
            ~CNormalGuildBattleManager()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*);
                (org_ptr(0x1403d3430L))(this);
            };
            void dtor_CNormalGuildBattleManager()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleManager*);
                (org_ptr(0x1403d3430L))(this);
            };
        };
    }; // end namespace GUILD_BATTLE
END_ATF_NAMESPACE
