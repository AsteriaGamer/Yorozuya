// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CNationSettingFactoryUS_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::CNationSettingFactoryUSctor_CNationSettingFactoryUS2_ptr CNationSettingFactoryUSctor_CNationSettingFactoryUS2_next(nullptr);
        static info::CNationSettingFactoryUSctor_CNationSettingFactoryUS2_clbk CNationSettingFactoryUSctor_CNationSettingFactoryUS2_user(nullptr);
        static info::CNationSettingFactoryUSCreate4_ptr CNationSettingFactoryUSCreate4_next(nullptr);
        static info::CNationSettingFactoryUSCreate4_clbk CNationSettingFactoryUSCreate4_user(nullptr);
        
        static void CNationSettingFactoryUSctor_CNationSettingFactoryUS2_wrapper(struct CNationSettingFactoryUS* _this)
        {
           CNationSettingFactoryUSctor_CNationSettingFactoryUS2_user(_this, CNationSettingFactoryUSctor_CNationSettingFactoryUS2_next);
        };
        static struct CNationSettingData* CNationSettingFactoryUSCreate4_wrapper(struct CNationSettingFactoryUS* _this, int iNationCode, char* szNationCodeStr, bool bServiceMode)
        {
           return CNationSettingFactoryUSCreate4_user(_this, iNationCode, szNationCodeStr, bServiceMode, CNationSettingFactoryUSCreate4_next);
        };
        
        static hook_record CNationSettingFactoryUS_functions[] = {
        {   (LPVOID)0x140219820L,
            (LPVOID *)&CNationSettingFactoryUSctor_CNationSettingFactoryUS2_user,
            (LPVOID *)&CNationSettingFactoryUSctor_CNationSettingFactoryUS2_next,
            (LPVOID)cast_pointer_function(CNationSettingFactoryUSctor_CNationSettingFactoryUS2_wrapper),
            (LPVOID)cast_pointer_function((void(CNationSettingFactoryUS::*)())&CNationSettingFactoryUS::ctor_CNationSettingFactoryUS) },
        {   (LPVOID)0x140231020L,
            (LPVOID *)&CNationSettingFactoryUSCreate4_user,
            (LPVOID *)&CNationSettingFactoryUSCreate4_next,
            (LPVOID)cast_pointer_function(CNationSettingFactoryUSCreate4_wrapper),
            (LPVOID)cast_pointer_function((struct CNationSettingData*(CNationSettingFactoryUS::*)(int, char*, bool))&CNationSettingFactoryUS::Create) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
