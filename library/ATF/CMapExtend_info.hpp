// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CMapExtend.hpp"


START_ATF_NAMESPACE
    namespace info
    {
        using CMapExtendctor_CMapExtend2_ptr = void (WINAPIV*)(struct CMapExtend*, struct CSurface**);
        using CMapExtendctor_CMapExtend2_clbk = void (WINAPIV*)(struct CMapExtend*, struct CSurface**, CMapExtendctor_CMapExtend2_ptr);
        using CMapExtendctor_CMapExtend4_ptr = void (WINAPIV*)(struct CMapExtend*);
        using CMapExtendctor_CMapExtend4_clbk = void (WINAPIV*)(struct CMapExtend*, CMapExtendctor_CMapExtend4_ptr);
        using CMapExtendConvertToMap6_ptr = void (WINAPIV*)(struct CMapExtend*, struct CSize*);
        using CMapExtendConvertToMap6_clbk = void (WINAPIV*)(struct CMapExtend*, struct CSize*, CMapExtendConvertToMap6_ptr);
        using CMapExtendDrawRect8_ptr = void (WINAPIV*)(struct CMapExtend*);
        using CMapExtendDrawRect8_clbk = void (WINAPIV*)(struct CMapExtend*, CMapExtendDrawRect8_ptr);
        using CMapExtendEndScreenPoint10_ptr = int (WINAPIV*)(struct CMapExtend*, struct CSize*);
        using CMapExtendEndScreenPoint10_clbk = int (WINAPIV*)(struct CMapExtend*, struct CSize*, CMapExtendEndScreenPoint10_ptr);
        using CMapExtendGetExtendSize12_ptr = struct CSize* (WINAPIV*)(struct CMapExtend*);
        using CMapExtendGetExtendSize12_clbk = struct CSize* (WINAPIV*)(struct CMapExtend*, CMapExtendGetExtendSize12_ptr);
        using CMapExtendInit14_ptr = void (WINAPIV*)(struct CMapExtend*, struct CSurface**);
        using CMapExtendInit14_clbk = void (WINAPIV*)(struct CMapExtend*, struct CSurface**, CMapExtendInit14_ptr);
        using CMapExtendMoveScreenPoint16_ptr = void (WINAPIV*)(struct CMapExtend*, struct CPoint*);
        using CMapExtendMoveScreenPoint16_clbk = void (WINAPIV*)(struct CMapExtend*, struct CPoint*, CMapExtendMoveScreenPoint16_ptr);
        using CMapExtendScrollMapDown18_ptr = void (WINAPIV*)(struct CMapExtend*, int, int);
        using CMapExtendScrollMapDown18_clbk = void (WINAPIV*)(struct CMapExtend*, int, int, CMapExtendScrollMapDown18_ptr);
        using CMapExtendScrollMapLeft20_ptr = void (WINAPIV*)(struct CMapExtend*, int);
        using CMapExtendScrollMapLeft20_clbk = void (WINAPIV*)(struct CMapExtend*, int, CMapExtendScrollMapLeft20_ptr);
        using CMapExtendScrollMapRight22_ptr = void (WINAPIV*)(struct CMapExtend*, int, int);
        using CMapExtendScrollMapRight22_clbk = void (WINAPIV*)(struct CMapExtend*, int, int, CMapExtendScrollMapRight22_ptr);
        using CMapExtendScrollMapUp24_ptr = void (WINAPIV*)(struct CMapExtend*, int);
        using CMapExtendScrollMapUp24_clbk = void (WINAPIV*)(struct CMapExtend*, int, CMapExtendScrollMapUp24_ptr);
        using CMapExtendStartScreenPoint26_ptr = void (WINAPIV*)(struct CMapExtend*, struct CPoint*, struct CMapData*, struct CRect*);
        using CMapExtendStartScreenPoint26_clbk = void (WINAPIV*)(struct CMapExtend*, struct CPoint*, struct CMapData*, struct CRect*, CMapExtendStartScreenPoint26_ptr);
        using CMapExtenddtor_CMapExtend28_ptr = void (WINAPIV*)(struct CMapExtend*);
        using CMapExtenddtor_CMapExtend28_clbk = void (WINAPIV*)(struct CMapExtend*, CMapExtenddtor_CMapExtend28_ptr);
        
    }; // end namespace info
END_ATF_NAMESPACE
