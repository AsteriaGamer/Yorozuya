// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"


START_ATF_NAMESPACE
    #pragma pack(push, 1)
    struct  _STORAGE_LIST
    {
        struct  _storage_con
        {
            char m_bLoad;
            char m_byTableCode;
            char m_byClientIndex;
            unsigned __int16 m_wItemIndex;
            unsigned __int64 m_dwDur;
            unsigned int m_dwLv;
            unsigned __int16 m_wSerial;
            bool m_bLock;
            unsigned int m_dwETSerialNumber;
            unsigned __int64 m_lnUID;
            char m_byCsMethod;
            unsigned int m_dwT;
            unsigned int m_dwLendRegdTime;
        public:
            void Init()
            {
                using org_ptr = void (WINAPIV*)(struct _storage_con*);
                (org_ptr(0x140208310L))(this);
            };
            _storage_con(char byTableCode, uint16_t wItemIndex, unsigned int dwDur, unsigned int dwLv, uint16_t wSerial)
            {
                using org_ptr = void (WINAPIV*)(struct _storage_con*, char, uint16_t, unsigned int, unsigned int, uint16_t);
                (org_ptr(0x140108200L))(this, byTableCode, wItemIndex, dwDur, dwLv, wSerial);
            };
            void ctor__storage_con(char byTableCode, uint16_t wItemIndex, unsigned int dwDur, unsigned int dwLv, uint16_t wSerial)
            {
                using org_ptr = void (WINAPIV*)(struct _storage_con*, char, uint16_t, unsigned int, unsigned int, uint16_t);
                (org_ptr(0x140108200L))(this, byTableCode, wItemIndex, dwDur, dwLv, wSerial);
            };
            _storage_con()
            {
                using org_ptr = void (WINAPIV*)(struct _storage_con*);
                (org_ptr(0x140098260L))(this);
            };
            void ctor__storage_con()
            {
                using org_ptr = void (WINAPIV*)(struct _storage_con*);
                (org_ptr(0x140098260L))(this);
            };
            void empty()
            {
                using org_ptr = void (WINAPIV*)(struct _storage_con*);
                (org_ptr(0x14010fb50L))(this);
            };
            void lock(bool bLock)
            {
                using org_ptr = void (WINAPIV*)(struct _storage_con*, bool);
                (org_ptr(0x140079090L))(this, bLock);
            };
        };
        struct   _db_con : _storage_con
        {
            _STORAGE_LIST *m_pInList;
            char m_byStorageIndex;
        public:
            static unsigned int CalcNewSerialNumber()
            {
                using org_ptr = unsigned int (WINAPIV*)();
                return (org_ptr(0x14010e1f0L))();
            };
            unsigned int GetSerialNumber()
            {
                using org_ptr = unsigned int (WINAPIV*)(struct _db_con*);
                return (org_ptr(0x14010e1d0L))(this);
            };
            void Init()
            {
                using org_ptr = void (WINAPIV*)(struct _db_con*);
                (org_ptr(0x1402082b0L))(this);
            };
            void SetSerialNumber(unsigned int dwSN)
            {
                using org_ptr = void (WINAPIV*)(struct _db_con*, unsigned int);
                (org_ptr(0x14010e160L))(this, dwSN);
            };
            _db_con()
            {
                using org_ptr = void (WINAPIV*)(struct _db_con*);
                (org_ptr(0x1400981f0L))(this);
            };
            void ctor__db_con()
            {
                using org_ptr = void (WINAPIV*)(struct _db_con*);
                (org_ptr(0x1400981f0L))(this);
            };
        };
        int m_nListNum;
        int m_nUsedNum;
        int m_nListCode;
        _db_con *m_pStorageList;
    public:
        bool AlterCurDur(int n, int nAlter, uint64_t* pdwLeftDur)
        {
            using org_ptr = bool (WINAPIV*)(struct _STORAGE_LIST*, int, int, uint64_t*);
            return (org_ptr(0x14010f090L))(this, n, nAlter, pdwLeftDur);
        };
        bool EmptyCon(int n)
        {
            using org_ptr = bool (WINAPIV*)(struct _STORAGE_LIST*, int);
            return (org_ptr(0x14010eeb0L))(this, n);
        };
        int GetIndexEmptyCon()
        {
            using org_ptr = int (WINAPIV*)(struct _STORAGE_LIST*);
            return (org_ptr(0x14010ecf0L))(this);
        };
        int GetIndexFromSerial(uint16_t wSerial)
        {
            using org_ptr = int (WINAPIV*)(struct _STORAGE_LIST*, uint16_t);
            return (org_ptr(0x14010ed70L))(this, wSerial);
        };
        int GetNumEmptyCon()
        {
            using org_ptr = int (WINAPIV*)(struct _STORAGE_LIST*);
            return (org_ptr(0x14010ebd0L))(this);
        };
        int GetNumUseCon()
        {
            using org_ptr = int (WINAPIV*)(struct _STORAGE_LIST*);
            return (org_ptr(0x14010ec60L))(this);
        };
        struct _db_con* GetPtrFromItemCode(char* pwszItemCode)
        {
            using org_ptr = struct _db_con* (WINAPIV*)(struct _STORAGE_LIST*, char*);
            return (org_ptr(0x14010f6d0L))(this, pwszItemCode);
        };
        struct _db_con* GetPtrFromItemInfo(char byTableCode, uint16_t ItemIndex)
        {
            using org_ptr = struct _db_con* (WINAPIV*)(struct _STORAGE_LIST*, char, uint16_t);
            return (org_ptr(0x14010f530L))(this, byTableCode, ItemIndex);
        };
        struct _db_con* GetPtrFromSerial(uint16_t wSerial)
        {
            using org_ptr = struct _db_con* (WINAPIV*)(struct _STORAGE_LIST*, uint16_t);
            return (org_ptr(0x14010ee40L))(this, wSerial);
        };
        unsigned int GetRemainLendTime(int n, int tmCur)
        {
            using org_ptr = unsigned int (WINAPIV*)(struct _STORAGE_LIST*, int, int);
            return (org_ptr(0x14010f640L))(this, n, tmCur);
        };
        bool GradeDown(int n, unsigned int dwUptInfo)
        {
            using org_ptr = bool (WINAPIV*)(struct _STORAGE_LIST*, int, unsigned int);
            return (org_ptr(0x14010f310L))(this, n, dwUptInfo);
        };
        bool GradeUp(int n, unsigned int dwUptInfo)
        {
            using org_ptr = bool (WINAPIV*)(struct _STORAGE_LIST*, int, unsigned int);
            return (org_ptr(0x14010f2d0L))(this, n, dwUptInfo);
        };
        void SetAllEmpty()
        {
            using org_ptr = void (WINAPIV*)(struct _STORAGE_LIST*);
            (org_ptr(0x14010eb60L))(this);
        };
        char SetClientIndexFromSerial(uint16_t wSerial, char byClientIndex, char* pbyoutOldClientIndex)
        {
            using org_ptr = char (WINAPIV*)(struct _STORAGE_LIST*, uint16_t, char, char*);
            return (org_ptr(0x14010f3f0L))(this, wSerial, byClientIndex, pbyoutOldClientIndex);
        };
        bool SetGrade(int n, char byLv, unsigned int dwUptInfo)
        {
            using org_ptr = bool (WINAPIV*)(struct _STORAGE_LIST*, int, char, unsigned int);
            return (org_ptr(0x14010f350L))(this, n, byLv, dwUptInfo);
        };
        void SetLimCurDur(int n, unsigned int dwSetDur)
        {
            using org_ptr = void (WINAPIV*)(struct _STORAGE_LIST*, int, unsigned int);
            (org_ptr(0x14010f290L))(this, n, dwSetDur);
        };
        void SetLock(int n, bool bLock)
        {
            using org_ptr = void (WINAPIV*)(struct _STORAGE_LIST*, int, bool);
            (org_ptr(0x14010f390L))(this, n, bLock);
        };
        void SetMemory(struct _db_con* pList, int nListName, int nListNum, int nUsedNum)
        {
            using org_ptr = void (WINAPIV*)(struct _STORAGE_LIST*, struct _db_con*, int, int, int);
            (org_ptr(0x14010ea40L))(this, pList, nListName, nListNum, nUsedNum);
        };
        bool SetUseListNum(int nUsedNum)
        {
            using org_ptr = bool (WINAPIV*)(struct _STORAGE_LIST*, int);
            return (org_ptr(0x14010eb20L))(this, nUsedNum);
        };
        unsigned int TransInCon(struct _storage_con* pCon)
        {
            using org_ptr = unsigned int (WINAPIV*)(struct _STORAGE_LIST*, struct _storage_con*);
            return (org_ptr(0x14010ef40L))(this, pCon);
        };
        bool UpdateCurDur(int n, int nUpdate)
        {
            using org_ptr = bool (WINAPIV*)(struct _STORAGE_LIST*, int, int);
            return (org_ptr(0x14010f4c0L))(this, n, nUpdate);
        };
        _STORAGE_LIST()
        {
            using org_ptr = void (WINAPIV*)(struct _STORAGE_LIST*);
            (org_ptr(0x14010ea10L))(this);
        };
        void ctor__STORAGE_LIST()
        {
            using org_ptr = void (WINAPIV*)(struct _STORAGE_LIST*);
            (org_ptr(0x14010ea10L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
