// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CLuaSignalReActor.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  object2lua<CLuaSignalReActor *>
        {
        public:
            static void invoke(struct object2lua<CLuaSignalReActor *>* _this, lua_State* L, struct CLuaSignalReActor* val)
            {
                using org_ptr = void (WINAPIV*)(struct object2lua<CLuaSignalReActor *>*, lua_State*, struct CLuaSignalReActor*);
                (org_ptr(0x14040b250L))(_this, L, val);
            };
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "CLuaEventNode.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  object2lua<CLuaEventNode *>
        {
        public:
            static void invoke(struct object2lua<CLuaEventNode *>* _this, lua_State* L, struct CLuaEventNode* val)
            {
                using org_ptr = void (WINAPIV*)(struct object2lua<CLuaEventNode *>*, lua_State*, struct CLuaEventNode*);
                (org_ptr(0x140404ab0L))(_this, L, val);
            };
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "CMonster.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  object2lua<CMonster *>
        {
        public:
            static void invoke(struct object2lua<CMonster *>* _this, lua_State* L, struct CMonster* val)
            {
                using org_ptr = void (WINAPIV*)(struct object2lua<CMonster *>*, lua_State*, struct CMonster*);
                (org_ptr(0x14040b350L))(_this, L, val);
            };
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "CLuaEventMgr.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  object2lua<CLuaEventMgr *>
        {
        public:
            static void invoke(struct object2lua<CLuaEventMgr *>* _this, lua_State* L, struct CLuaEventMgr* val)
            {
                using org_ptr = void (WINAPIV*)(struct object2lua<CLuaEventMgr *>*, lua_State*, struct CLuaEventMgr*);
                (org_ptr(0x14040b2d0L))(_this, L, val);
            };
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "CLuaScript.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  object2lua<CLuaScript *>
        {
        public:
            static void invoke(struct object2lua<CLuaScript *>* _this, lua_State* L, struct CLuaScript* val)
            {
                using org_ptr = void (WINAPIV*)(struct object2lua<CLuaScript *>*, lua_State*, struct CLuaScript*);
                (org_ptr(0x140402fd0L))(_this, L, val);
            };
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
