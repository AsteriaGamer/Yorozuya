// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "std__pair.hpp"


START_ATF_NAMESPACE
    namespace std
    {
        namespace info
        {
            using std__pairctor_pair2_ptr = void (WINAPIV*)(struct std::pair<int,int>*, int*, int*);
            using std__pairctor_pair2_clbk = void (WINAPIV*)(struct std::pair<int,int>*, int*, int*, std__pairctor_pair2_ptr);
            
        }; // end namespace info
    }; // end namespace std
END_ATF_NAMESPACE
#include "std__pair.hpp"


START_ATF_NAMESPACE
    namespace std
    {
        namespace info
        {
            using std__pairctor_pair2_ptr = void (WINAPIV*)(struct std::pair<int,CNationCodeStr *>*, int*, struct CNationCodeStr**);
            using std__pairctor_pair2_clbk = void (WINAPIV*)(struct std::pair<int,CNationCodeStr *>*, int*, struct CNationCodeStr**, std__pairctor_pair2_ptr);
            using std__pairctor_pair4_ptr = void (WINAPIV*)(struct std::pair<int,CNationCodeStr *>*, struct std::pair<int const ,CNationCodeStr *>*);
            using std__pairctor_pair4_clbk = void (WINAPIV*)(struct std::pair<int,CNationCodeStr *>*, struct std::pair<int const ,CNationCodeStr *>*, std__pairctor_pair4_ptr);
            
        }; // end namespace info
    }; // end namespace std
END_ATF_NAMESPACE
#include "std__pair.hpp"


START_ATF_NAMESPACE
    namespace std
    {
        namespace info
        {
            using std__pairctor_pair2_ptr = void (WINAPIV*)(struct std::pair<int,CAsyncLogInfo *>*, struct std::pair<int const ,CAsyncLogInfo *>*);
            using std__pairctor_pair2_clbk = void (WINAPIV*)(struct std::pair<int,CAsyncLogInfo *>*, struct std::pair<int const ,CAsyncLogInfo *>*, std__pairctor_pair2_ptr);
            
        }; // end namespace info
    }; // end namespace std
END_ATF_NAMESPACE
#include "std__pair.hpp"


START_ATF_NAMESPACE
    namespace std
    {
        namespace info
        {
            using std__pairctor_pair2_ptr = void (WINAPIV*)(struct std::pair<int,CNationSettingFactory *>*, int*, struct CNationSettingFactory**);
            using std__pairctor_pair2_clbk = void (WINAPIV*)(struct std::pair<int,CNationSettingFactory *>*, int*, struct CNationSettingFactory**, std__pairctor_pair2_ptr);
            using std__pairctor_pair4_ptr = void (WINAPIV*)(struct std::pair<int,CNationSettingFactory *>*, struct std::pair<int const ,CNationSettingFactory *>*);
            using std__pairctor_pair4_clbk = void (WINAPIV*)(struct std::pair<int,CNationSettingFactory *>*, struct std::pair<int const ,CNationSettingFactory *>*, std__pairctor_pair4_ptr);
            
        }; // end namespace info
    }; // end namespace std
END_ATF_NAMESPACE
