// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "std__basic_string.hpp"
#include "std__exception.hpp"


START_ATF_NAMESPACE
    namespace std
    {
        struct  logic_error : exception
        {
            basic_string<char> _Str;
        public:
            logic_error(struct basic_string<char>* _Message)
				: exception(&_Message->_Bx._Ptr)
            {
                using org_ptr = void (WINAPIV*)(struct logic_error*, struct basic_string<char>*);
                (org_ptr(0x14007e7f0L))(this, _Message);
            };
            void ctor_logic_error(struct basic_string<char>* _Message)
            {
                using org_ptr = void (WINAPIV*)(struct logic_error*, struct basic_string<char>*);
                (org_ptr(0x14007e7f0L))(this, _Message);
            };
            logic_error(struct logic_error* __that)
				: exception(__that)
            {
                using org_ptr = void (WINAPIV*)(struct logic_error*, struct logic_error*);
                (org_ptr(0x14007ebe0L))(this, __that);
            };
            void ctor_logic_error(struct logic_error* __that)
            {
                using org_ptr = void (WINAPIV*)(struct logic_error*, struct logic_error*);
                (org_ptr(0x14007ebe0L))(this, __that);
            };
            char* what()
            {
                using org_ptr = char* (WINAPIV*)(struct logic_error*);
                return (org_ptr(0x14007e8b0L))(this);
            };
            ~logic_error()
            {
                using org_ptr = void (WINAPIV*)(struct logic_error*);
                (org_ptr(0x14007e970L))(this);
            };
            void dtor_logic_error()
            {
                using org_ptr = void (WINAPIV*)(struct logic_error*);
                (org_ptr(0x14007e970L))(this);
            };
        };
    }; // end namespace std
END_ATF_NAMESPACE
