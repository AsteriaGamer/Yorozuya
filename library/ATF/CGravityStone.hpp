// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CGameObject.hpp"
#include "CPlayer.hpp"
#include "_object_create_setdata.hpp"


START_ATF_NAMESPACE
    struct  CGravityStone : CGameObject
    {
        unsigned int m_dwTakeLimitTime;
        CPlayer *m_pkOwner;
    public:
        CGravityStone(uint16_t wInx)
        {
            using org_ptr = void (WINAPIV*)(struct CGravityStone*, uint16_t);
            (org_ptr(0x140164910L))(this, wInx);
        };
        void ctor_CGravityStone(uint16_t wInx)
        {
            using org_ptr = void (WINAPIV*)(struct CGravityStone*, uint16_t);
            (org_ptr(0x140164910L))(this, wInx);
        };
        char CheatGet(struct CPlayer* pkPlayer)
        {
            using org_ptr = char (WINAPIV*)(struct CGravityStone*, struct CPlayer*);
            return (org_ptr(0x1403f01b0L))(this, pkPlayer);
        };
        bool CheckTakeTimeLimit()
        {
            using org_ptr = bool (WINAPIV*)(struct CGravityStone*);
            return (org_ptr(0x1401650c0L))(this);
        };
        void Clear()
        {
            using org_ptr = void (WINAPIV*)(struct CGravityStone*);
            (org_ptr(0x140164db0L))(this);
        };
        void Destroy()
        {
            using org_ptr = void (WINAPIV*)(struct CGravityStone*);
            (org_ptr(0x140165060L))(this);
        };
        char Drop(struct CPlayer* pkPlayer)
        {
            using org_ptr = char (WINAPIV*)(struct CGravityStone*, struct CPlayer*);
            return (org_ptr(0x140164b50L))(this, pkPlayer);
        };
        char Get(uint16_t wIndex, unsigned int dwObjSerial, struct CPlayer* pkPlayer)
        {
            using org_ptr = char (WINAPIV*)(struct CGravityStone*, uint16_t, unsigned int, struct CPlayer*);
            return (org_ptr(0x140164ce0L))(this, wIndex, dwObjSerial, pkPlayer);
        };
        struct CPlayer* GetOwner()
        {
            using org_ptr = struct CPlayer* (WINAPIV*)(struct CGravityStone*);
            return (org_ptr(0x140034ac0L))(this);
        };
        float* GetOwnerCurPos()
        {
            using org_ptr = float* (WINAPIV*)(struct CGravityStone*);
            return (org_ptr(0x140164f30L))(this);
        };
        bool IsInTown()
        {
            using org_ptr = bool (WINAPIV*)(struct CGravityStone*);
            return (org_ptr(0x140164ec0L))(this);
        };
        bool IsNearPosition(float* pfCurPos)
        {
            using org_ptr = bool (WINAPIV*)(struct CGravityStone*, float*);
            return (org_ptr(0x1401652b0L))(this, pfCurPos);
        };
        bool IsValidOwner(struct CPlayer* pkPlayer)
        {
            using org_ptr = bool (WINAPIV*)(struct CGravityStone*, struct CPlayer*);
            return (org_ptr(0x140164e30L))(this, pkPlayer);
        };
        bool Regen(struct _object_create_setdata* pParam)
        {
            using org_ptr = bool (WINAPIV*)(struct CGravityStone*, struct _object_create_setdata*);
            return (org_ptr(0x140164ad0L))(this, pParam);
        };
        void SendMsg_Create()
        {
            using org_ptr = void (WINAPIV*)(struct CGravityStone*);
            (org_ptr(0x140165140L))(this);
        };
        void SendMsg_Destroy()
        {
            using org_ptr = void (WINAPIV*)(struct CGravityStone*);
            (org_ptr(0x140165220L))(this);
        };
        void SendMsg_FixPosition(int n)
        {
            using org_ptr = void (WINAPIV*)(struct CGravityStone*, int);
            (org_ptr(0x140164f70L))(this, n);
        };
        void SetOwner(struct CPlayer* pkPlayer)
        {
            using org_ptr = void (WINAPIV*)(struct CGravityStone*, struct CPlayer*);
            (org_ptr(0x140164a50L))(this, pkPlayer);
        };
        ~CGravityStone()
        {
            using org_ptr = void (WINAPIV*)(struct CGravityStone*);
            (org_ptr(0x140164a00L))(this);
        };
        void dtor_CGravityStone()
        {
            using org_ptr = void (WINAPIV*)(struct CGravityStone*);
            (org_ptr(0x140164a00L))(this);
        };
    };
END_ATF_NAMESPACE
