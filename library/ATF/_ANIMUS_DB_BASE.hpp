// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_ANIMUSKEY.hpp"

START_ATF_NAMESPACE
    struct _ANIMUS_DB_BASE
    {
        struct  _LIST
        {
            _ANIMUSKEY Key;
            unsigned __int64 dwExp;
            unsigned int dwParam;
            unsigned int dwItemETSerial;
            unsigned __int64 lnUID;
            char byCsMethod;
            unsigned int dwT;
            unsigned int dwLendRegdTime;
        public:
            void Init()
            {
                using org_ptr = void (WINAPIV*)(struct _LIST*);
                (org_ptr(0x1400762a0L))(this);
            };
            bool Release()
            {
                using org_ptr = bool (WINAPIV*)(struct _LIST*);
                return (org_ptr(0x140120940L))(this);
            };
            bool Set(struct _STORAGE_LIST::_db_con* pItem)
            {
                using org_ptr = bool (WINAPIV*)(struct _LIST*, struct _STORAGE_LIST::_db_con*);
                return (org_ptr(0x140120430L))(this, pItem);
            };
            _LIST()
            {
                using org_ptr = void (WINAPIV*)(struct _LIST*);
                (org_ptr(0x140076250L))(this);
            };
            void ctor__LIST()
            {
                using org_ptr = void (WINAPIV*)(struct _LIST*);
                (org_ptr(0x140076250L))(this);
            };
        };
        struct _animus_param
        {
            unsigned __int16 wHP;
            unsigned __int16 wFP;
        };
        _LIST m_List[4];
    public:
        void Init()
        {
            using org_ptr = void (WINAPIV*)(struct _ANIMUS_DB_BASE*);
            (org_ptr(0x140076370L))(this);
        };
        _ANIMUS_DB_BASE()
        {
            using org_ptr = void (WINAPIV*)(struct _ANIMUS_DB_BASE*);
            (org_ptr(0x1400761e0L))(this);
        };
        void ctor__ANIMUS_DB_BASE()
        {
            using org_ptr = void (WINAPIV*)(struct _ANIMUS_DB_BASE*);
            (org_ptr(0x1400761e0L))(this);
        };
    };
END_ATF_NAMESPACE
