// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_reged_char_result_zone_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::_reged_char_result_zonector__reged_char_result_zone2_ptr _reged_char_result_zonector__reged_char_result_zone2_next(nullptr);
        info::_reged_char_result_zonector__reged_char_result_zone2_clbk _reged_char_result_zonector__reged_char_result_zone2_user(nullptr);
        info::_reged_char_result_zonesize4_ptr _reged_char_result_zonesize4_next(nullptr);
        info::_reged_char_result_zonesize4_clbk _reged_char_result_zonesize4_user(nullptr);
        
        void _reged_char_result_zonector__reged_char_result_zone2_wrapper(struct _reged_char_result_zone* _this)
        {
           _reged_char_result_zonector__reged_char_result_zone2_user(_this, _reged_char_result_zonector__reged_char_result_zone2_next);
        };
        int _reged_char_result_zonesize4_wrapper(struct _reged_char_result_zone* _this)
        {
           return _reged_char_result_zonesize4_user(_this, _reged_char_result_zonesize4_next);
        };
        
        hook_record _reged_char_result_zone_functions[] = {
        {   (LPVOID)0x14011f680L,
            (LPVOID *)&_reged_char_result_zonector__reged_char_result_zone2_user,
            (LPVOID *)&_reged_char_result_zonector__reged_char_result_zone2_next,
            (LPVOID)cast_pointer_function(_reged_char_result_zonector__reged_char_result_zone2_wrapper),
            (LPVOID)cast_pointer_function((void(_reged_char_result_zone::*)())&_reged_char_result_zone::ctor__reged_char_result_zone) },
        {   (LPVOID)0x14011f6f0L,
            (LPVOID *)&_reged_char_result_zonesize4_user,
            (LPVOID *)&_reged_char_result_zonesize4_next,
            (LPVOID)cast_pointer_function(_reged_char_result_zonesize4_wrapper),
            (LPVOID)cast_pointer_function((int(_reged_char_result_zone::*)())&_reged_char_result_zone::size) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
