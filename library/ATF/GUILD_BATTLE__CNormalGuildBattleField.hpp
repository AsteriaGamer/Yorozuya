// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CCircleZone.hpp"
#include "CGravityStone.hpp"
#include "CGravityStoneRegener.hpp"
#include "CMapData.hpp"
#include "CPlayer.hpp"
#include "_dummy_position.hpp"


START_ATF_NAMESPACE
    namespace GUILD_BATTLE
    {
        struct CNormalGuildBattleField
        {
            bool m_bInit;
            unsigned int m_uiMapInx;
            CMapData *m_pkMap;
            _dummy_position *m_pkStartPos[2];
            unsigned int m_ui1PGoalPosCnt;
            CCircleZone *m_pk1PGoalZone;
            unsigned int m_ui2PGoalPosCnt;
            CCircleZone *m_pk2PGoalZone;
            unsigned int m_uiRegenPosCnt;
            CGravityStoneRegener *m_pkRegenPos;
            CGravityStone *m_pkBall;
        public:
            CNormalGuildBattleField()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleField*);
                (org_ptr(0x1403eb7b0L))(this);
            };
            void ctor_CNormalGuildBattleField()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleField*);
                (org_ptr(0x1403eb7b0L))(this);
            };
            void CheatDestroyStone()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleField*);
                (org_ptr(0x1403ed6c0L))(this);
            };
            char CheatDropStone(struct CPlayer* pkPlayer)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattleField*, struct CPlayer*);
                return (org_ptr(0x1403ed7c0L))(this, pkPlayer);
            };
            bool CheatForceTakeStone(struct CPlayer* pkPlayer)
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleField*, struct CPlayer*);
                return (org_ptr(0x1403ed8c0L))(this, pkPlayer);
            };
            char CheatGetStone(struct CPlayer* pkPlayer)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattleField*, struct CPlayer*);
                return (org_ptr(0x1403ed760L))(this, pkPlayer);
            };
            int CheatRegenStone(struct CPlayer* pkPlayer)
            {
                using org_ptr = int (WINAPIV*)(struct CNormalGuildBattleField*, struct CPlayer*);
                return (org_ptr(0x1403ed550L))(this, pkPlayer);
            };
            int CheatRegenStone(unsigned int uiPos)
            {
                using org_ptr = int (WINAPIV*)(struct CNormalGuildBattleField*, unsigned int);
                return (org_ptr(0x1403ed490L))(this, uiPos);
            };
            char CheatTakeStone(int iPortalInx, struct CPlayer* pkPlayer)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattleField*, int, struct CPlayer*);
                return (org_ptr(0x1403ed710L))(this, iPortalInx, pkPlayer);
            };
            bool CheckBallTakeLimitTime()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleField*);
                return (org_ptr(0x1403ed0f0L))(this);
            };
            bool CheckIsInTown()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleField*);
                return (org_ptr(0x1403ed070L))(this);
            };
            bool ClearBall()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleField*);
                return (org_ptr(0x1403ed140L))(this);
            };
            bool ClearRegen()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleField*);
                return (org_ptr(0x1403ed190L))(this);
            };
            bool CreateFieldObject()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleField*);
                return (org_ptr(0x1403ec630L))(this);
            };
            void Destroy()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleField*);
                (org_ptr(0x1403eded0L))(this);
            };
            void DestroyFieldObject()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleField*);
                (org_ptr(0x1403ec810L))(this);
            };
            char DropBall(struct CPlayer* pkPlayer)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattleField*, struct CPlayer*);
                return (org_ptr(0x1403ece10L))(this, pkPlayer);
            };
            char GetBall(uint16_t wIndex, unsigned int dwObjSerial, struct CPlayer* pkPlayer)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattleField*, uint16_t, unsigned int, struct CPlayer*);
                return (org_ptr(0x1403ecd90L))(this, wIndex, dwObjSerial, pkPlayer);
            };
            struct CPlayer* GetBallOwner()
            {
                using org_ptr = struct CPlayer* (WINAPIV*)(struct CNormalGuildBattleField*);
                return (org_ptr(0x1403ed210L))(this);
            };
            struct CCircleZone* GetCircleZone(int iInx)
            {
                using org_ptr = struct CCircleZone* (WINAPIV*)(struct CNormalGuildBattleField*, int);
                return (org_ptr(0x1403eca10L))(this, iInx);
            };
            struct CMapData* GetMap()
            {
                using org_ptr = struct CMapData* (WINAPIV*)(struct CNormalGuildBattleField*);
                return (org_ptr(0x1400a6a60L))(this);
            };
            int GetMapCode()
            {
                using org_ptr = int (WINAPIV*)(struct CNormalGuildBattleField*);
                return (org_ptr(0x1403ec950L))(this);
            };
            unsigned int GetMapID()
            {
                using org_ptr = unsigned int (WINAPIV*)(struct CNormalGuildBattleField*);
                return (org_ptr(0x1403eb0f0L))(this);
            };
            char* GetMapStrCode()
            {
                using org_ptr = char* (WINAPIV*)(struct CNormalGuildBattleField*);
                return (org_ptr(0x1403ec910L))(this);
            };
            void GetPortalIndexInfo(int* iRedPortalInx, int* iBluePortalInx, int* piRegenPortalInx)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleField*, int*, int*, int*);
                (org_ptr(0x1403ecaf0L))(this, iRedPortalInx, iBluePortalInx, piRegenPortalInx);
            };
            struct CGravityStoneRegener* GetRegener(int iInx)
            {
                using org_ptr = struct CGravityStoneRegener* (WINAPIV*)(struct CNormalGuildBattleField*, int);
                return (org_ptr(0x1403ec980L))(this, iInx);
            };
            struct CGravityStone* GetStone()
            {
                using org_ptr = struct CGravityStone* (WINAPIV*)(struct CNormalGuildBattleField*);
                return (org_ptr(0x1403f0360L))(this);
            };
            bool Init(unsigned int uiMapInx)
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleField*, unsigned int);
                return (org_ptr(0x1403eb870L))(this, uiMapInx);
            };
            char IsGoal(struct CPlayer* pkPlayer, int iPortalInx)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattleField*, struct CPlayer*, int);
                return (org_ptr(0x1403ece70L))(this, pkPlayer, iPortalInx);
            };
            bool LoadDummys(char* szSectionName, char* szKeyName, char* szItemName, unsigned int* uiCnt, struct _dummy_position*** ppDummy)
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleField*, char*, char*, char*, unsigned int*, struct _dummy_position***);
                return (org_ptr(0x1403ed930L))(this, szSectionName, szKeyName, szItemName, uiCnt, ppDummy);
            };
            bool MoveStartPos(char byStartPos, char byMapOutType, struct CPlayer* pkPlayer)
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleField*, char, char, struct CPlayer*);
                return (org_ptr(0x1403ed280L))(this, byStartPos, byMapOutType, pkPlayer);
            };
            int RegenBall()
            {
                using org_ptr = int (WINAPIV*)(struct CNormalGuildBattleField*);
                return (org_ptr(0x1403ecbe0L))(this);
            };
            bool SetPortalInx(struct _dummy_position** ppkDummy, int** iPortalInx, unsigned int uiCnt)
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleField*, struct _dummy_position**, int**, unsigned int);
                return (org_ptr(0x1403edd60L))(this, ppkDummy, iPortalInx, uiCnt);
            };
            bool Start(char byStartPos, struct CPlayer* pkPlayer)
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleField*, char, struct CPlayer*);
                return (org_ptr(0x1403ed410L))(this, byStartPos, pkPlayer);
            };
            char TakeBall(int iPortalInx, struct CPlayer* pkPlayer)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattleField*, int, struct CPlayer*);
                return (org_ptr(0x1403ecc60L))(this, iPortalInx, pkPlayer);
            };
            ~CNormalGuildBattleField()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleField*);
                (org_ptr(0x1403eb830L))(this);
            };
            void dtor_CNormalGuildBattleField()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleField*);
                (org_ptr(0x1403eb830L))(this);
            };
        };
    }; // end namespace GUILD_BATTLE
END_ATF_NAMESPACE
