// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_qry_case_raceboss_accumulation_winrate.hpp"


START_ATF_NAMESPACE
    struct CRaceBossWinRate
    {
        char m_byTotalBattleCnt;
        char m_byWinCnt[3];
        unsigned int m_dwAccBattleCnt[3];
        unsigned int m_dwAccWinCnt[3];
    public:
        CRaceBossWinRate()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossWinRate*);
            (org_ptr(0x14024d390L))(this);
        };
        void ctor_CRaceBossWinRate()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossWinRate*);
            (org_ptr(0x14024d390L))(this);
        };
        void CompleteBossAccmulationWinRate(struct _qry_case_raceboss_accumulation_winrate* pData)
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossWinRate*, struct _qry_case_raceboss_accumulation_winrate*);
            (org_ptr(0x14024cf50L))(this, pData);
        };
        void Destroy()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossWinRate*);
            (org_ptr(0x14024c230L))(this);
        };
        static struct CRaceBossWinRate* Instance()
        {
            using org_ptr = struct CRaceBossWinRate* (WINAPIV*)();
            return (org_ptr(0x14024c170L))();
        };
        char LoadBossAccmulationWinRate(struct _qry_case_raceboss_accumulation_winrate* pData)
        {
            using org_ptr = char (WINAPIV*)(struct CRaceBossWinRate*, struct _qry_case_raceboss_accumulation_winrate*);
            return (org_ptr(0x14024cdb0L))(this, pData);
        };
        bool LoadBossCurrentWinRate()
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBossWinRate*);
            return (org_ptr(0x14024cbd0L))(this);
        };
        bool LoadDB()
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBossWinRate*);
            return (org_ptr(0x14024cb70L))(this);
        };
        bool LoadINI()
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBossWinRate*);
            return (org_ptr(0x14024caa0L))(this);
        };
        void Notify(char byRace)
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossWinRate*, char);
            (org_ptr(0x14024c570L))(this, byRace);
        };
        void Notify(char byRace, uint16_t wIndex)
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossWinRate*, char, uint16_t);
            (org_ptr(0x14024c700L))(this, byRace, wIndex);
        };
        void Notify()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossWinRate*);
            (org_ptr(0x14024c420L))(this);
        };
        bool SaveINI()
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBossWinRate*);
            return (org_ptr(0x14024c810L))(this);
        };
        void UpdateRaceBossWinRate(char byRace)
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossWinRate*, char);
            (org_ptr(0x14024c2c0L))(this, byRace);
        };
        void UpdateRaceBossWinRate()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossWinRate*);
            (org_ptr(0x14024c2f0L))(this);
        };
        void UpdateTotalCnt()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossWinRate*);
            (org_ptr(0x14024c360L))(this);
        };
        void UpdateWinCnt(char byRace)
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossWinRate*, char);
            (org_ptr(0x14024c3b0L))(this, byRace);
        };
        ~CRaceBossWinRate()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossWinRate*);
            (org_ptr(0x14024d4b0L))(this);
        };
        void dtor_CRaceBossWinRate()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossWinRate*);
            (org_ptr(0x14024d4b0L))(this);
        };
    };
END_ATF_NAMESPACE
