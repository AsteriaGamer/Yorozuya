// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "UsRefObject.hpp"
#include "Us_HFSM.hpp"


START_ATF_NAMESPACE
    struct  UsStateTBL : UsRefObject
    {
        struct _TBLData
        {
            char byKey;
            void (WINAPIV *pEvnetFun)(Us_HFSM *, unsigned int, void *);
        public:
            void Init()
            {
                using org_ptr = void (WINAPIV*)(struct _TBLData*);
                (org_ptr(0x140163640L))(this);
            };
            _TBLData()
            {
                using org_ptr = void (WINAPIV*)(struct _TBLData*);
                (org_ptr(0x1401635f0L))(this);
            };
            void ctor__TBLData()
            {
                using org_ptr = void (WINAPIV*)(struct _TBLData*);
                (org_ptr(0x1401635f0L))(this);
            };
        };
        struct _HFSM_Node_Info
        {
            int m_ParentData;
            unsigned int m_dwStartState;
            int m_bUsed;
            unsigned int m_dwLoopTime;
        public:
            void Init()
            {
                using org_ptr = void (WINAPIV*)(struct _HFSM_Node_Info*);
                (org_ptr(0x1401635a0L))(this);
            };
            _HFSM_Node_Info()
            {
                using org_ptr = void (WINAPIV*)(struct _HFSM_Node_Info*);
                (org_ptr(0x140163550L))(this);
            };
            void ctor__HFSM_Node_Info()
            {
                using org_ptr = void (WINAPIV*)(struct _HFSM_Node_Info*);
                (org_ptr(0x140163550L))(this);
            };
        };
        unsigned int m_IdentityKey;
        _TBLData **m_ppTBL;
        _HFSM_Node_Info *m_pNodeInfo;
        int m_bAlloc;
        char m_byHFSMSize;
        char m_byStateSize;
        char m_byMessageSize;
        void (WINAPIV *m_pFun)(Us_HFSM *, unsigned int, unsigned int, void *);
        int (WINAPIV *m_pInitFun)(UsStateTBL *, Us_HFSM *);
        void (WINAPIV *m_pExternFun)(Us_HFSM *, unsigned int, void *, int);
    public:
        int Add(char byHFSMIndex, char byCurrState, char byEvent_IN, char byNextState_OUT, void (WINAPIV* pEvnetFun)(struct Us_HFSM*, unsigned int, void*))
        {
            using org_ptr = int (WINAPIV*)(struct UsStateTBL*, char, char, char, char, void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*));
            return (org_ptr(0x140161ea0L))(this, byHFSMIndex, byCurrState, byEvent_IN, byNextState_OUT, pEvnetFun);
        };
        void Alloc(char byHFSMSize, char byStateSize, char byMessageSize)
        {
            using org_ptr = void (WINAPIV*)(struct UsStateTBL*, char, char, char);
            (org_ptr(0x140161bc0L))(this, byHFSMSize, byStateSize, byMessageSize);
        };
        void CleanUp()
        {
            using org_ptr = void (WINAPIV*)(struct UsStateTBL*);
            (org_ptr(0x140162040L))(this);
        };
        char GetHSFMSize()
        {
            using org_ptr = char (WINAPIV*)(struct UsStateTBL*);
            return (org_ptr(0x140163670L))(this);
        };
        struct _TBLData* GetTransState(char byState, char byMessage)
        {
            using org_ptr = struct _TBLData* (WINAPIV*)(struct UsStateTBL*, char, char);
            return (org_ptr(0x140162230L))(this, byState, byMessage);
        };
        static void OnMsgProc(struct Us_HFSM* pHFS, unsigned int dwFSMIndex, unsigned int dwMSG, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, unsigned int, void*);
            (org_ptr(0x140162de0L))(pHFS, dwFSMIndex, dwMSG, lpParam);
        };
        void SetCallFunction(void (WINAPIV* pFun)(struct Us_HFSM*, unsigned int, unsigned int, void*))
        {
            using org_ptr = void (WINAPIV*)(struct UsStateTBL*, void (WINAPIV*)(struct Us_HFSM*, unsigned int, unsigned int, void*));
            (org_ptr(0x140161b30L))(this, pFun);
        };
        void SetExternCallFunction(void (WINAPIV* pExternFun)(struct Us_HFSM*, unsigned int, void*, int))
        {
            using org_ptr = void (WINAPIV*)(struct UsStateTBL*, void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*, int));
            (org_ptr(0x140161b90L))(this, pExternFun);
        };
        int SetHFSM(struct Us_HFSM* pHFSM, void* pObject)
        {
            using org_ptr = int (WINAPIV*)(struct UsStateTBL*, struct Us_HFSM*, void*);
            return (org_ptr(0x140162180L))(this, pHFSM, pObject);
        };
        void SetHFSMNode(int nNodeIndex, unsigned int dwStartState, unsigned int dwLoopTime, int ParentData, int bUsed)
        {
            using org_ptr = void (WINAPIV*)(struct UsStateTBL*, int, unsigned int, unsigned int, int, int);
            (org_ptr(0x140161fb0L))(this, nNodeIndex, dwStartState, dwLoopTime, ParentData, bUsed);
        };
        void SetInitFunction(int (WINAPIV* pInitFun)(struct UsStateTBL*, struct Us_HFSM*))
        {
            using org_ptr = void (WINAPIV*)(struct UsStateTBL*, int (WINAPIV*)(struct UsStateTBL*, struct Us_HFSM*));
            (org_ptr(0x140161b60L))(this, pInitFun);
        };
        UsStateTBL()
        {
            using org_ptr = void (WINAPIV*)(struct UsStateTBL*);
            (org_ptr(0x1401619f0L))(this);
        };
        void ctor_UsStateTBL()
        {
            using org_ptr = void (WINAPIV*)(struct UsStateTBL*);
            (org_ptr(0x1401619f0L))(this);
        };
        ~UsStateTBL()
        {
            using org_ptr = void (WINAPIV*)(struct UsStateTBL*);
            (org_ptr(0x140161aa0L))(this);
        };
        void dtor_UsStateTBL()
        {
            using org_ptr = void (WINAPIV*)(struct UsStateTBL*);
            (org_ptr(0x140161aa0L))(this);
        };
    };
END_ATF_NAMESPACE
