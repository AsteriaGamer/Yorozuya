// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "MyTimer_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::MyTimerGetTime2_ptr MyTimerGetTime2_next(nullptr);
        info::MyTimerGetTime2_clbk MyTimerGetTime2_user(nullptr);
        
        info::MyTimer__TIMEctor_TIME2_ptr MyTimer__TIMEctor_TIME2_next(nullptr);
        info::MyTimer__TIMEctor_TIME2_clbk MyTimer__TIMEctor_TIME2_user(nullptr);
        
        struct MyTimer::TIME* MyTimerGetTime2_wrapper()
        {
           return MyTimerGetTime2_user(MyTimerGetTime2_next);
        };
        
        void MyTimer__TIMEctor_TIME2_wrapper(struct MyTimer::TIME* _this)
        {
           MyTimer__TIMEctor_TIME2_user(_this, MyTimer__TIMEctor_TIME2_next);
        };
        
        hook_record MyTimer_functions[] = {
        {   (LPVOID)0x1402f2500L,
            (LPVOID *)&MyTimerGetTime2_user,
            (LPVOID *)&MyTimerGetTime2_next,
            (LPVOID)cast_pointer_function(MyTimerGetTime2_wrapper),
            (LPVOID)cast_pointer_function((struct MyTimer::TIME*(*)())&MyTimer::GetTime) },
        
        {   (LPVOID)0x140318020L,
            (LPVOID *)&MyTimer__TIMEctor_TIME2_user,
            (LPVOID *)&MyTimer__TIMEctor_TIME2_next,
            (LPVOID)cast_pointer_function(MyTimer__TIMEctor_TIME2_wrapper),
            (LPVOID)cast_pointer_function((void(MyTimer::TIME::*)())&MyTimer::TIME::ctor_TIME) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
