// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CGuild.hpp"
#include "CPlayer.hpp"
#include "CRFWorldDatabase.hpp"
#include "CWeeklyGuildRankInfo.hpp"
#include "_pvppoint_guild_rank_info.hpp"
#include "_weeklyguildrank_owner_info.hpp"


START_ATF_NAMESPACE
    struct CWeeklyGuildRankManager
    {
        __int64 m_tNextUpdateTime;
        __int64 m_tNextSetOwnerTime;
        CWeeklyGuildRankInfo m_kInfo;
    public:
        CWeeklyGuildRankManager()
        {
            using org_ptr = void (WINAPIV*)(struct CWeeklyGuildRankManager*);
            (org_ptr(0x1402cc280L))(this);
        };
        void ctor_CWeeklyGuildRankManager()
        {
            using org_ptr = void (WINAPIV*)(struct CWeeklyGuildRankManager*);
            (org_ptr(0x1402cc280L))(this);
        };
        void CompleteLoadeTodayRank(char byRet, char* pLoadData)
        {
            using org_ptr = void (WINAPIV*)(struct CWeeklyGuildRankManager*, char, char*);
            (org_ptr(0x1402cca60L))(this, byRet, pLoadData);
        };
        void CompleteUpdateClear(char byRet)
        {
            using org_ptr = void (WINAPIV*)(struct CWeeklyGuildRankManager*, char);
            (org_ptr(0x1402ccd30L))(this, byRet);
        };
        void CompleteUpdateWeeklyOwner(char byRet, char* pLoadData)
        {
            using org_ptr = void (WINAPIV*)(struct CWeeklyGuildRankManager*, char, char*);
            (org_ptr(0x1402ccc10L))(this, byRet, pLoadData);
        };
        bool CreatePvpPointGuildRank(char* szDate)
        {
            using org_ptr = bool (WINAPIV*)(struct CWeeklyGuildRankManager*, char*);
            return (org_ptr(0x1402ce3a0L))(this, szDate);
        };
        static void Destroy()
        {
            using org_ptr = void (WINAPIV*)();
            (org_ptr(0x1402cc3a0L))();
        };
        struct CGuild* GetPrevOwnerGuild(char byRace, char byNth)
        {
            using org_ptr = struct CGuild* (WINAPIV*)(struct CWeeklyGuildRankManager*, char, char);
            return (org_ptr(0x1402d78d0L))(this, byRace, byNth);
        };
        void GetPrevRankDate(char* szDate, int iBuffSize)
        {
            using org_ptr = void (WINAPIV*)(struct CWeeklyGuildRankManager*, char*, int);
            (org_ptr(0x1402cd690L))(this, szDate, iBuffSize);
        };
        void GetTodayRankDate(char* szDate, int iBuffSize)
        {
            using org_ptr = void (WINAPIV*)(struct CWeeklyGuildRankManager*, char*, int);
            (org_ptr(0x1402cd920L))(this, szDate, iBuffSize);
        };
        bool Init()
        {
            using org_ptr = bool (WINAPIV*)(struct CWeeklyGuildRankManager*);
            return (org_ptr(0x1402cc420L))(this);
        };
        bool InitNextSetOwnerDate()
        {
            using org_ptr = bool (WINAPIV*)(struct CWeeklyGuildRankManager*);
            return (org_ptr(0x1402cd250L))(this);
        };
        bool InsertDefaultWeeklyPvpPointSumRecord()
        {
            using org_ptr = bool (WINAPIV*)(struct CWeeklyGuildRankManager*);
            return (org_ptr(0x1402ce0e0L))(this);
        };
        bool InsertSettlementOwner(struct CRFWorldDatabase* pkWorldDB, char* pData)
        {
            using org_ptr = bool (WINAPIV*)(struct CWeeklyGuildRankManager*, struct CRFWorldDatabase*, char*);
            return (org_ptr(0x1402cce80L))(this, pkWorldDB, pData);
        };
        static struct CWeeklyGuildRankManager* Instance()
        {
            using org_ptr = struct CWeeklyGuildRankManager* (WINAPIV*)();
            return (org_ptr(0x1402cc2e0L))();
        };
        bool IsEmptyRank(struct _pvppoint_guild_rank_info* pkInfo)
        {
            using org_ptr = bool (WINAPIV*)(struct CWeeklyGuildRankManager*, struct _pvppoint_guild_rank_info*);
            return (org_ptr(0x1402cdb80L))(this, pkInfo);
        };
        bool Load()
        {
            using org_ptr = bool (WINAPIV*)(struct CWeeklyGuildRankManager*);
            return (org_ptr(0x1402cc490L))(this);
        };
        int64_t LoadINILastRankTime()
        {
            using org_ptr = int64_t (WINAPIV*)(struct CWeeklyGuildRankManager*);
            return (org_ptr(0x1402cd0f0L))(this);
        };
        bool LoadPrevOwner()
        {
            using org_ptr = bool (WINAPIV*)(struct CWeeklyGuildRankManager*);
            return (org_ptr(0x1402cd4f0L))(this);
        };
        bool LoadPrevTable(char* szDate, struct _pvppoint_guild_rank_info* kInfo)
        {
            using org_ptr = bool (WINAPIV*)(struct CWeeklyGuildRankManager*, char*, struct _pvppoint_guild_rank_info*);
            return (org_ptr(0x1402ce140L))(this, szDate, kInfo);
        };
        void Loop()
        {
            using org_ptr = void (WINAPIV*)(struct CWeeklyGuildRankManager*);
            (org_ptr(0x1402cc700L))(this);
        };
        void OrderRank(struct _pvppoint_guild_rank_info* pkInfo)
        {
            using org_ptr = void (WINAPIV*)(struct CWeeklyGuildRankManager*, struct _pvppoint_guild_rank_info*);
            (org_ptr(0x1402cdc00L))(this, pkInfo);
        };
        bool PushDQSIncWeeklyPvpPointSum(unsigned int dwGuildSerial, long double dPoint)
        {
            using org_ptr = bool (WINAPIV*)(struct CWeeklyGuildRankManager*, unsigned int, long double);
            return (org_ptr(0x1402ccda0L))(this, dwGuildSerial, dPoint);
        };
        void PushSettlementOwnerDBLog(char* pInfo)
        {
            using org_ptr = void (WINAPIV*)(struct CWeeklyGuildRankManager*, char*);
            (org_ptr(0x1402cde90L))(this, pInfo);
        };
        bool SaveINI()
        {
            using org_ptr = bool (WINAPIV*)(struct CWeeklyGuildRankManager*);
            return (org_ptr(0x1402cd9d0L))(this);
        };
        bool SelectOwnerGuild(char* szDate, struct _weeklyguildrank_owner_info* pkInfo)
        {
            using org_ptr = bool (WINAPIV*)(struct CWeeklyGuildRankManager*, char*, struct _weeklyguildrank_owner_info*);
            return (org_ptr(0x1402ce690L))(this, szDate, pkInfo);
        };
        void Send(unsigned int dwVer, char byTabRace, struct CPlayer* pkPlayer)
        {
            using org_ptr = void (WINAPIV*)(struct CWeeklyGuildRankManager*, unsigned int, char, struct CPlayer*);
            (org_ptr(0x1402cd030L))(this, dwVer, byTabRace, pkPlayer);
        };
        void SetNextRankDate()
        {
            using org_ptr = void (WINAPIV*)(struct CWeeklyGuildRankManager*);
            (org_ptr(0x1402cd3f0L))(this);
        };
        void SetSettlementAreaManageOwnerGuild()
        {
            using org_ptr = void (WINAPIV*)(struct CWeeklyGuildRankManager*);
            (org_ptr(0x1402cdd60L))(this);
        };
        bool UpdateOwnerGuild(char* szDate)
        {
            using org_ptr = bool (WINAPIV*)(struct CWeeklyGuildRankManager*, char*);
            return (org_ptr(0x1402ce600L))(this, szDate);
        };
        bool UpdateRankDBRecord(char* szDate, struct _pvppoint_guild_rank_info* pkInfo)
        {
            using org_ptr = bool (WINAPIV*)(struct CWeeklyGuildRankManager*, char*, struct _pvppoint_guild_rank_info*);
            return (org_ptr(0x1402ce4e0L))(this, szDate, pkInfo);
        };
        bool UpdateTodayRank(char* pLoadData)
        {
            using org_ptr = bool (WINAPIV*)(struct CWeeklyGuildRankManager*, char*);
            return (org_ptr(0x1402cc7f0L))(this, pLoadData);
        };
        int UpdateTodayTable(char* szDate, struct _pvppoint_guild_rank_info* pkInfo)
        {
            using org_ptr = int (WINAPIV*)(struct CWeeklyGuildRankManager*, char*, struct _pvppoint_guild_rank_info*);
            return (org_ptr(0x1402ce250L))(this, szDate, pkInfo);
        };
        bool UpdateWeeklyOwner(char* pLoadData)
        {
            using org_ptr = bool (WINAPIV*)(struct CWeeklyGuildRankManager*, char*);
            return (org_ptr(0x1402cc950L))(this, pLoadData);
        };
        ~CWeeklyGuildRankManager()
        {
            using org_ptr = void (WINAPIV*)(struct CWeeklyGuildRankManager*);
            (org_ptr(0x1402cfac0L))(this);
        };
        void dtor_CWeeklyGuildRankManager()
        {
            using org_ptr = void (WINAPIV*)(struct CWeeklyGuildRankManager*);
            (org_ptr(0x1402cfac0L))(this);
        };
    };
END_ATF_NAMESPACE
