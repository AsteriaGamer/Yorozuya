// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_worlddb_sf_delay_info_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::_worlddb_sf_delay_infoctor__worlddb_sf_delay_info2_ptr _worlddb_sf_delay_infoctor__worlddb_sf_delay_info2_next(nullptr);
        info::_worlddb_sf_delay_infoctor__worlddb_sf_delay_info2_clbk _worlddb_sf_delay_infoctor__worlddb_sf_delay_info2_user(nullptr);
        
        info::_worlddb_sf_delay_info___eff_listctor__eff_list2_ptr _worlddb_sf_delay_info___eff_listctor__eff_list2_next(nullptr);
        info::_worlddb_sf_delay_info___eff_listctor__eff_list2_clbk _worlddb_sf_delay_info___eff_listctor__eff_list2_user(nullptr);
        
        info::_worlddb_sf_delay_info___mas_listctor__mas_list2_ptr _worlddb_sf_delay_info___mas_listctor__mas_list2_next(nullptr);
        info::_worlddb_sf_delay_info___mas_listctor__mas_list2_clbk _worlddb_sf_delay_info___mas_listctor__mas_list2_user(nullptr);
        
        void _worlddb_sf_delay_infoctor__worlddb_sf_delay_info2_wrapper(struct _worlddb_sf_delay_info* _this)
        {
           _worlddb_sf_delay_infoctor__worlddb_sf_delay_info2_user(_this, _worlddb_sf_delay_infoctor__worlddb_sf_delay_info2_next);
        };
        
        void _worlddb_sf_delay_info___eff_listctor__eff_list2_wrapper(struct _worlddb_sf_delay_info::_eff_list* _this)
        {
           _worlddb_sf_delay_info___eff_listctor__eff_list2_user(_this, _worlddb_sf_delay_info___eff_listctor__eff_list2_next);
        };
        
        void _worlddb_sf_delay_info___mas_listctor__mas_list2_wrapper(struct _worlddb_sf_delay_info::_mas_list* _this)
        {
           _worlddb_sf_delay_info___mas_listctor__mas_list2_user(_this, _worlddb_sf_delay_info___mas_listctor__mas_list2_next);
        };
        
        hook_record _worlddb_sf_delay_info_functions[] = {
        {   (LPVOID)0x140077e60L,
            (LPVOID *)&_worlddb_sf_delay_infoctor__worlddb_sf_delay_info2_user,
            (LPVOID *)&_worlddb_sf_delay_infoctor__worlddb_sf_delay_info2_next,
            (LPVOID)cast_pointer_function(_worlddb_sf_delay_infoctor__worlddb_sf_delay_info2_wrapper),
            (LPVOID)cast_pointer_function((void(_worlddb_sf_delay_info::*)())&_worlddb_sf_delay_info::ctor__worlddb_sf_delay_info) },
        
        {   (LPVOID)0x140077ef0L,
            (LPVOID *)&_worlddb_sf_delay_info___eff_listctor__eff_list2_user,
            (LPVOID *)&_worlddb_sf_delay_info___eff_listctor__eff_list2_next,
            (LPVOID)cast_pointer_function(_worlddb_sf_delay_info___eff_listctor__eff_list2_wrapper),
            (LPVOID)cast_pointer_function((void(_worlddb_sf_delay_info::_eff_list::*)())&_worlddb_sf_delay_info::_eff_list::ctor__eff_list) },
        
        {   (LPVOID)0x140077f30L,
            (LPVOID *)&_worlddb_sf_delay_info___mas_listctor__mas_list2_user,
            (LPVOID *)&_worlddb_sf_delay_info___mas_listctor__mas_list2_next,
            (LPVOID)cast_pointer_function(_worlddb_sf_delay_info___mas_listctor__mas_list2_wrapper),
            (LPVOID)cast_pointer_function((void(_worlddb_sf_delay_info::_mas_list::*)())&_worlddb_sf_delay_info::_mas_list::ctor__mas_list) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
