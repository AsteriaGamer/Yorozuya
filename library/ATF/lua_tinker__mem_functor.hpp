// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  mem_functor<CMonster,void,void,void,void,void>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  mem_functor<CLuaEventMgr,char const *,void,void,void,void>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  mem_functor<CLuaEventNode,char const *,unsigned long,void,void,void>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  mem_functor<CLuaEventMgr,void,void,void,void,void>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  mem_functor<CLuaSignalReActor,unsigned char,unsigned char,char const *,char const *,void>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  mem_functor<CLuaEventNode,CLuaScript *,void,void,void,void>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  mem_functor<CLuaEventNode,char const *,void,void,void,void>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  mem_functor<CLuaScript,void,void,void,void,void>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  mem_functor<CLuaEventMgr,CLuaEventNode *,void,void,void,void>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
