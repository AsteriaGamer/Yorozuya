// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CMonster.hpp"
#include "CMonsterSkill.hpp"


START_ATF_NAMESPACE
    struct CMonsterSkillPool
    {
        CMonster *m_pMyMon;
        int m_nSize;
        CMonsterSkill m_MonSkill[16];
    public:
        CMonsterSkillPool()
        {
            using org_ptr = void (WINAPIV*)(struct CMonsterSkillPool*);
            (org_ptr(0x14014b4b0L))(this);
        };
        void ctor_CMonsterSkillPool()
        {
            using org_ptr = void (WINAPIV*)(struct CMonsterSkillPool*);
            (org_ptr(0x14014b4b0L))(this);
        };
        struct CMonsterSkill* GetMonSkill(int nIndex)
        {
            using org_ptr = struct CMonsterSkill* (WINAPIV*)(struct CMonsterSkillPool*, int);
            return (org_ptr(0x140156b00L))(this, nIndex);
        };
        struct CMonsterSkill* GetMonSkillKind(int nKind)
        {
            using org_ptr = struct CMonsterSkill* (WINAPIV*)(struct CMonsterSkillPool*, int);
            return (org_ptr(0x140156b50L))(this, nKind);
        };
        void Init()
        {
            using org_ptr = void (WINAPIV*)(struct CMonsterSkillPool*);
            (org_ptr(0x1401569b0L))(this);
        };
        int InsertSkill(struct CMonsterSkill* skill)
        {
            using org_ptr = int (WINAPIV*)(struct CMonsterSkillPool*, struct CMonsterSkill*);
            return (org_ptr(0x140156a30L))(this, skill);
        };
        int Set(struct CMonster* pMyMonster)
        {
            using org_ptr = int (WINAPIV*)(struct CMonsterSkillPool*, struct CMonster*);
            return (org_ptr(0x140156bf0L))(this, pMyMonster);
        };
        ~CMonsterSkillPool()
        {
            using org_ptr = void (WINAPIV*)(struct CMonsterSkillPool*);
            (org_ptr(0x14014b600L))(this);
        };
        void dtor_CMonsterSkillPool()
        {
            using org_ptr = void (WINAPIV*)(struct CMonsterSkillPool*);
            (org_ptr(0x14014b600L))(this);
        };
    };
END_ATF_NAMESPACE
