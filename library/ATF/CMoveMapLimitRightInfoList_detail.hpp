// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CMoveMapLimitRightInfoList_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::CMoveMapLimitRightInfoListctor_CMoveMapLimitRightInfoList2_ptr CMoveMapLimitRightInfoListctor_CMoveMapLimitRightInfoList2_next(nullptr);
        static info::CMoveMapLimitRightInfoListctor_CMoveMapLimitRightInfoList2_clbk CMoveMapLimitRightInfoListctor_CMoveMapLimitRightInfoList2_user(nullptr);
        static info::CMoveMapLimitRightInfoListCreateComplete4_ptr CMoveMapLimitRightInfoListCreateComplete4_next(nullptr);
        static info::CMoveMapLimitRightInfoListCreateComplete4_clbk CMoveMapLimitRightInfoListCreateComplete4_user(nullptr);
        static info::CMoveMapLimitRightInfoListGet6_ptr CMoveMapLimitRightInfoListGet6_next(nullptr);
        static info::CMoveMapLimitRightInfoListGet6_clbk CMoveMapLimitRightInfoListGet6_user(nullptr);
        static info::CMoveMapLimitRightInfoListInit8_ptr CMoveMapLimitRightInfoListInit8_next(nullptr);
        static info::CMoveMapLimitRightInfoListInit8_clbk CMoveMapLimitRightInfoListInit8_user(nullptr);
        static info::CMoveMapLimitRightInfoListLoad10_ptr CMoveMapLimitRightInfoListLoad10_next(nullptr);
        static info::CMoveMapLimitRightInfoListLoad10_clbk CMoveMapLimitRightInfoListLoad10_user(nullptr);
        static info::CMoveMapLimitRightInfoListLogIn12_ptr CMoveMapLimitRightInfoListLogIn12_next(nullptr);
        static info::CMoveMapLimitRightInfoListLogIn12_clbk CMoveMapLimitRightInfoListLogIn12_user(nullptr);
        static info::CMoveMapLimitRightInfoListLogOut14_ptr CMoveMapLimitRightInfoListLogOut14_next(nullptr);
        static info::CMoveMapLimitRightInfoListLogOut14_clbk CMoveMapLimitRightInfoListLogOut14_user(nullptr);
        static info::CMoveMapLimitRightInfoListdtor_CMoveMapLimitRightInfoList16_ptr CMoveMapLimitRightInfoListdtor_CMoveMapLimitRightInfoList16_next(nullptr);
        static info::CMoveMapLimitRightInfoListdtor_CMoveMapLimitRightInfoList16_clbk CMoveMapLimitRightInfoListdtor_CMoveMapLimitRightInfoList16_user(nullptr);
        
        static void CMoveMapLimitRightInfoListctor_CMoveMapLimitRightInfoList2_wrapper(struct CMoveMapLimitRightInfoList* _this)
        {
           CMoveMapLimitRightInfoListctor_CMoveMapLimitRightInfoList2_user(_this, CMoveMapLimitRightInfoListctor_CMoveMapLimitRightInfoList2_next);
        };
        static void CMoveMapLimitRightInfoListCreateComplete4_wrapper(struct CMoveMapLimitRightInfoList* _this, struct CPlayer* pkPlayer)
        {
           CMoveMapLimitRightInfoListCreateComplete4_user(_this, pkPlayer, CMoveMapLimitRightInfoListCreateComplete4_next);
        };
        static struct CMoveMapLimitRightInfo* CMoveMapLimitRightInfoListGet6_wrapper(struct CMoveMapLimitRightInfoList* _this, int iInx)
        {
           return CMoveMapLimitRightInfoListGet6_user(_this, iInx, CMoveMapLimitRightInfoListGet6_next);
        };
        static bool CMoveMapLimitRightInfoListInit8_wrapper(struct CMoveMapLimitRightInfoList* _this, struct std::vector<int,std::allocator<int> >* vecRightTypeList)
        {
           return CMoveMapLimitRightInfoListInit8_user(_this, vecRightTypeList, CMoveMapLimitRightInfoListInit8_next);
        };
        static void CMoveMapLimitRightInfoListLoad10_wrapper(struct CMoveMapLimitRightInfoList* _this, struct CPlayer* pkPlayer)
        {
           CMoveMapLimitRightInfoListLoad10_user(_this, pkPlayer, CMoveMapLimitRightInfoListLoad10_next);
        };
        static void CMoveMapLimitRightInfoListLogIn12_wrapper(struct CMoveMapLimitRightInfoList* _this, struct CPlayer* pkPlayer)
        {
           CMoveMapLimitRightInfoListLogIn12_user(_this, pkPlayer, CMoveMapLimitRightInfoListLogIn12_next);
        };
        static void CMoveMapLimitRightInfoListLogOut14_wrapper(struct CMoveMapLimitRightInfoList* _this, struct CPlayer* pkPlayer)
        {
           CMoveMapLimitRightInfoListLogOut14_user(_this, pkPlayer, CMoveMapLimitRightInfoListLogOut14_next);
        };
        static void CMoveMapLimitRightInfoListdtor_CMoveMapLimitRightInfoList16_wrapper(struct CMoveMapLimitRightInfoList* _this)
        {
           CMoveMapLimitRightInfoListdtor_CMoveMapLimitRightInfoList16_user(_this, CMoveMapLimitRightInfoListdtor_CMoveMapLimitRightInfoList16_next);
        };
        
        static hook_record CMoveMapLimitRightInfoList_functions[] = {
        {   (LPVOID)0x1403a1e10L,
            (LPVOID *)&CMoveMapLimitRightInfoListctor_CMoveMapLimitRightInfoList2_user,
            (LPVOID *)&CMoveMapLimitRightInfoListctor_CMoveMapLimitRightInfoList2_next,
            (LPVOID)cast_pointer_function(CMoveMapLimitRightInfoListctor_CMoveMapLimitRightInfoList2_wrapper),
            (LPVOID)cast_pointer_function((void(CMoveMapLimitRightInfoList::*)())&CMoveMapLimitRightInfoList::ctor_CMoveMapLimitRightInfoList) },
        {   (LPVOID)0x1403add30L,
            (LPVOID *)&CMoveMapLimitRightInfoListCreateComplete4_user,
            (LPVOID *)&CMoveMapLimitRightInfoListCreateComplete4_next,
            (LPVOID)cast_pointer_function(CMoveMapLimitRightInfoListCreateComplete4_wrapper),
            (LPVOID)cast_pointer_function((void(CMoveMapLimitRightInfoList::*)(struct CPlayer*))&CMoveMapLimitRightInfoList::CreateComplete) },
        {   (LPVOID)0x1403a1fe0L,
            (LPVOID *)&CMoveMapLimitRightInfoListGet6_user,
            (LPVOID *)&CMoveMapLimitRightInfoListGet6_next,
            (LPVOID)cast_pointer_function(CMoveMapLimitRightInfoListGet6_wrapper),
            (LPVOID)cast_pointer_function((struct CMoveMapLimitRightInfo*(CMoveMapLimitRightInfoList::*)(int))&CMoveMapLimitRightInfoList::Get) },
        {   (LPVOID)0x1403ad800L,
            (LPVOID *)&CMoveMapLimitRightInfoListInit8_user,
            (LPVOID *)&CMoveMapLimitRightInfoListInit8_next,
            (LPVOID)cast_pointer_function(CMoveMapLimitRightInfoListInit8_wrapper),
            (LPVOID)cast_pointer_function((bool(CMoveMapLimitRightInfoList::*)(struct std::vector<int,std::allocator<int> >*))&CMoveMapLimitRightInfoList::Init) },
        {   (LPVOID)0x1403adc10L,
            (LPVOID *)&CMoveMapLimitRightInfoListLoad10_user,
            (LPVOID *)&CMoveMapLimitRightInfoListLoad10_next,
            (LPVOID)cast_pointer_function(CMoveMapLimitRightInfoListLoad10_wrapper),
            (LPVOID)cast_pointer_function((void(CMoveMapLimitRightInfoList::*)(struct CPlayer*))&CMoveMapLimitRightInfoList::Load) },
        {   (LPVOID)0x1403adca0L,
            (LPVOID *)&CMoveMapLimitRightInfoListLogIn12_user,
            (LPVOID *)&CMoveMapLimitRightInfoListLogIn12_next,
            (LPVOID)cast_pointer_function(CMoveMapLimitRightInfoListLogIn12_wrapper),
            (LPVOID)cast_pointer_function((void(CMoveMapLimitRightInfoList::*)(struct CPlayer*))&CMoveMapLimitRightInfoList::LogIn) },
        {   (LPVOID)0x1403addc0L,
            (LPVOID *)&CMoveMapLimitRightInfoListLogOut14_user,
            (LPVOID *)&CMoveMapLimitRightInfoListLogOut14_next,
            (LPVOID)cast_pointer_function(CMoveMapLimitRightInfoListLogOut14_wrapper),
            (LPVOID)cast_pointer_function((void(CMoveMapLimitRightInfoList::*)(struct CPlayer*))&CMoveMapLimitRightInfoList::LogOut) },
        {   (LPVOID)0x1403a1e60L,
            (LPVOID *)&CMoveMapLimitRightInfoListdtor_CMoveMapLimitRightInfoList16_user,
            (LPVOID *)&CMoveMapLimitRightInfoListdtor_CMoveMapLimitRightInfoList16_next,
            (LPVOID)cast_pointer_function(CMoveMapLimitRightInfoListdtor_CMoveMapLimitRightInfoList16_wrapper),
            (LPVOID)cast_pointer_function((void(CMoveMapLimitRightInfoList::*)())&CMoveMapLimitRightInfoList::dtor_CMoveMapLimitRightInfoList) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
