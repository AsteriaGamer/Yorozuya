// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "Task_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::TaskGetRetCode2_ptr TaskGetRetCode2_next(nullptr);
        info::TaskGetRetCode2_clbk TaskGetRetCode2_user(nullptr);
        info::TaskGetTaskBuf4_ptr TaskGetTaskBuf4_next(nullptr);
        info::TaskGetTaskBuf4_clbk TaskGetTaskBuf4_user(nullptr);
        info::TaskGetTaskCode6_ptr TaskGetTaskCode6_next(nullptr);
        info::TaskGetTaskCode6_clbk TaskGetTaskCode6_user(nullptr);
        info::TaskInitialize8_ptr TaskInitialize8_next(nullptr);
        info::TaskInitialize8_clbk TaskInitialize8_user(nullptr);
        info::TaskSetRetCode10_ptr TaskSetRetCode10_next(nullptr);
        info::TaskSetRetCode10_clbk TaskSetRetCode10_user(nullptr);
        info::TaskSetTask12_ptr TaskSetTask12_next(nullptr);
        info::TaskSetTask12_clbk TaskSetTask12_user(nullptr);
        info::Taskctor_Task14_ptr Taskctor_Task14_next(nullptr);
        info::Taskctor_Task14_clbk Taskctor_Task14_user(nullptr);
        info::Taskdtor_Task18_ptr Taskdtor_Task18_next(nullptr);
        info::Taskdtor_Task18_clbk Taskdtor_Task18_user(nullptr);
        
        int TaskGetRetCode2_wrapper(struct Task* _this)
        {
           return TaskGetRetCode2_user(_this, TaskGetRetCode2_next);
        };
        char* TaskGetTaskBuf4_wrapper(struct Task* _this)
        {
           return TaskGetTaskBuf4_user(_this, TaskGetTaskBuf4_next);
        };
        int TaskGetTaskCode6_wrapper(struct Task* _this)
        {
           return TaskGetTaskCode6_user(_this, TaskGetTaskCode6_next);
        };
        bool TaskInitialize8_wrapper(struct Task* _this, uint64_t nMaxBufSize)
        {
           return TaskInitialize8_user(_this, nMaxBufSize, TaskInitialize8_next);
        };
        void TaskSetRetCode10_wrapper(struct Task* _this, int nCode)
        {
           TaskSetRetCode10_user(_this, nCode, TaskSetRetCode10_next);
        };
        void TaskSetTask12_wrapper(struct Task* _this, int nTaskCode, char* p, uint64_t size)
        {
           TaskSetTask12_user(_this, nTaskCode, p, size, TaskSetTask12_next);
        };
        void Taskctor_Task14_wrapper(struct Task* _this)
        {
           Taskctor_Task14_user(_this, Taskctor_Task14_next);
        };
        void Taskdtor_Task18_wrapper(struct Task* _this)
        {
           Taskdtor_Task18_user(_this, Taskdtor_Task18_next);
        };
        
        hook_record Task_functions[] = {
        {   (LPVOID)0x1402f2720L,
            (LPVOID *)&TaskGetRetCode2_user,
            (LPVOID *)&TaskGetRetCode2_next,
            (LPVOID)cast_pointer_function(TaskGetRetCode2_wrapper),
            (LPVOID)cast_pointer_function((int(Task::*)())&Task::GetRetCode) },
        {   (LPVOID)0x1402f2700L,
            (LPVOID *)&TaskGetTaskBuf4_user,
            (LPVOID *)&TaskGetTaskBuf4_next,
            (LPVOID)cast_pointer_function(TaskGetTaskBuf4_wrapper),
            (LPVOID)cast_pointer_function((char*(Task::*)())&Task::GetTaskBuf) },
        {   (LPVOID)0x1402f2510L,
            (LPVOID *)&TaskGetTaskCode6_user,
            (LPVOID *)&TaskGetTaskCode6_next,
            (LPVOID)cast_pointer_function(TaskGetTaskCode6_wrapper),
            (LPVOID)cast_pointer_function((int(Task::*)())&Task::GetTaskCode) },
        {   (LPVOID)0x1403180a0L,
            (LPVOID *)&TaskInitialize8_user,
            (LPVOID *)&TaskInitialize8_next,
            (LPVOID)cast_pointer_function(TaskInitialize8_wrapper),
            (LPVOID)cast_pointer_function((bool(Task::*)(uint64_t))&Task::Initialize) },
        {   (LPVOID)0x1402f2dd0L,
            (LPVOID *)&TaskSetRetCode10_user,
            (LPVOID *)&TaskSetRetCode10_next,
            (LPVOID)cast_pointer_function(TaskSetRetCode10_wrapper),
            (LPVOID)cast_pointer_function((void(Task::*)(int))&Task::SetRetCode) },
        {   (LPVOID)0x1402f23d0L,
            (LPVOID *)&TaskSetTask12_user,
            (LPVOID *)&TaskSetTask12_next,
            (LPVOID)cast_pointer_function(TaskSetTask12_wrapper),
            (LPVOID)cast_pointer_function((void(Task::*)(int, char*, uint64_t))&Task::SetTask) },
        {   (LPVOID)0x140317f90L,
            (LPVOID *)&Taskctor_Task14_user,
            (LPVOID *)&Taskctor_Task14_next,
            (LPVOID)cast_pointer_function(Taskctor_Task14_wrapper),
            (LPVOID)cast_pointer_function((void(Task::*)())&Task::ctor_Task) },
        {   (LPVOID)0x140318090L,
            (LPVOID *)&Taskdtor_Task18_user,
            (LPVOID *)&Taskdtor_Task18_next,
            (LPVOID)cast_pointer_function(Taskdtor_Task18_wrapper),
            (LPVOID)cast_pointer_function((void(Task::*)())&Task::dtor_Task) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
