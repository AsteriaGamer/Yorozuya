// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CMyTimer.hpp"
#include "CRecordData.hpp"
#include "_WorldSchedule_fld.hpp"


START_ATF_NAMESPACE
    struct CWorldSchedule
    {
        bool m_bOper;
        CRecordData m_tblSch;
        int m_nMaxSchNum;
        int m_nSchCursor;
        int m_nCurHour;
        int m_nCurMin;
        int m_nCurMilSec;
        unsigned int m_dwLastCheckTime;
        CMyTimer m_tmrCheck;
    public:
        CWorldSchedule()
        {
            using org_ptr = void (WINAPIV*)(struct CWorldSchedule*);
            (org_ptr(0x1403f34f0L))(this);
        };
        void ctor_CWorldSchedule()
        {
            using org_ptr = void (WINAPIV*)(struct CWorldSchedule*);
            (org_ptr(0x1403f34f0L))(this);
        };
        int CalcScheduleCursor(int nHour, int nMin)
        {
            using org_ptr = int (WINAPIV*)(struct CWorldSchedule*, int, int);
            return (org_ptr(0x1403f4180L))(this, nHour, nMin);
        };
        void ChangeSchCursor(struct _WorldSchedule_fld* pFld, int nPassMin)
        {
            using org_ptr = void (WINAPIV*)(struct CWorldSchedule*, struct _WorldSchedule_fld*, int);
            (org_ptr(0x1403f3ee0L))(this, pFld, nPassMin);
        };
        void CheckSch()
        {
            using org_ptr = void (WINAPIV*)(struct CWorldSchedule*);
            (org_ptr(0x1403f3aa0L))(this);
        };
        bool DataCheck()
        {
            using org_ptr = bool (WINAPIV*)(struct CWorldSchedule*);
            return (org_ptr(0x1403f3ff0L))(this);
        };
        bool Init()
        {
            using org_ptr = bool (WINAPIV*)(struct CWorldSchedule*);
            return (org_ptr(0x1403f3590L))(this);
        };
        void Loop()
        {
            using org_ptr = void (WINAPIV*)(struct CWorldSchedule*);
            (org_ptr(0x1403f3a30L))(this);
        };
        void PassOneStep()
        {
            using org_ptr = void (WINAPIV*)(struct CWorldSchedule*);
            (org_ptr(0x1403f3e30L))(this);
        };
        ~CWorldSchedule()
        {
            using org_ptr = void (WINAPIV*)(struct CWorldSchedule*);
            (org_ptr(0x1403f4630L))(this);
        };
        void dtor_CWorldSchedule()
        {
            using org_ptr = void (WINAPIV*)(struct CWorldSchedule*);
            (org_ptr(0x1403f4630L))(this);
        };
    };
END_ATF_NAMESPACE
