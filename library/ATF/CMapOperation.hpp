// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CGameObject.hpp"
#include "CMapData.hpp"
#include "CMapDataTable.hpp"
#include "CMapOperationVtbl.hpp"
#include "CMyTimer.hpp"
#include "_region_data.hpp"
#include "std__vector.hpp"
#include "std__pair.hpp"

START_ATF_NAMESPACE
    struct CMapOperation
    {
        CMapOperationVtbl *vfptr;
        int m_nLoopStartPoint;
        unsigned int m_dwSpeedHackStdTime;
        CMapDataTable m_tblMapData;
        int m_nMapNum;
        int m_nStdMapNum;
        std::vector<std::pair<int,int>> m_vecStandardMapCodeTable;
        CMapData *m_Map;
        int m_nRegionNum;
        _region_data m_RegionData[100];
        bool m_bReSpawnMonster;
        CMyTimer m_tmrObjTerm;
        CMyTimer m_tmrSystem;
        CMyTimer m_tmrRecover;
        unsigned int m_dwLastObjLoopTime;
        CMapData *m_SettlementMapData[3][2];
    public:
        CMapOperation()
        {
            using org_ptr = void (WINAPIV*)(struct CMapOperation*);
            (org_ptr(0x140195e20L))(this);
        };
        void ctor_CMapOperation()
        {
            using org_ptr = void (WINAPIV*)(struct CMapOperation*);
            (org_ptr(0x140195e20L))(this);
        };
        void CheckMapPortalLink()
        {
            using org_ptr = void (WINAPIV*)(struct CMapOperation*);
            (org_ptr(0x140197d40L))(this);
        };
        int GetMap(struct CMapData* pMap)
        {
            using org_ptr = int (WINAPIV*)(struct CMapOperation*, struct CMapData*);
            return (org_ptr(0x1401979b0L))(this, pMap);
        };
        struct CMapData* GetMap(char* szMapCode)
        {
            using org_ptr = struct CMapData* (WINAPIV*)(struct CMapOperation*, char*);
            return (org_ptr(0x140197a30L))(this, szMapCode);
        };
        struct CMapData* GetMap(int nIndex)
        {
            using org_ptr = struct CMapData* (WINAPIV*)(struct CMapOperation*, int);
            return (org_ptr(0x140197970L))(this, nIndex);
        };
        struct CMapData* GetPosStartMap(char byRaceCode, bool bRand, float* pfoutPos)
        {
            using org_ptr = struct CMapData* (WINAPIV*)(struct CMapOperation*, char, bool, float*);
            return (org_ptr(0x140197b90L))(this, byRaceCode, bRand, pfoutPos);
        };
        struct CMapData* GetSettlementMapData(int iRace, int iTh)
        {
            using org_ptr = struct CMapData* (WINAPIV*)(struct CMapOperation*, int, int);
            return (org_ptr(0x1402d7960L))(this, iRace, iTh);
        };
        struct CMapData* GetStartMap(char byRaceCode)
        {
            using org_ptr = struct CMapData* (WINAPIV*)(struct CMapOperation*, char);
            return (org_ptr(0x140197ae0L))(this, byRaceCode);
        };
        bool Init()
        {
            using org_ptr = bool (WINAPIV*)(struct CMapOperation*);
            return (org_ptr(0x140196300L))(this);
        };
        bool IsExistStdMapID(int iMapID)
        {
            using org_ptr = bool (WINAPIV*)(struct CMapOperation*, int);
            return (org_ptr(0x140120ab0L))(this, iMapID);
        };
        bool IsInRegion(char* pszRegionCode, struct CGameObject* pObj)
        {
            using org_ptr = bool (WINAPIV*)(struct CMapOperation*, char*, struct CGameObject*);
            return (org_ptr(0x140197c50L))(this, pszRegionCode, pObj);
        };
        bool LoadMaps()
        {
            using org_ptr = bool (WINAPIV*)(struct CMapOperation*);
            return (org_ptr(0x140196750L))(this);
        };
        bool LoadRegion()
        {
            using org_ptr = bool (WINAPIV*)(struct CMapOperation*);
            return (org_ptr(0x140196c40L))(this);
        };
        void OnLoop()
        {
            using org_ptr = void (WINAPIV*)(struct CMapOperation*);
            (org_ptr(0x140196f30L))(this);
        };
        void RespawnMonster()
        {
            using org_ptr = void (WINAPIV*)(struct CMapOperation*);
            (org_ptr(0x140197190L))(this);
        };
        ~CMapOperation()
        {
            using org_ptr = void (WINAPIV*)(struct CMapOperation*);
            (org_ptr(0x1401960c0L))(this);
        };
        void dtor_CMapOperation()
        {
            using org_ptr = void (WINAPIV*)(struct CMapOperation*);
            (org_ptr(0x1401960c0L))(this);
        };
    };
END_ATF_NAMESPACE
