// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "ATL__CStringT.hpp"
#include "CCharacter.hpp"
#include "CMapData.hpp"
#include "_dummy_position.hpp"


START_ATF_NAMESPACE
    struct  CGravityStoneRegener : CCharacter
    {
        enum GSR_STATE
        {
            GSR_NONE = 0xFFFFFFFF,
            GSR_INIT = 0x0,
            GSR_CREATE = 0x1,
            GSR_REGEN = 0x2,
            GSR_TAKE = 0x3,
            GSR_DESTROY = 0x4,
            GSR_MAX = 0x6,
        };
        GSR_STATE m_eState;
        int m_iPortalInx;
        _dummy_position *m_pkRegenPos;
    public:
        CGravityStoneRegener()
        {
            using org_ptr = void (WINAPIV*)(struct CGravityStoneRegener*);
            (org_ptr(0x14012e4c0L))(this);
        };
        void ctor_CGravityStoneRegener()
        {
            using org_ptr = void (WINAPIV*)(struct CGravityStoneRegener*);
            (org_ptr(0x14012e4c0L))(this);
        };
        void CheatClearRegenState()
        {
            using org_ptr = void (WINAPIV*)(struct CGravityStoneRegener*);
            (org_ptr(0x14012edb0L))(this);
        };
        bool ClearRegen()
        {
            using org_ptr = bool (WINAPIV*)(struct CGravityStoneRegener*);
            return (org_ptr(0x14012ebb0L))(this);
        };
        bool Create(struct CMapData* pkMap)
        {
            using org_ptr = bool (WINAPIV*)(struct CGravityStoneRegener*, struct CMapData*);
            return (org_ptr(0x14012e950L))(this, pkMap);
        };
        void Destroy()
        {
            using org_ptr = void (WINAPIV*)(struct CGravityStoneRegener*);
            (org_ptr(0x14012ea50L))(this);
        };
        int GetPortalInx()
        {
            using org_ptr = int (WINAPIV*)(struct CGravityStoneRegener*);
            return (org_ptr(0x140034ae0L))(this);
        };
        char* GetStateString(struct ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >* strState)
        {
            using org_ptr = char* (WINAPIV*)(struct CGravityStoneRegener*, struct ATL::CStringT<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >*);
            return (org_ptr(0x14012ecf0L))(this, strState);
        };
        bool Init(unsigned int uiMapInx, uint16_t wInx, struct CMapData* pkMap)
        {
            using org_ptr = bool (WINAPIV*)(struct CGravityStoneRegener*, unsigned int, uint16_t, struct CMapData*);
            return (org_ptr(0x14012e590L))(this, uiMapInx, wInx, pkMap);
        };
        bool IsNearPosition(float* pfCurPos)
        {
            using org_ptr = bool (WINAPIV*)(struct CGravityStoneRegener*, float*);
            return (org_ptr(0x14012ee30L))(this, pfCurPos);
        };
        int Regen()
        {
            using org_ptr = int (WINAPIV*)(struct CGravityStoneRegener*);
            return (org_ptr(0x14012eaa0L))(this);
        };
        void SendMsgAlterState()
        {
            using org_ptr = void (WINAPIV*)(struct CGravityStoneRegener*);
            (org_ptr(0x14012ef50L))(this);
        };
        void SendMsg_FixPosition(int n)
        {
            using org_ptr = void (WINAPIV*)(struct CGravityStoneRegener*, int);
            (org_ptr(0x14012ee90L))(this, n);
        };
        char Take(struct CMapData* pkMap, float* pfCurPos)
        {
            using org_ptr = char (WINAPIV*)(struct CGravityStoneRegener*, struct CMapData*, float*);
            return (org_ptr(0x14012eb20L))(this, pkMap, pfCurPos);
        };
        ~CGravityStoneRegener()
        {
            using org_ptr = void (WINAPIV*)(struct CGravityStoneRegener*);
            (org_ptr(0x14012e540L))(this);
        };
        void dtor_CGravityStoneRegener()
        {
            using org_ptr = void (WINAPIV*)(struct CGravityStoneRegener*);
            (org_ptr(0x14012e540L))(this);
        };
    };
END_ATF_NAMESPACE
