// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CAITimer.hpp"
#include "CAttack.hpp"
#include "CCharacter.hpp"
#include "CMapData.hpp"
#include "CPlayer.hpp"
#include "SKILL.hpp"
#include "_animus_create_setdata.hpp"
#include "_animus_fld.hpp"
#include "_attack_param.hpp"
#include "_object_id.hpp"


START_ATF_NAMESPACE
    struct  CAnimus : CCharacter
    {
        char m_byClassCode;
        int m_nHP;
        int m_nFP;
        unsigned __int64 m_dwExp;
        CPlayer *m_pMaster;
        unsigned int m_dwMasterSerial;
        char m_wszMasterName[17];
        char m_aszMasterName[17];
        char m_byRoleCode;
        unsigned int m_dwLastDestroyTime;
        float m_fMoveSpeed;
        char m_byPosRaceTown;
		struct CMapData *m_pBeforeTownCheckMap;
        float m_fBeforeTownCheckPos[2];
        unsigned int m_dwStunTime;
        unsigned int m_dwBeAttackedTargetTime;
        CCharacter *m_pNextTarget;
        int m_nMaxAttackPnt;
        unsigned int m_tmNextEatMasterFP;
        _animus_fld *m_pRecord;
        int m_nMaxHP;
        int m_nMaxFP;
        float m_Mightiness;
        int m_DefPart[5];
        unsigned int m_dwAIMode;
        CCharacter *m_pTarget;
        CAITimer m_AITimer[3];
        SKILL m_Skill[2];
    public:
        void AIInit()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x140125fc0L))(this);
        };
        void Action()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x140127a30L))(this);
        };
        void AlterExp(int64_t nAddExp)
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*, int64_t);
            (org_ptr(0x1401265a0L))(this, nAddExp);
        };
        void AlterExp_MasterReport(int64_t nAlterExp)
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*, int64_t);
            (org_ptr(0x1401292b0L))(this, nAlterExp);
        };
        void AlterFP_MasterReport()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x140129250L))(this);
        };
        void AlterHP_MasterReport()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x1401291f0L))(this);
        };
        void AlterMode_MasterReport(char byMode)
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*, char);
            (org_ptr(0x140129310L))(this, byMode);
        };
        bool Attack(unsigned int skill)
        {
            using org_ptr = bool (WINAPIV*)(struct CAnimus*, unsigned int);
            return (org_ptr(0x140126ac0L))(this, skill);
        };
        int AttackableHeight()
        {
            using org_ptr = int (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x140129880L))(this);
        };
        CAnimus()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x140125e90L))(this);
        };
        void ctor_CAnimus()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x140125e90L))(this);
        };
        void CalcAttExp(struct CAttack* pAT)
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*, struct CAttack*);
            (org_ptr(0x140126f40L))(this, pAT);
        };
        void CalcDefExp(struct CCharacter* pAttackObj, int nDamage)
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*, struct CCharacter*, int);
            (org_ptr(0x140126da0L))(this, pAttackObj, nDamage);
        };
        void ChangeMode(unsigned int mode)
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*, unsigned int);
            (org_ptr(0x1401262e0L))(this, mode);
        };
        void ChangeMode_MasterCommand(int nMode)
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*, int);
            (org_ptr(0x140128df0L))(this, nMode);
        };
        bool ChangeTarget_MasterCommand(struct CCharacter* pTarget)
        {
            using org_ptr = bool (WINAPIV*)(struct CAnimus*, struct CCharacter*);
            return (org_ptr(0x140128e40L))(this, pTarget);
        };
        void CheckPosInTown()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x140129bf0L))(this);
        };
        bool Create(struct _animus_create_setdata* pData)
        {
            using org_ptr = bool (WINAPIV*)(struct CAnimus*, struct _animus_create_setdata*);
            return (org_ptr(0x140128970L))(this, pData);
        };
        bool Destroy()
        {
            using org_ptr = bool (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x140128b90L))(this);
        };
        int GetAttackDP()
        {
            using org_ptr = int (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x14012cdf0L))(this);
        };
        int GetAttackPart()
        {
            using org_ptr = int (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x1401264e0L))(this);
        };
        float GetAttackRange()
        {
            using org_ptr = float (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x1401295c0L))(this);
        };
        int GetDefFC(int nAttactPart, struct CCharacter* pAttChar, int* pnConvertPart)
        {
            using org_ptr = int (WINAPIV*)(struct CAnimus*, int, struct CCharacter*, int*);
            return (org_ptr(0x140129610L))(this, nAttactPart, pAttChar, pnConvertPart);
        };
        float GetDefFacing(int nPart)
        {
            using org_ptr = float (WINAPIV*)(struct CAnimus*, int);
            return (org_ptr(0x140129830L))(this, nPart);
        };
        float GetDefGap(int nPart)
        {
            using org_ptr = float (WINAPIV*)(struct CAnimus*, int);
            return (org_ptr(0x1401297e0L))(this, nPart);
        };
        int GetDefSkill(bool bBackAttackDamage)
        {
            using org_ptr = int (WINAPIV*)(struct CAnimus*, bool);
            return (org_ptr(0x140129730L))(this, bBackAttackDamage);
        };
        int GetFireTol()
        {
            using org_ptr = int (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x140129760L))(this);
        };
        int GetGenAttackProb(struct CCharacter* pDst, int nPart, bool bBackAttack)
        {
            using org_ptr = int (WINAPIV*)(struct CAnimus*, struct CCharacter*, int, bool);
            return (org_ptr(0x1401298d0L))(this, pDst, nPart, bBackAttack);
        };
        int GetHP()
        {
            using org_ptr = int (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x1401293d0L))(this);
        };
        int GetLevel()
        {
            using org_ptr = int (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x1401296c0L))(this);
        };
        int GetMaxHP()
        {
            using org_ptr = int (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x1401293f0L))(this);
        };
        char GetMaxLevel()
        {
            using org_ptr = char (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x1401296e0L))(this);
        };
        bool GetMoveTarget(struct CCharacter* target, float fMoveSpeed, char byMoveMode)
        {
            using org_ptr = bool (WINAPIV*)(struct CAnimus*, struct CCharacter*, float, char);
            return (org_ptr(0x140127fe0L))(this, target, fMoveSpeed, byMoveMode);
        };
        static unsigned int GetNewMonSerial()
        {
            using org_ptr = unsigned int (WINAPIV*)();
            return (org_ptr(0x14012d610L))();
        };
        char* GetObjName()
        {
            using org_ptr = char* (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x140129a60L))(this);
        };
        int GetObjRace()
        {
            using org_ptr = int (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x1401299f0L))(this);
        };
        int GetSoilTol()
        {
            using org_ptr = int (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x1401297a0L))(this);
        };
        void GetTarget()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x140126350L))(this);
        };
        int GetWaterTol()
        {
            using org_ptr = int (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x140129780L))(this);
        };
        float GetWeaponAdjust()
        {
            using org_ptr = float (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x14012cda0L))(this);
        };
        int GetWeaponClass()
        {
            using org_ptr = int (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x1401298a0L))(this);
        };
        float GetWidth()
        {
            using org_ptr = float (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x140129570L))(this);
        };
        int GetWindTol()
        {
            using org_ptr = int (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x1401297c0L))(this);
        };
        bool Heal(unsigned int skill)
        {
            using org_ptr = bool (WINAPIV*)(struct CAnimus*, unsigned int);
            return (org_ptr(0x140127580L))(this, skill);
        };
        bool Init(struct _object_id* pID)
        {
            using org_ptr = bool (WINAPIV*)(struct CAnimus*, struct _object_id*);
            return (org_ptr(0x140128760L))(this, pID);
        };
        bool IsBeAttackedAble(bool bFirst)
        {
            using org_ptr = bool (WINAPIV*)(struct CAnimus*, bool);
            return (org_ptr(0x14012ce10L))(this, bFirst);
        };
        bool IsInTown()
        {
            using org_ptr = bool (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x14012ce30L))(this);
        };
        bool IsValidTarget()
        {
            using org_ptr = bool (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x140129d10L))(this);
        };
        void LifeTimeCheck()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x1401284a0L))(this);
        };
        void Loop()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x140128c20L))(this);
        };
        void MasterAttack_MasterInform(struct CCharacter* pDst)
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*, struct CCharacter*);
            (org_ptr(0x140129170L))(this, pDst);
        };
        void MasterBeAttacked_MasterInform(struct CCharacter* pDst)
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*, struct CCharacter*);
            (org_ptr(0x1401291b0L))(this, pDst);
        };
        void OutOfSec()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x14012cd60L))(this);
        };
        void Process()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x140128570L))(this);
        };
        void RecvKillMessage(struct CCharacter* pDier)
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*, struct CCharacter*);
            (org_ptr(0x140129b80L))(this, pDier);
        };
        void Return_MasterRequest(char byReturnType)
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*, char);
            (org_ptr(0x140129370L))(this, byReturnType);
        };
        bool RobbedHP(struct CCharacter* pDst, int nDecHP)
        {
            using org_ptr = bool (WINAPIV*)(struct CAnimus*, struct CCharacter*, int);
            return (org_ptr(0x14012a7e0L))(this, pDst, nDecHP);
        };
        struct CCharacter* SearchNearEnemy()
        {
            using org_ptr = struct CCharacter* (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x140127e90L))(this);
        };
        struct CCharacter* SearchNearPlayerAttack()
        {
            using org_ptr = struct CCharacter* (WINAPIV*)(struct CAnimus*);
            return (org_ptr(0x140127d20L))(this);
        };
        void SendMsg_AnimusActHealInform(unsigned int dwDstSerial, int nAddHP)
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*, unsigned int, int);
            (org_ptr(0x14012a730L))(this, dwDstSerial, nAddHP);
        };
        void SendMsg_Attack_Gen(struct CAttack* pAT)
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*, struct CAttack*);
            (org_ptr(0x14012a4c0L))(this, pAT);
        };
        void SendMsg_Create()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x140129ef0L))(this);
        };
        void SendMsg_Destroy()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x14012a020L))(this);
        };
        void SendMsg_FixPosition(int n)
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*, int);
            (org_ptr(0x14012a1e0L))(this, n);
        };
        void SendMsg_LevelUp()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x14012a670L))(this);
        };
        void SendMsg_Move()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x14012a0d0L))(this);
        };
        void SendMsg_RealMovePoint(int n)
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*, int);
            (org_ptr(0x14012a330L))(this, n);
        };
        int SetDamage(int nDam, struct CCharacter* pDst, int nDstLv, bool bCrt, int nAttackType, unsigned int dwAttackSerial, bool bJadeReturn)
        {
            using org_ptr = int (WINAPIV*)(struct CAnimus*, int, struct CCharacter*, int, bool, int, unsigned int, bool);
            return (org_ptr(0x140129420L))(this, nDam, pDst, nDstLv, bCrt, nAttackType, dwAttackSerial, bJadeReturn);
        };
        static bool SetStaticMember()
        {
            using org_ptr = bool (WINAPIV*)();
            return (org_ptr(0x14012a8a0L))();
        };
        void TransPoToMaster()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x14012acc0L))(this);
        };
        void _ProcComsumeMaterFP()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x140128cf0L))(this);
        };
        void make_gen_attack_param(struct CCharacter* pDst, char byPart, struct _attack_param* pAP, int nSkillIndex)
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*, struct CCharacter*, char, struct _attack_param*, int);
            (org_ptr(0x14012aa70L))(this, pDst, byPart, pAP, nSkillIndex);
        };
        ~CAnimus()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x140125f70L))(this);
        };
        void dtor_CAnimus()
        {
            using org_ptr = void (WINAPIV*)(struct CAnimus*);
            (org_ptr(0x140125f70L))(this);
        };
    };
END_ATF_NAMESPACE
