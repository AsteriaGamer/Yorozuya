// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CPlayer.hpp"
#include "ListHeap.hpp"


START_ATF_NAMESPACE
    struct LendItemSheet
    {
        enum NUM
        {
            max_lenditem_num = 0xC8,
        };
        struct Cell
        {
            char _nStorageCode;
            _STORAGE_LIST::_db_con *_pkItem;
            unsigned int _dwEndTime;
        public:
            Cell(char byStCode, struct _STORAGE_LIST::_db_con* pItem)
            {
                using org_ptr = void (WINAPIV*)(struct Cell*, char, struct _STORAGE_LIST::_db_con*);
                (org_ptr(0x14030f040L))(this, byStCode, pItem);
            };
            void ctor_Cell(char byStCode, struct _STORAGE_LIST::_db_con* pItem)
            {
                using org_ptr = void (WINAPIV*)(struct Cell*, char, struct _STORAGE_LIST::_db_con*);
                (org_ptr(0x14030f040L))(this, byStCode, pItem);
            };
            Cell()
            {
                using org_ptr = void (WINAPIV*)(struct Cell*);
                (org_ptr(0x14030fff0L))(this);
            };
            void ctor_Cell()
            {
                using org_ptr = void (WINAPIV*)(struct Cell*);
                (org_ptr(0x14030fff0L))(this);
            };
        };
        CPlayer *_pkOwner;
        ListHeap<Cell> _heapFixRow;
    public:
        int CheckTime()
        {
            using org_ptr = int (WINAPIV*)(struct LendItemSheet*);
            return (org_ptr(0x14030d790L))(this);
        };
        bool DeleteLink(char byStorageCode, struct _STORAGE_LIST::_db_con* pItem)
        {
            using org_ptr = bool (WINAPIV*)(struct LendItemSheet*, char, struct _STORAGE_LIST::_db_con*);
            return (org_ptr(0x14030f080L))(this, byStorageCode, pItem);
        };
        bool Initialzie()
        {
            using org_ptr = bool (WINAPIV*)(struct LendItemSheet*);
            return (org_ptr(0x14030ee40L))(this);
        };
        bool InsertLink(char byStorageCode, struct _STORAGE_LIST::_db_con* pkItem)
        {
            using org_ptr = bool (WINAPIV*)(struct LendItemSheet*, char, struct _STORAGE_LIST::_db_con*);
            return (org_ptr(0x14030efd0L))(this, byStorageCode, pkItem);
        };
        LendItemSheet(struct CPlayer* p)
        {
            using org_ptr = void (WINAPIV*)(struct LendItemSheet*, struct CPlayer*);
            (org_ptr(0x14030edd0L))(this, p);
        };
        void ctor_LendItemSheet(struct CPlayer* p)
        {
            using org_ptr = void (WINAPIV*)(struct LendItemSheet*, struct CPlayer*);
            (org_ptr(0x14030edd0L))(this, p);
        };
        void Release()
        {
            using org_ptr = void (WINAPIV*)(struct LendItemSheet*);
            (org_ptr(0x14030f160L))(this);
        };
        ~LendItemSheet()
        {
            using org_ptr = void (WINAPIV*)(struct LendItemSheet*);
            (org_ptr(0x14030f220L))(this);
        };
        void dtor_LendItemSheet()
        {
            using org_ptr = void (WINAPIV*)(struct LendItemSheet*);
            (org_ptr(0x14030f220L))(this);
        };
    };
END_ATF_NAMESPACE
