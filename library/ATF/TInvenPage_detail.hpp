// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "TInvenPage_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::TInvenPagector_TInvenPage2_ptr TInvenPagector_TInvenPage2_next(nullptr);
        info::TInvenPagector_TInvenPage2_clbk TInvenPagector_TInvenPage2_user(nullptr);
        info::TInvenPageclear6_ptr TInvenPageclear6_next(nullptr);
        info::TInvenPageclear6_clbk TInvenPageclear6_user(nullptr);
        info::TInvenPagecreate8_ptr TInvenPagecreate8_next(nullptr);
        info::TInvenPagecreate8_clbk TInvenPagecreate8_user(nullptr);
        info::TInvenPagefind_empty10_ptr TInvenPagefind_empty10_next(nullptr);
        info::TInvenPagefind_empty10_clbk TInvenPagefind_empty10_user(nullptr);
        info::TInvenPagefind_pos_empty12_ptr TInvenPagefind_pos_empty12_next(nullptr);
        info::TInvenPagefind_pos_empty12_clbk TInvenPagefind_pos_empty12_user(nullptr);
        info::TInvenPagefind_pos_overlap14_ptr TInvenPagefind_pos_overlap14_next(nullptr);
        info::TInvenPagefind_pos_overlap14_clbk TInvenPagefind_pos_overlap14_user(nullptr);
        info::TInvenPageget_slot16_ptr TInvenPageget_slot16_next(nullptr);
        info::TInvenPageget_slot16_clbk TInvenPageget_slot16_user(nullptr);
        info::TInvenPagepop18_ptr TInvenPagepop18_next(nullptr);
        info::TInvenPagepop18_clbk TInvenPagepop18_user(nullptr);
        info::TInvenPagepush20_ptr TInvenPagepush20_next(nullptr);
        info::TInvenPagepush20_clbk TInvenPagepush20_user(nullptr);
        info::TInvenPagepush_normal22_ptr TInvenPagepush_normal22_next(nullptr);
        info::TInvenPagepush_normal22_clbk TInvenPagepush_normal22_user(nullptr);
        info::TInvenPagepush_overlap24_ptr TInvenPagepush_overlap24_next(nullptr);
        info::TInvenPagepush_overlap24_clbk TInvenPagepush_overlap24_user(nullptr);
        info::TInvenPagedtor_TInvenPage26_ptr TInvenPagedtor_TInvenPage26_next(nullptr);
        info::TInvenPagedtor_TInvenPage26_clbk TInvenPagedtor_TInvenPage26_user(nullptr);
        
        void TInvenPagector_TInvenPage2_wrapper(struct TInvenPage<_INVENKEY>* _this)
        {
           TInvenPagector_TInvenPage2_user(_this);
        };
        void TInvenPageclear6_wrapper(struct TInvenPage<_INVENKEY>* _this)
        {
           TInvenPageclear6_user(_this);
        };
        bool TInvenPagecreate8_wrapper(struct TInvenPage<_INVENKEY>* _this, int nMaxSlotNum, int nMaxOverlapNum)
        {
           return TInvenPagecreate8_user(_this, nMaxSlotNum, nMaxOverlapNum);
        };
        int TInvenPagefind_empty10_wrapper(struct TInvenPage<_INVENKEY>* _this, struct _INVENKEY* pItem, int nNum)
        {
           return TInvenPagefind_empty10_user(_this, pItem, nNum);
        };
        int TInvenPagefind_pos_empty12_wrapper(struct TInvenPage<_INVENKEY>* _this)
        {
           return TInvenPagefind_pos_empty12_user(_this);
        };
        int TInvenPagefind_pos_overlap14_wrapper(struct TInvenPage<_INVENKEY>* _this, struct _INVENKEY* pItem, int nNum)
        {
           return TInvenPagefind_pos_overlap14_user(_this, pItem, nNum);
        };
        struct TInvenSlot<_INVENKEY>* TInvenPageget_slot16_wrapper(struct TInvenPage<_INVENKEY>* _this, int n)
        {
           return TInvenPageget_slot16_user(_this, n);
        };
        int TInvenPagepop18_wrapper(struct TInvenPage<_INVENKEY>* _this, struct _INVENKEY* pItem, int nS, int nNum)
        {
           return TInvenPagepop18_user(_this, pItem, nS, nNum);
        };
        int TInvenPagepush20_wrapper(struct TInvenPage<_INVENKEY>* _this, struct _INVENKEY* pItem, int nS, int nNum)
        {
           return TInvenPagepush20_user(_this, pItem, nS, nNum);
        };
        int TInvenPagepush_normal22_wrapper(struct TInvenPage<_INVENKEY>* _this, struct _INVENKEY* pItem, int nS)
        {
           return TInvenPagepush_normal22_user(_this, pItem, nS);
        };
        int TInvenPagepush_overlap24_wrapper(struct TInvenPage<_INVENKEY>* _this, struct _INVENKEY* pItem, int nNum, int nS)
        {
           return TInvenPagepush_overlap24_user(_this, pItem, nNum, nS);
        };
        void TInvenPagedtor_TInvenPage26_wrapper(struct TInvenPage<_INVENKEY>* _this)
        {
           TInvenPagedtor_TInvenPage26_user(_this);
        };
        
        hook_record TInvenPage<_INVENKEY>_functions[] = {
        {   (LPVOID)0x1402d5080L,
            (LPVOID *)&TInvenPagector_TInvenPage2_user,
            (LPVOID *)&TInvenPagector_TInvenPage2_next,
            (LPVOID)cast_pointer_function(TInvenPagector_TInvenPage2_wrapper),
            (LPVOID)cast_pointer_function((void(TInvenPage<_INVENKEY>::*)())&TInvenPage<_INVENKEY>::ctor_TInvenPage) },
        {   (LPVOID)0x1402d5520L,
            (LPVOID *)&TInvenPageclear6_user,
            (LPVOID *)&TInvenPageclear6_next,
            (LPVOID)cast_pointer_function(TInvenPageclear6_wrapper),
            (LPVOID)cast_pointer_function((void(TInvenPage<_INVENKEY>::*)())&TInvenPage<_INVENKEY>::clear) },
        {   (LPVOID)0x1402d5160L,
            (LPVOID *)&TInvenPagecreate8_user,
            (LPVOID *)&TInvenPagecreate8_next,
            (LPVOID)cast_pointer_function(TInvenPagecreate8_wrapper),
            (LPVOID)cast_pointer_function((bool(TInvenPage<_INVENKEY>::*)(int, int))&TInvenPage<_INVENKEY>::create) },
        {   (LPVOID)0x1402d5340L,
            (LPVOID *)&TInvenPagefind_empty10_user,
            (LPVOID *)&TInvenPagefind_empty10_next,
            (LPVOID)cast_pointer_function(TInvenPagefind_empty10_wrapper),
            (LPVOID)cast_pointer_function((int(TInvenPage<_INVENKEY>::*)(struct _INVENKEY*, int))&TInvenPage<_INVENKEY>::find_empty) },
        {   (LPVOID)0x1402d58c0L,
            (LPVOID *)&TInvenPagefind_pos_empty12_user,
            (LPVOID *)&TInvenPagefind_pos_empty12_next,
            (LPVOID)cast_pointer_function(TInvenPagefind_pos_empty12_wrapper),
            (LPVOID)cast_pointer_function((int(TInvenPage<_INVENKEY>::*)())&TInvenPage<_INVENKEY>::find_pos_empty) },
        {   (LPVOID)0x1402d5960L,
            (LPVOID *)&TInvenPagefind_pos_overlap14_user,
            (LPVOID *)&TInvenPagefind_pos_overlap14_next,
            (LPVOID)cast_pointer_function(TInvenPagefind_pos_overlap14_wrapper),
            (LPVOID)cast_pointer_function((int(TInvenPage<_INVENKEY>::*)(struct _INVENKEY*, int))&TInvenPage<_INVENKEY>::find_pos_overlap) },
        {   (LPVOID)0x1402d5300L,
            (LPVOID *)&TInvenPageget_slot16_user,
            (LPVOID *)&TInvenPageget_slot16_next,
            (LPVOID)cast_pointer_function(TInvenPageget_slot16_wrapper),
            (LPVOID)cast_pointer_function((struct TInvenSlot<_INVENKEY>*(TInvenPage<_INVENKEY>::*)(int))&TInvenPage<_INVENKEY>::get_slot) },
        {   (LPVOID)0x1402d5480L,
            (LPVOID *)&TInvenPagepop18_user,
            (LPVOID *)&TInvenPagepop18_next,
            (LPVOID)cast_pointer_function(TInvenPagepop18_wrapper),
            (LPVOID)cast_pointer_function((int(TInvenPage<_INVENKEY>::*)(struct _INVENKEY*, int, int))&TInvenPage<_INVENKEY>::pop) },
        {   (LPVOID)0x1402d53d0L,
            (LPVOID *)&TInvenPagepush20_user,
            (LPVOID *)&TInvenPagepush20_next,
            (LPVOID)cast_pointer_function(TInvenPagepush20_wrapper),
            (LPVOID)cast_pointer_function((int(TInvenPage<_INVENKEY>::*)(struct _INVENKEY*, int, int))&TInvenPage<_INVENKEY>::push) },
        {   (LPVOID)0x1402d57a0L,
            (LPVOID *)&TInvenPagepush_normal22_user,
            (LPVOID *)&TInvenPagepush_normal22_next,
            (LPVOID)cast_pointer_function(TInvenPagepush_normal22_wrapper),
            (LPVOID)cast_pointer_function((int(TInvenPage<_INVENKEY>::*)(struct _INVENKEY*, int))&TInvenPage<_INVENKEY>::push_normal) },
        {   (LPVOID)0x1402d5830L,
            (LPVOID *)&TInvenPagepush_overlap24_user,
            (LPVOID *)&TInvenPagepush_overlap24_next,
            (LPVOID)cast_pointer_function(TInvenPagepush_overlap24_wrapper),
            (LPVOID)cast_pointer_function((int(TInvenPage<_INVENKEY>::*)(struct _INVENKEY*, int, int))&TInvenPage<_INVENKEY>::push_overlap) },
        {   (LPVOID)0x1402d50b0L,
            (LPVOID *)&TInvenPagedtor_TInvenPage26_user,
            (LPVOID *)&TInvenPagedtor_TInvenPage26_next,
            (LPVOID)cast_pointer_function(TInvenPagedtor_TInvenPage26_wrapper),
            (LPVOID)cast_pointer_function((void(TInvenPage<_INVENKEY>::*)())&TInvenPage<_INVENKEY>::dtor_TInvenPage) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
