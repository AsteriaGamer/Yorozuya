// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CCryptor.hpp"


START_ATF_NAMESPACE
    namespace info
    {
        using CCryptorctor_CCryptor2_ptr = void (WINAPIV*)(struct CCryptor*);
        using CCryptorctor_CCryptor2_clbk = void (WINAPIV*)(struct CCryptor*, CCryptorctor_CCryptor2_ptr);
        using CCryptorCiphertextLength4_ptr = uint64_t (WINAPIV*)(struct CCryptor*, uint64_t);
        using CCryptorCiphertextLength4_clbk = uint64_t (WINAPIV*)(struct CCryptor*, uint64_t, CCryptorCiphertextLength4_ptr);
        using CCryptorCreateKey6_ptr = bool (WINAPIV*)(struct CCryptor*);
        using CCryptorCreateKey6_clbk = bool (WINAPIV*)(struct CCryptor*, CCryptorCreateKey6_ptr);
        using CCryptorDecrypt8_ptr = bool (WINAPIV*)(struct CCryptor*, char*, uint64_t, char*, uint64_t);
        using CCryptorDecrypt8_clbk = bool (WINAPIV*)(struct CCryptor*, char*, uint64_t, char*, uint64_t, CCryptorDecrypt8_ptr);
        using CCryptorEncrypt10_ptr = bool (WINAPIV*)(struct CCryptor*, char*, uint64_t, char*, uint64_t);
        using CCryptorEncrypt10_clbk = bool (WINAPIV*)(struct CCryptor*, char*, uint64_t, char*, uint64_t, CCryptorEncrypt10_ptr);
        using CCryptorGenerateBlock12_ptr = void (WINAPIV*)(struct CCryptor*, char*, uint64_t);
        using CCryptorGenerateBlock12_clbk = void (WINAPIV*)(struct CCryptor*, char*, uint64_t, CCryptorGenerateBlock12_ptr);
        using CCryptorGetKeyStr14_ptr = bool (WINAPIV*)(struct CCryptor*, char*, uint64_t);
        using CCryptorGetKeyStr14_clbk = bool (WINAPIV*)(struct CCryptor*, char*, uint64_t, CCryptorGetKeyStr14_ptr);
        using CCryptorInit16_ptr = bool (WINAPIV*)(struct CCryptor*, char*, bool);
        using CCryptorInit16_clbk = bool (WINAPIV*)(struct CCryptor*, char*, bool, CCryptorInit16_ptr);
        using CCryptorMakeHash18_ptr = bool (WINAPIV*)(struct CCryptor*, char*, uint64_t, char*, uint64_t);
        using CCryptorMakeHash18_clbk = bool (WINAPIV*)(struct CCryptor*, char*, uint64_t, char*, uint64_t, CCryptorMakeHash18_ptr);
        using CCryptorMaxPlaintextLength20_ptr = uint64_t (WINAPIV*)(struct CCryptor*, uint64_t);
        using CCryptorMaxPlaintextLength20_clbk = uint64_t (WINAPIV*)(struct CCryptor*, uint64_t, CCryptorMaxPlaintextLength20_ptr);
        using CCryptorSaveKey22_ptr = bool (WINAPIV*)(struct CCryptor*);
        using CCryptorSaveKey22_clbk = bool (WINAPIV*)(struct CCryptor*, CCryptorSaveKey22_ptr);
        using CCryptorVerifyHash24_ptr = bool (WINAPIV*)(struct CCryptor*, char*, uint64_t, char*, uint64_t);
        using CCryptorVerifyHash24_clbk = bool (WINAPIV*)(struct CCryptor*, char*, uint64_t, char*, uint64_t, CCryptorVerifyHash24_ptr);
        using CCryptordtor_CCryptor29_ptr = void (WINAPIV*)(struct CCryptor*);
        using CCryptordtor_CCryptor29_clbk = void (WINAPIV*)(struct CCryptor*, CCryptordtor_CCryptor29_ptr);
        
    }; // end namespace info
END_ATF_NAMESPACE
