// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CGameObject.hpp"
#include "CObjectListVtbl.hpp"
#include "_object_list_point.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 8)
    struct CObjectList
    {
        CObjectListVtbl *vfptr;
        _object_list_point m_Head;
        _object_list_point m_Tail;
        int m_nSize;
    public:
        CObjectList()
        {
            using org_ptr = void (WINAPIV*)(struct CObjectList*);
            (org_ptr(0x140188d20L))(this);
        };
        void ctor_CObjectList()
        {
            using org_ptr = void (WINAPIV*)(struct CObjectList*);
            (org_ptr(0x140188d20L))(this);
        };
        struct CGameObject* CopyItem(unsigned int dwIndex)
        {
            using org_ptr = struct CGameObject* (WINAPIV*)(struct CObjectList*, unsigned int);
            return (org_ptr(0x14026f150L))(this, dwIndex);
        };
        bool DeleteItem(struct _object_list_point* pItem)
        {
            using org_ptr = bool (WINAPIV*)(struct CObjectList*, struct _object_list_point*);
            return (org_ptr(0x140189d20L))(this, pItem);
        };
        int GetSize()
        {
            using org_ptr = int (WINAPIV*)(struct CObjectList*);
            return (org_ptr(0x14026f1e0L))(this);
        };
        void InitList()
        {
            using org_ptr = void (WINAPIV*)(struct CObjectList*);
            (org_ptr(0x140188db0L))(this);
        };
        bool PushItem(struct _object_list_point* pItem)
        {
            using org_ptr = bool (WINAPIV*)(struct CObjectList*, struct _object_list_point*);
            return (org_ptr(0x140189c30L))(this, pItem);
        };
        ~CObjectList()
        {
            using org_ptr = void (WINAPIV*)(struct CObjectList*);
            (org_ptr(0x140027b80L))(this);
        };
        void dtor_CObjectList()
        {
            using org_ptr = void (WINAPIV*)(struct CObjectList*);
            (org_ptr(0x140027b80L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
