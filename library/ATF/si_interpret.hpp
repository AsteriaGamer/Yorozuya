// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_SetItemEff_fld.hpp"
#include "si_effect.hpp"


START_ATF_NAMESPACE
    struct si_interpret
    {
        struct effect_data
        {
            int iEffectCode;
            float fEffectValue;
        };
        char byEffectTypeCount;
        si_effect effect_type[8];
        effect_data effect_info[8];
    public:
        char GetCountOfEffect(int idx)
        {
            using org_ptr = char (WINAPIV*)(struct si_interpret*, int);
            return (org_ptr(0x1402e3c20L))(this, idx);
        };
        char GetCountOfItem(int idx)
        {
            using org_ptr = char (WINAPIV*)(struct si_interpret*, int);
            return (org_ptr(0x1402e3b90L))(this, idx);
        };
        int GetEffectCode(int idx)
        {
            using org_ptr = int (WINAPIV*)(struct si_interpret*, int);
            return (org_ptr(0x14007da60L))(this, idx);
        };
        char GetEffectTypeCount()
        {
            using org_ptr = char (WINAPIV*)(struct si_interpret*);
            return (org_ptr(0x1402e3b70L))(this);
        };
        float GetEffectValue(int idx)
        {
            using org_ptr = float (WINAPIV*)(struct si_interpret*, int);
            return (org_ptr(0x14007daa0L))(this, idx);
        };
        void init()
        {
            using org_ptr = void (WINAPIV*)(struct si_interpret*);
            (org_ptr(0x1402e36b0L))(this);
        };
        bool set_effect_interpret(struct _SetItemEff_fld* pFld)
        {
            using org_ptr = bool (WINAPIV*)(struct si_interpret*, struct _SetItemEff_fld*);
            return (org_ptr(0x1402e3730L))(this, pFld);
        };
        si_interpret()
        {
            using org_ptr = void (WINAPIV*)(struct si_interpret*);
            (org_ptr(0x1402e35c0L))(this);
        };
        void ctor_si_interpret()
        {
            using org_ptr = void (WINAPIV*)(struct si_interpret*);
            (org_ptr(0x1402e35c0L))(this);
        };
    };
END_ATF_NAMESPACE
