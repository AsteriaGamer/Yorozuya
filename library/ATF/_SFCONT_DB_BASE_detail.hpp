// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_SFCONT_DB_BASE_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::_SFCONT_DB_BASEInit2_ptr _SFCONT_DB_BASEInit2_next(nullptr);
        static info::_SFCONT_DB_BASEInit2_clbk _SFCONT_DB_BASEInit2_user(nullptr);
        static info::_SFCONT_DB_BASEctor__SFCONT_DB_BASE4_ptr _SFCONT_DB_BASEctor__SFCONT_DB_BASE4_next(nullptr);
        static info::_SFCONT_DB_BASEctor__SFCONT_DB_BASE4_clbk _SFCONT_DB_BASEctor__SFCONT_DB_BASE4_user(nullptr);
        
        static info::_SFCONT_DB_BASE___LISTGetEffectCode2_ptr _SFCONT_DB_BASE___LISTGetEffectCode2_next(nullptr);
        static info::_SFCONT_DB_BASE___LISTGetEffectCode2_clbk _SFCONT_DB_BASE___LISTGetEffectCode2_user(nullptr);
        static info::_SFCONT_DB_BASE___LISTGetEffectIndex4_ptr _SFCONT_DB_BASE___LISTGetEffectIndex4_next(nullptr);
        static info::_SFCONT_DB_BASE___LISTGetEffectIndex4_clbk _SFCONT_DB_BASE___LISTGetEffectIndex4_user(nullptr);
        static info::_SFCONT_DB_BASE___LISTGetLeftTime6_ptr _SFCONT_DB_BASE___LISTGetLeftTime6_next(nullptr);
        static info::_SFCONT_DB_BASE___LISTGetLeftTime6_clbk _SFCONT_DB_BASE___LISTGetLeftTime6_user(nullptr);
        static info::_SFCONT_DB_BASE___LISTGetLv8_ptr _SFCONT_DB_BASE___LISTGetLv8_next(nullptr);
        static info::_SFCONT_DB_BASE___LISTGetLv8_clbk _SFCONT_DB_BASE___LISTGetLv8_user(nullptr);
        static info::_SFCONT_DB_BASE___LISTGetOrder10_ptr _SFCONT_DB_BASE___LISTGetOrder10_next(nullptr);
        static info::_SFCONT_DB_BASE___LISTGetOrder10_clbk _SFCONT_DB_BASE___LISTGetOrder10_user(nullptr);
        static info::_SFCONT_DB_BASE___LISTInit12_ptr _SFCONT_DB_BASE___LISTInit12_next(nullptr);
        static info::_SFCONT_DB_BASE___LISTInit12_clbk _SFCONT_DB_BASE___LISTInit12_user(nullptr);
        static info::_SFCONT_DB_BASE___LISTIsFilled14_ptr _SFCONT_DB_BASE___LISTIsFilled14_next(nullptr);
        static info::_SFCONT_DB_BASE___LISTIsFilled14_clbk _SFCONT_DB_BASE___LISTIsFilled14_user(nullptr);
        static info::_SFCONT_DB_BASE___LISTSetKey16_ptr _SFCONT_DB_BASE___LISTSetKey16_next(nullptr);
        static info::_SFCONT_DB_BASE___LISTSetKey16_clbk _SFCONT_DB_BASE___LISTSetKey16_user(nullptr);
        static info::_SFCONT_DB_BASE___LISTSetLeftTime18_ptr _SFCONT_DB_BASE___LISTSetLeftTime18_next(nullptr);
        static info::_SFCONT_DB_BASE___LISTSetLeftTime18_clbk _SFCONT_DB_BASE___LISTSetLeftTime18_user(nullptr);
        static info::_SFCONT_DB_BASE___LISTSetOrder20_ptr _SFCONT_DB_BASE___LISTSetOrder20_next(nullptr);
        static info::_SFCONT_DB_BASE___LISTSetOrder20_clbk _SFCONT_DB_BASE___LISTSetOrder20_user(nullptr);
        
        static void _SFCONT_DB_BASEInit2_wrapper(struct _SFCONT_DB_BASE* _this)
        {
           _SFCONT_DB_BASEInit2_user(_this, _SFCONT_DB_BASEInit2_next);
        };
        static void _SFCONT_DB_BASEctor__SFCONT_DB_BASE4_wrapper(struct _SFCONT_DB_BASE* _this)
        {
           _SFCONT_DB_BASEctor__SFCONT_DB_BASE4_user(_this, _SFCONT_DB_BASEctor__SFCONT_DB_BASE4_next);
        };
        
        static char _SFCONT_DB_BASE___LISTGetEffectCode2_wrapper(struct _SFCONT_DB_BASE::_LIST* _this)
        {
           return _SFCONT_DB_BASE___LISTGetEffectCode2_user(_this, _SFCONT_DB_BASE___LISTGetEffectCode2_next);
        };
        static uint16_t _SFCONT_DB_BASE___LISTGetEffectIndex4_wrapper(struct _SFCONT_DB_BASE::_LIST* _this)
        {
           return _SFCONT_DB_BASE___LISTGetEffectIndex4_user(_this, _SFCONT_DB_BASE___LISTGetEffectIndex4_next);
        };
        static uint16_t _SFCONT_DB_BASE___LISTGetLeftTime6_wrapper(struct _SFCONT_DB_BASE::_LIST* _this)
        {
           return _SFCONT_DB_BASE___LISTGetLeftTime6_user(_this, _SFCONT_DB_BASE___LISTGetLeftTime6_next);
        };
        static char _SFCONT_DB_BASE___LISTGetLv8_wrapper(struct _SFCONT_DB_BASE::_LIST* _this)
        {
           return _SFCONT_DB_BASE___LISTGetLv8_user(_this, _SFCONT_DB_BASE___LISTGetLv8_next);
        };
        static char _SFCONT_DB_BASE___LISTGetOrder10_wrapper(struct _SFCONT_DB_BASE::_LIST* _this)
        {
           return _SFCONT_DB_BASE___LISTGetOrder10_user(_this, _SFCONT_DB_BASE___LISTGetOrder10_next);
        };
        static void _SFCONT_DB_BASE___LISTInit12_wrapper(struct _SFCONT_DB_BASE::_LIST* _this)
        {
           _SFCONT_DB_BASE___LISTInit12_user(_this, _SFCONT_DB_BASE___LISTInit12_next);
        };
        static bool _SFCONT_DB_BASE___LISTIsFilled14_wrapper(struct _SFCONT_DB_BASE::_LIST* _this)
        {
           return _SFCONT_DB_BASE___LISTIsFilled14_user(_this, _SFCONT_DB_BASE___LISTIsFilled14_next);
        };
        static void _SFCONT_DB_BASE___LISTSetKey16_wrapper(struct _SFCONT_DB_BASE::_LIST* _this, char pl_byOrder, char pl_byEffectCode, uint16_t pl_wEffectIndex, char pl_byLv, uint16_t pl_wLeftTime)
        {
           _SFCONT_DB_BASE___LISTSetKey16_user(_this, pl_byOrder, pl_byEffectCode, pl_wEffectIndex, pl_byLv, pl_wLeftTime, _SFCONT_DB_BASE___LISTSetKey16_next);
        };
        static void _SFCONT_DB_BASE___LISTSetLeftTime18_wrapper(struct _SFCONT_DB_BASE::_LIST* _this, uint16_t pl_wLeftTime)
        {
           _SFCONT_DB_BASE___LISTSetLeftTime18_user(_this, pl_wLeftTime, _SFCONT_DB_BASE___LISTSetLeftTime18_next);
        };
        static void _SFCONT_DB_BASE___LISTSetOrder20_wrapper(struct _SFCONT_DB_BASE::_LIST* _this, char pl_byOrder)
        {
           _SFCONT_DB_BASE___LISTSetOrder20_user(_this, pl_byOrder, _SFCONT_DB_BASE___LISTSetOrder20_next);
        };
        
        static hook_record _SFCONT_DB_BASE_functions[] = {
        {   (LPVOID)0x140076b00L,
            (LPVOID *)&_SFCONT_DB_BASEInit2_user,
            (LPVOID *)&_SFCONT_DB_BASEInit2_next,
            (LPVOID)cast_pointer_function(_SFCONT_DB_BASEInit2_wrapper),
            (LPVOID)cast_pointer_function((void(_SFCONT_DB_BASE::*)())&_SFCONT_DB_BASE::Init) },
        {   (LPVOID)0x140076ab0L,
            (LPVOID *)&_SFCONT_DB_BASEctor__SFCONT_DB_BASE4_user,
            (LPVOID *)&_SFCONT_DB_BASEctor__SFCONT_DB_BASE4_next,
            (LPVOID)cast_pointer_function(_SFCONT_DB_BASEctor__SFCONT_DB_BASE4_wrapper),
            (LPVOID)cast_pointer_function((void(_SFCONT_DB_BASE::*)())&_SFCONT_DB_BASE::ctor__SFCONT_DB_BASE) },
        
        {   (LPVOID)0x14007a480L,
            (LPVOID *)&_SFCONT_DB_BASE___LISTGetEffectCode2_user,
            (LPVOID *)&_SFCONT_DB_BASE___LISTGetEffectCode2_next,
            (LPVOID)cast_pointer_function(_SFCONT_DB_BASE___LISTGetEffectCode2_wrapper),
            (LPVOID)cast_pointer_function((char(_SFCONT_DB_BASE::_LIST::*)())&_SFCONT_DB_BASE::_LIST::GetEffectCode) },
        {   (LPVOID)0x14007a4a0L,
            (LPVOID *)&_SFCONT_DB_BASE___LISTGetEffectIndex4_user,
            (LPVOID *)&_SFCONT_DB_BASE___LISTGetEffectIndex4_next,
            (LPVOID)cast_pointer_function(_SFCONT_DB_BASE___LISTGetEffectIndex4_wrapper),
            (LPVOID)cast_pointer_function((uint16_t(_SFCONT_DB_BASE::_LIST::*)())&_SFCONT_DB_BASE::_LIST::GetEffectIndex) },
        {   (LPVOID)0x14007a4e0L,
            (LPVOID *)&_SFCONT_DB_BASE___LISTGetLeftTime6_user,
            (LPVOID *)&_SFCONT_DB_BASE___LISTGetLeftTime6_next,
            (LPVOID)cast_pointer_function(_SFCONT_DB_BASE___LISTGetLeftTime6_wrapper),
            (LPVOID)cast_pointer_function((uint16_t(_SFCONT_DB_BASE::_LIST::*)())&_SFCONT_DB_BASE::_LIST::GetLeftTime) },
        {   (LPVOID)0x14007a4c0L,
            (LPVOID *)&_SFCONT_DB_BASE___LISTGetLv8_user,
            (LPVOID *)&_SFCONT_DB_BASE___LISTGetLv8_next,
            (LPVOID)cast_pointer_function(_SFCONT_DB_BASE___LISTGetLv8_wrapper),
            (LPVOID)cast_pointer_function((char(_SFCONT_DB_BASE::_LIST::*)())&_SFCONT_DB_BASE::_LIST::GetLv) },
        {   (LPVOID)0x14007a460L,
            (LPVOID *)&_SFCONT_DB_BASE___LISTGetOrder10_user,
            (LPVOID *)&_SFCONT_DB_BASE___LISTGetOrder10_next,
            (LPVOID)cast_pointer_function(_SFCONT_DB_BASE___LISTGetOrder10_wrapper),
            (LPVOID)cast_pointer_function((char(_SFCONT_DB_BASE::_LIST::*)())&_SFCONT_DB_BASE::_LIST::GetOrder) },
        {   (LPVOID)0x140076bb0L,
            (LPVOID *)&_SFCONT_DB_BASE___LISTInit12_user,
            (LPVOID *)&_SFCONT_DB_BASE___LISTInit12_next,
            (LPVOID)cast_pointer_function(_SFCONT_DB_BASE___LISTInit12_wrapper),
            (LPVOID)cast_pointer_function((void(_SFCONT_DB_BASE::_LIST::*)())&_SFCONT_DB_BASE::_LIST::Init) },
        {   (LPVOID)0x14007a500L,
            (LPVOID *)&_SFCONT_DB_BASE___LISTIsFilled14_user,
            (LPVOID *)&_SFCONT_DB_BASE___LISTIsFilled14_next,
            (LPVOID)cast_pointer_function(_SFCONT_DB_BASE___LISTIsFilled14_wrapper),
            (LPVOID)cast_pointer_function((bool(_SFCONT_DB_BASE::_LIST::*)())&_SFCONT_DB_BASE::_LIST::IsFilled) },
        {   (LPVOID)0x140120b60L,
            (LPVOID *)&_SFCONT_DB_BASE___LISTSetKey16_user,
            (LPVOID *)&_SFCONT_DB_BASE___LISTSetKey16_next,
            (LPVOID)cast_pointer_function(_SFCONT_DB_BASE___LISTSetKey16_wrapper),
            (LPVOID)cast_pointer_function((void(_SFCONT_DB_BASE::_LIST::*)(char, char, uint16_t, char, uint16_t))&_SFCONT_DB_BASE::_LIST::SetKey) },
        {   (LPVOID)0x140120c30L,
            (LPVOID *)&_SFCONT_DB_BASE___LISTSetLeftTime18_user,
            (LPVOID *)&_SFCONT_DB_BASE___LISTSetLeftTime18_next,
            (LPVOID)cast_pointer_function(_SFCONT_DB_BASE___LISTSetLeftTime18_wrapper),
            (LPVOID)cast_pointer_function((void(_SFCONT_DB_BASE::_LIST::*)(uint16_t))&_SFCONT_DB_BASE::_LIST::SetLeftTime) },
        {   (LPVOID)0x14007d320L,
            (LPVOID *)&_SFCONT_DB_BASE___LISTSetOrder20_user,
            (LPVOID *)&_SFCONT_DB_BASE___LISTSetOrder20_next,
            (LPVOID)cast_pointer_function(_SFCONT_DB_BASE___LISTSetOrder20_wrapper),
            (LPVOID)cast_pointer_function((void(_SFCONT_DB_BASE::_LIST::*)(char))&_SFCONT_DB_BASE::_LIST::SetOrder) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
