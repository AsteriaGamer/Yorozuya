// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CDarkHoleChannel.hpp"
#include "CGameObject.hpp"
#include "CMapData.hpp"
#include "CPlayer.hpp"
#include "_ENTER_DUNGEON_NEW_POS.hpp"
#include "_darkhole_create_setdata.hpp"
#include "_object_id.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 4)
    struct  CDarkHole : CGameObject
    {
		struct CDarkHoleChannel *m_pChannel;
        unsigned int m_dwChannelSerial;
        unsigned int m_dwOpenerSerial;
        char m_wszOpenerName[17];
        char m_aszOpenerName[17];
        unsigned int m_dwNextCloseTime;
        unsigned int m_dwNextHurryTime;
        bool m_bHurry;
    public:
        CDarkHole()
        {
            using org_ptr = void (WINAPIV*)(struct CDarkHole*);
            (org_ptr(0x140163820L))(this);
        };
        void ctor_CDarkHole()
        {
            using org_ptr = void (WINAPIV*)(struct CDarkHole*);
            (org_ptr(0x140163820L))(this);
        };
        bool Create(struct _darkhole_create_setdata* pParam)
        {
            using org_ptr = bool (WINAPIV*)(struct CDarkHole*, struct _darkhole_create_setdata*);
            return (org_ptr(0x1401639a0L))(this, pParam);
        };
        bool Destroy()
        {
            using org_ptr = bool (WINAPIV*)(struct CDarkHole*);
            return (org_ptr(0x140163b20L))(this);
        };
        bool EnterPlayer(struct CPlayer* pEnter, struct CMapData* pOldMap, uint16_t wOldLayer, float* fOldPos, bool bReconnect)
        {
            using org_ptr = bool (WINAPIV*)(struct CDarkHole*, struct CPlayer*, struct CMapData*, uint16_t, float*, bool);
            return (org_ptr(0x140163bc0L))(this, pEnter, pOldMap, wOldLayer, fOldPos, bReconnect);
        };
        bool GetEnterNewPos(struct _ENTER_DUNGEON_NEW_POS* pNewPos)
        {
            using org_ptr = bool (WINAPIV*)(struct CDarkHole*, struct _ENTER_DUNGEON_NEW_POS*);
            return (org_ptr(0x140163d10L))(this, pNewPos);
        };
        void Init(struct _object_id* pID)
        {
            using org_ptr = void (WINAPIV*)(struct CDarkHole*, struct _object_id*);
            (org_ptr(0x140163910L))(this, pID);
        };
        bool IsNewEnterAbleNum()
        {
            using org_ptr = bool (WINAPIV*)(struct CDarkHole*);
            return (org_ptr(0x140163d70L))(this);
        };
        bool IsNewEnterAblePlayer(struct CPlayer* pEnter)
        {
            using org_ptr = bool (WINAPIV*)(struct CDarkHole*, struct CPlayer*);
            return (org_ptr(0x140163c50L))(this, pEnter);
        };
        bool IsOpenPartyMember(struct CPlayer* pOpener)
        {
            using org_ptr = bool (WINAPIV*)(struct CDarkHole*, struct CPlayer*);
            return (org_ptr(0x140163cb0L))(this, pOpener);
        };
        void Loop()
        {
            using org_ptr = void (WINAPIV*)(struct CDarkHole*);
            (org_ptr(0x140163e40L))(this);
        };
        void SendMsg_Create()
        {
            using org_ptr = void (WINAPIV*)(struct CDarkHole*);
            (org_ptr(0x140163f10L))(this);
        };
        void SendMsg_Destroy()
        {
            using org_ptr = void (WINAPIV*)(struct CDarkHole*);
            (org_ptr(0x140164040L))(this);
        };
        void SendMsg_FixPosition(int n)
        {
            using org_ptr = void (WINAPIV*)(struct CDarkHole*, int);
            (org_ptr(0x1401642f0L))(this, n);
        };
        void SendMsg_StateChange()
        {
            using org_ptr = void (WINAPIV*)(struct CDarkHole*);
            (org_ptr(0x140164240L))(this);
        };
        ~CDarkHole()
        {
            using org_ptr = void (WINAPIV*)(struct CDarkHole*);
            (org_ptr(0x1401638c0L))(this);
        };
        void dtor_CDarkHole()
        {
            using org_ptr = void (WINAPIV*)(struct CDarkHole*);
            (org_ptr(0x1401638c0L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
