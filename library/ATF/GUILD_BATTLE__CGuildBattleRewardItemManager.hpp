// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CPlayer.hpp"
#include "GUILD_BATTLE__CGuildBattleRewardItem.hpp"
#include "std__vector.hpp"


START_ATF_NAMESPACE
    namespace GUILD_BATTLE
    {
        struct CGuildBattleRewardItemManager
        {
            std::vector<CGuildBattleRewardItem,std::allocator<CGuildBattleRewardItem> > m_kItem;
        public:
            CGuildBattleRewardItemManager()
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleRewardItemManager*);
                (org_ptr(0x1403c93a0L))(this);
            };
            void ctor_CGuildBattleRewardItemManager()
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleRewardItemManager*);
                (org_ptr(0x1403c93a0L))(this);
            };
            struct CGuildBattleRewardItem* Give(struct CPlayer* pkPlayer)
            {
                using org_ptr = struct CGuildBattleRewardItem* (WINAPIV*)(struct CGuildBattleRewardItemManager*, struct CPlayer*);
                return (org_ptr(0x1403eaf00L))(this, pkPlayer);
            };
            bool Init()
            {
                using org_ptr = bool (WINAPIV*)(struct CGuildBattleRewardItemManager*);
                return (org_ptr(0x1403c9420L))(this);
            };
            static struct CGuildBattleRewardItemManager* Instance()
            {
                using org_ptr = struct CGuildBattleRewardItemManager* (WINAPIV*)();
                return (org_ptr(0x1403d9790L))();
            };
            ~CGuildBattleRewardItemManager()
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleRewardItemManager*);
                (org_ptr(0x1403c93e0L))(this);
            };
            void dtor_CGuildBattleRewardItemManager()
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleRewardItemManager*);
                (org_ptr(0x1403c93e0L))(this);
            };
        };
    }; // end namespace GUILD_BATTLE
END_ATF_NAMESPACE
