// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"


START_ATF_NAMESPACE
    struct CTimer
    {
        float mLoopTime;
        float mTime;
        float mRealTime;
        float mMinFPS;
        float mfLoopHop;
        unsigned int mOldTime;
        unsigned int mLoopCnt;
        unsigned int mLoopHop;
        int m_bUsingQPF;
        int m_bTimerInitialized;
        float mFPS;
        unsigned int mLoopFPSCnt;
        float mFPSTime;
        float m_fTicksPerSec;
        float m_fFramesPerSec;
        float m_fAverageFramesPerSec;
        float m_fSecsPerFrame;
        float m_fLamTime;
        unsigned __int64 m_qwTicks;
        unsigned __int64 m_qwStartTicks;
        unsigned __int64 m_qwTicksPerSec;
        unsigned __int64 m_qwTicksPerFrame;
    public:
        void CalculateTime()
        {
            using org_ptr = void (WINAPIV*)(struct CTimer*);
            (org_ptr(0x1404e2aa0L))(this);
        };
        float GetDuration()
        {
            using org_ptr = float (WINAPIV*)(struct CTimer*);
            return (org_ptr(0x1404e2a70L))(this);
        };
        float GetLoopTime()
        {
            using org_ptr = float (WINAPIV*)(struct CTimer*);
            return (org_ptr(0x1404e2bf0L))(this);
        };
        uint64_t GetTicks()
        {
            using org_ptr = uint64_t (WINAPIV*)(struct CTimer*);
            return (org_ptr(0x1404e2a20L))(this);
        };
        float GetTime()
        {
            using org_ptr = float (WINAPIV*)(struct CTimer*);
            return (org_ptr(0x1404e2c00L))(this);
        };
        void SetMinFPS(float arg_0)
        {
            using org_ptr = void (WINAPIV*)(struct CTimer*, float);
            (org_ptr(0x1404e2c20L))(this, arg_0);
        };
        void SetTime(float arg_0)
        {
            using org_ptr = void (WINAPIV*)(struct CTimer*, float);
            (org_ptr(0x1404e2c10L))(this, arg_0);
        };
    };
END_ATF_NAMESPACE
