// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "US__CArray.hpp"


START_ATF_NAMESPACE
    namespace US
    {
        namespace info
        {
            using US__CArrayAlloc2_ptr = void (WINAPIV*)(struct US::CArray<CLuaScript>*, unsigned int);
            using US__CArrayAlloc2_clbk = void (WINAPIV*)(struct US::CArray<CLuaScript>*, unsigned int, US__CArrayAlloc2_ptr);
            using US__CArrayctor_CArray4_ptr = void (WINAPIV*)(struct US::CArray<CLuaScript>*);
            using US__CArrayctor_CArray4_clbk = void (WINAPIV*)(struct US::CArray<CLuaScript>*, US__CArrayctor_CArray4_ptr);
            using US__CArrayGetAtPtr6_ptr = struct CLuaScript* (WINAPIV*)(struct US::CArray<CLuaScript>*, unsigned int);
            using US__CArrayGetAtPtr6_clbk = struct CLuaScript* (WINAPIV*)(struct US::CArray<CLuaScript>*, unsigned int, US__CArrayGetAtPtr6_ptr);
            using US__CArrayGetIndex8_ptr = unsigned int (WINAPIV*)(struct US::CArray<CLuaScript>*, struct CLuaScript*);
            using US__CArrayGetIndex8_clbk = unsigned int (WINAPIV*)(struct US::CArray<CLuaScript>*, struct CLuaScript*, US__CArrayGetIndex8_ptr);
            using US__CArrayGetSize10_ptr = unsigned int (WINAPIV*)(struct US::CArray<CLuaScript>*);
            using US__CArrayGetSize10_clbk = unsigned int (WINAPIV*)(struct US::CArray<CLuaScript>*, US__CArrayGetSize10_ptr);
            using US__CArraydtor_CArray15_ptr = void (WINAPIV*)(struct US::CArray<CLuaScript>*);
            using US__CArraydtor_CArray15_clbk = void (WINAPIV*)(struct US::CArray<CLuaScript>*, US__CArraydtor_CArray15_ptr);
            
        }; // end namespace info
    }; // end namespace US
END_ATF_NAMESPACE
#include "US__CArray.hpp"


START_ATF_NAMESPACE
    namespace US
    {
        namespace info
        {
            using US__CArrayAlloc2_ptr = void (WINAPIV*)(struct US::CArray<CLuaScript::_State>*, unsigned int);
            using US__CArrayAlloc2_clbk = void (WINAPIV*)(struct US::CArray<CLuaScript::_State>*, unsigned int, US__CArrayAlloc2_ptr);
            using US__CArrayctor_CArray4_ptr = void (WINAPIV*)(struct US::CArray<CLuaScript::_State>*);
            using US__CArrayctor_CArray4_clbk = void (WINAPIV*)(struct US::CArray<CLuaScript::_State>*, US__CArrayctor_CArray4_ptr);
            using US__CArrayGetAtPtr6_ptr = struct CLuaScript::_State* (WINAPIV*)(struct US::CArray<CLuaScript::_State>*, unsigned int);
            using US__CArrayGetAtPtr6_clbk = struct CLuaScript::_State* (WINAPIV*)(struct US::CArray<CLuaScript::_State>*, unsigned int, US__CArrayGetAtPtr6_ptr);
            using US__CArraydtor_CArray11_ptr = void (WINAPIV*)(struct US::CArray<CLuaScript::_State>*);
            using US__CArraydtor_CArray11_clbk = void (WINAPIV*)(struct US::CArray<CLuaScript::_State>*, US__CArraydtor_CArray11_ptr);
            
        }; // end namespace info
    }; // end namespace US
END_ATF_NAMESPACE
#include "US__CArray.hpp"


START_ATF_NAMESPACE
    namespace US
    {
        namespace info
        {
            using US__CArrayAlloc2_ptr = void (WINAPIV*)(struct US::CArray<CLuaCommandEx>*, unsigned int);
            using US__CArrayAlloc2_clbk = void (WINAPIV*)(struct US::CArray<CLuaCommandEx>*, unsigned int, US__CArrayAlloc2_ptr);
            using US__CArrayctor_CArray4_ptr = void (WINAPIV*)(struct US::CArray<CLuaCommandEx>*);
            using US__CArrayctor_CArray4_clbk = void (WINAPIV*)(struct US::CArray<CLuaCommandEx>*, US__CArrayctor_CArray4_ptr);
            using US__CArrayGetAtPtr6_ptr = struct CLuaCommandEx* (WINAPIV*)(struct US::CArray<CLuaCommandEx>*, unsigned int);
            using US__CArrayGetAtPtr6_clbk = struct CLuaCommandEx* (WINAPIV*)(struct US::CArray<CLuaCommandEx>*, unsigned int, US__CArrayGetAtPtr6_ptr);
            using US__CArrayGetIndex8_ptr = unsigned int (WINAPIV*)(struct US::CArray<CLuaCommandEx>*, struct CLuaCommandEx*);
            using US__CArrayGetIndex8_clbk = unsigned int (WINAPIV*)(struct US::CArray<CLuaCommandEx>*, struct CLuaCommandEx*, US__CArrayGetIndex8_ptr);
            using US__CArrayGetSize10_ptr = unsigned int (WINAPIV*)(struct US::CArray<CLuaCommandEx>*);
            using US__CArrayGetSize10_clbk = unsigned int (WINAPIV*)(struct US::CArray<CLuaCommandEx>*, US__CArrayGetSize10_ptr);
            using US__CArraydtor_CArray15_ptr = void (WINAPIV*)(struct US::CArray<CLuaCommandEx>*);
            using US__CArraydtor_CArray15_clbk = void (WINAPIV*)(struct US::CArray<CLuaCommandEx>*, US__CArraydtor_CArray15_ptr);
            
        }; // end namespace info
    }; // end namespace US
END_ATF_NAMESPACE
#include "US__CArray.hpp"


START_ATF_NAMESPACE
    namespace US
    {
        namespace info
        {
            using US__CArrayAlloc2_ptr = void (WINAPIV*)(struct US::CArray<CLuaCommandEx::_State>*, unsigned int);
            using US__CArrayAlloc2_clbk = void (WINAPIV*)(struct US::CArray<CLuaCommandEx::_State>*, unsigned int, US__CArrayAlloc2_ptr);
            using US__CArrayctor_CArray4_ptr = void (WINAPIV*)(struct US::CArray<CLuaCommandEx::_State>*);
            using US__CArrayctor_CArray4_clbk = void (WINAPIV*)(struct US::CArray<CLuaCommandEx::_State>*, US__CArrayctor_CArray4_ptr);
            using US__CArrayGetAtPtr6_ptr = struct CLuaCommandEx::_State* (WINAPIV*)(struct US::CArray<CLuaCommandEx::_State>*, unsigned int);
            using US__CArrayGetAtPtr6_clbk = struct CLuaCommandEx::_State* (WINAPIV*)(struct US::CArray<CLuaCommandEx::_State>*, unsigned int, US__CArrayGetAtPtr6_ptr);
            using US__CArraydtor_CArray11_ptr = void (WINAPIV*)(struct US::CArray<CLuaCommandEx::_State>*);
            using US__CArraydtor_CArray11_clbk = void (WINAPIV*)(struct US::CArray<CLuaCommandEx::_State>*, US__CArraydtor_CArray11_ptr);
            
        }; // end namespace info
    }; // end namespace US
END_ATF_NAMESPACE
#include "US__CArray.hpp"


START_ATF_NAMESPACE
    namespace US
    {
        namespace info
        {
            using US__CArrayAlloc2_ptr = void (WINAPIV*)(struct US::CArray<CLuaLooting_Novus_Item>*, unsigned int);
            using US__CArrayAlloc2_clbk = void (WINAPIV*)(struct US::CArray<CLuaLooting_Novus_Item>*, unsigned int, US__CArrayAlloc2_ptr);
            using US__CArrayctor_CArray4_ptr = void (WINAPIV*)(struct US::CArray<CLuaLooting_Novus_Item>*);
            using US__CArrayctor_CArray4_clbk = void (WINAPIV*)(struct US::CArray<CLuaLooting_Novus_Item>*, US__CArrayctor_CArray4_ptr);
            using US__CArrayGetAtPtr6_ptr = struct CLuaLooting_Novus_Item* (WINAPIV*)(struct US::CArray<CLuaLooting_Novus_Item>*, unsigned int);
            using US__CArrayGetAtPtr6_clbk = struct CLuaLooting_Novus_Item* (WINAPIV*)(struct US::CArray<CLuaLooting_Novus_Item>*, unsigned int, US__CArrayGetAtPtr6_ptr);
            using US__CArrayGetSize8_ptr = unsigned int (WINAPIV*)(struct US::CArray<CLuaLooting_Novus_Item>*);
            using US__CArrayGetSize8_clbk = unsigned int (WINAPIV*)(struct US::CArray<CLuaLooting_Novus_Item>*, US__CArrayGetSize8_ptr);
            using US__CArraydtor_CArray13_ptr = void (WINAPIV*)(struct US::CArray<CLuaLooting_Novus_Item>*);
            using US__CArraydtor_CArray13_clbk = void (WINAPIV*)(struct US::CArray<CLuaLooting_Novus_Item>*, US__CArraydtor_CArray13_ptr);
            
        }; // end namespace info
    }; // end namespace US
END_ATF_NAMESPACE
#include "US__CArray.hpp"


START_ATF_NAMESPACE
    namespace US
    {
        namespace info
        {
            using US__CArrayAlloc2_ptr = void (WINAPIV*)(struct US::CArray<CLuaLooting_Novus_Item::_State>*, unsigned int);
            using US__CArrayAlloc2_clbk = void (WINAPIV*)(struct US::CArray<CLuaLooting_Novus_Item::_State>*, unsigned int, US__CArrayAlloc2_ptr);
            using US__CArrayctor_CArray4_ptr = void (WINAPIV*)(struct US::CArray<CLuaLooting_Novus_Item::_State>*);
            using US__CArrayctor_CArray4_clbk = void (WINAPIV*)(struct US::CArray<CLuaLooting_Novus_Item::_State>*, US__CArrayctor_CArray4_ptr);
            using US__CArrayGetAtPtr6_ptr = struct CLuaLooting_Novus_Item::_State* (WINAPIV*)(struct US::CArray<CLuaLooting_Novus_Item::_State>*, unsigned int);
            using US__CArrayGetAtPtr6_clbk = struct CLuaLooting_Novus_Item::_State* (WINAPIV*)(struct US::CArray<CLuaLooting_Novus_Item::_State>*, unsigned int, US__CArrayGetAtPtr6_ptr);
            using US__CArraydtor_CArray11_ptr = void (WINAPIV*)(struct US::CArray<CLuaLooting_Novus_Item::_State>*);
            using US__CArraydtor_CArray11_clbk = void (WINAPIV*)(struct US::CArray<CLuaLooting_Novus_Item::_State>*, US__CArraydtor_CArray11_ptr);
            
        }; // end namespace info
    }; // end namespace US
END_ATF_NAMESPACE
#include "US__CArray.hpp"


START_ATF_NAMESPACE
    namespace US
    {
        namespace info
        {
            using US__CArrayAlloc2_ptr = void (WINAPIV*)(struct US::CArray<CLuaEventNode>*, unsigned int);
            using US__CArrayAlloc2_clbk = void (WINAPIV*)(struct US::CArray<CLuaEventNode>*, unsigned int, US__CArrayAlloc2_ptr);
            using US__CArrayctor_CArray4_ptr = void (WINAPIV*)(struct US::CArray<CLuaEventNode>*);
            using US__CArrayctor_CArray4_clbk = void (WINAPIV*)(struct US::CArray<CLuaEventNode>*, US__CArrayctor_CArray4_ptr);
            using US__CArrayGetAtPtr6_ptr = struct CLuaEventNode* (WINAPIV*)(struct US::CArray<CLuaEventNode>*, unsigned int);
            using US__CArrayGetAtPtr6_clbk = struct CLuaEventNode* (WINAPIV*)(struct US::CArray<CLuaEventNode>*, unsigned int, US__CArrayGetAtPtr6_ptr);
            using US__CArrayGetIndex8_ptr = unsigned int (WINAPIV*)(struct US::CArray<CLuaEventNode>*, struct CLuaEventNode*);
            using US__CArrayGetIndex8_clbk = unsigned int (WINAPIV*)(struct US::CArray<CLuaEventNode>*, struct CLuaEventNode*, US__CArrayGetIndex8_ptr);
            using US__CArrayGetSize10_ptr = unsigned int (WINAPIV*)(struct US::CArray<CLuaEventNode>*);
            using US__CArrayGetSize10_clbk = unsigned int (WINAPIV*)(struct US::CArray<CLuaEventNode>*, US__CArrayGetSize10_ptr);
            using US__CArraydtor_CArray15_ptr = void (WINAPIV*)(struct US::CArray<CLuaEventNode>*);
            using US__CArraydtor_CArray15_clbk = void (WINAPIV*)(struct US::CArray<CLuaEventNode>*, US__CArraydtor_CArray15_ptr);
            
        }; // end namespace info
    }; // end namespace US
END_ATF_NAMESPACE
#include "US__CArray.hpp"


START_ATF_NAMESPACE
    namespace US
    {
        namespace info
        {
            using US__CArrayAlloc2_ptr = void (WINAPIV*)(struct US::CArray<CLuaEventNode::_State>*, unsigned int);
            using US__CArrayAlloc2_clbk = void (WINAPIV*)(struct US::CArray<CLuaEventNode::_State>*, unsigned int, US__CArrayAlloc2_ptr);
            using US__CArrayctor_CArray4_ptr = void (WINAPIV*)(struct US::CArray<CLuaEventNode::_State>*);
            using US__CArrayctor_CArray4_clbk = void (WINAPIV*)(struct US::CArray<CLuaEventNode::_State>*, US__CArrayctor_CArray4_ptr);
            using US__CArrayGetAtPtr6_ptr = struct CLuaEventNode::_State* (WINAPIV*)(struct US::CArray<CLuaEventNode::_State>*, unsigned int);
            using US__CArrayGetAtPtr6_clbk = struct CLuaEventNode::_State* (WINAPIV*)(struct US::CArray<CLuaEventNode::_State>*, unsigned int, US__CArrayGetAtPtr6_ptr);
            using US__CArraydtor_CArray11_ptr = void (WINAPIV*)(struct US::CArray<CLuaEventNode::_State>*);
            using US__CArraydtor_CArray11_clbk = void (WINAPIV*)(struct US::CArray<CLuaEventNode::_State>*, US__CArraydtor_CArray11_ptr);
            
        }; // end namespace info
    }; // end namespace US
END_ATF_NAMESPACE
