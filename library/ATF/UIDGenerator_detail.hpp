// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "UIDGenerator_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::UIDGeneratorgetuid2_ptr UIDGeneratorgetuid2_next(nullptr);
        info::UIDGeneratorgetuid2_clbk UIDGeneratorgetuid2_user(nullptr);
        info::UIDGeneratorgetuid4_ptr UIDGeneratorgetuid4_next(nullptr);
        info::UIDGeneratorgetuid4_clbk UIDGeneratorgetuid4_user(nullptr);
        info::UIDGeneratortmuid6_ptr UIDGeneratortmuid6_next(nullptr);
        info::UIDGeneratortmuid6_clbk UIDGeneratortmuid6_user(nullptr);
        
        uint64_t UIDGeneratorgetuid2_wrapper(char n)
        {
           return UIDGeneratorgetuid2_user(n, UIDGeneratorgetuid2_next);
        };
        uint64_t UIDGeneratorgetuid4_wrapper(char n, char ncode)
        {
           return UIDGeneratorgetuid4_user(n, ncode, UIDGeneratorgetuid4_next);
        };
        void UIDGeneratortmuid6_wrapper(uint64_t uid, char* szBuf)
        {
           UIDGeneratortmuid6_user(uid, szBuf, UIDGeneratortmuid6_next);
        };
        
        hook_record UIDGenerator_functions[] = {
        {   (LPVOID)0x14043f130L,
            (LPVOID *)&UIDGeneratorgetuid2_user,
            (LPVOID *)&UIDGeneratorgetuid2_next,
            (LPVOID)cast_pointer_function(UIDGeneratorgetuid2_wrapper),
            (LPVOID)cast_pointer_function((uint64_t(*)(char))&UIDGenerator::getuid) },
        {   (LPVOID)0x14043f200L,
            (LPVOID *)&UIDGeneratorgetuid4_user,
            (LPVOID *)&UIDGeneratorgetuid4_next,
            (LPVOID)cast_pointer_function(UIDGeneratorgetuid4_wrapper),
            (LPVOID)cast_pointer_function((uint64_t(*)(char, char))&UIDGenerator::getuid) },
        {   (LPVOID)0x14043f2f0L,
            (LPVOID *)&UIDGeneratortmuid6_user,
            (LPVOID *)&UIDGeneratortmuid6_next,
            (LPVOID)cast_pointer_function(UIDGeneratortmuid6_wrapper),
            (LPVOID)cast_pointer_function((void(*)(uint64_t, char*))&UIDGenerator::tmuid) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
