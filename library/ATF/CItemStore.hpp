// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CMapData.hpp"
#include "_StoreList_fld.hpp"
#include "_base_fld.hpp"
#include "_buy_offer.hpp"
#include "_good_storage_info.hpp"
#include "_limit_amount_info.hpp"
#include "_limit_item_info.hpp"
#include "_sell_offer.hpp"
#include "_store_dummy.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 8)
    struct CItemStore
    {
        bool m_bLive;
        int m_nIndex;
        unsigned int m_dwSecIndex;
        char m_byNpcRaceCode;
        CMapData *m_pExistMap;
        _store_dummy *m_pDum;
        _StoreList_fld *m_pRec;
        int m_nStorageItemNum;
        _good_storage_info *m_pStorageItem;
        unsigned __int64 m_dwLimitInitTime;
        bool m_bDBDataCheck;
        unsigned int m_dwDBSerial;
        int m_nLimitStorageItemNum;
        _limit_item_info *m_pLimitStorageItem;
        bool m_bUpdate;
        unsigned int m_dwLastTradeDalant;
        unsigned int m_dwLastTradeGold;
        unsigned int m_dwLastTradePoint;
        unsigned int m_dwLastTradeActPoint[3];
    public:
        CItemStore()
        {
            using org_ptr = void (WINAPIV*)(struct CItemStore*);
            (org_ptr(0x140260630L))(this);
        };
        void ctor_CItemStore()
        {
            using org_ptr = void (WINAPIV*)(struct CItemStore*);
            (org_ptr(0x140260630L))(this);
        };
        float CalcBuyPrice(char byTableCode, uint16_t wItemIndex, char* pbyMoneyUnit)
        {
            using org_ptr = float (WINAPIV*)(struct CItemStore*, char, uint16_t, char*);
            return (org_ptr(0x140262600L))(this, byTableCode, wItemIndex, pbyMoneyUnit);
        };
        int CalcSecIndex(float x, float z)
        {
            using org_ptr = int (WINAPIV*)(struct CItemStore*, float, float);
            return (org_ptr(0x1402622b0L))(this, x, z);
        };
        int CalcSellPrice(int nGoodIndex, char* pbyMoneyUnit)
        {
            using org_ptr = int (WINAPIV*)(struct CItemStore*, int, char*);
            return (org_ptr(0x1402624b0L))(this, nGoodIndex, pbyMoneyUnit);
        };
        int GetLastTradeActPoint(char byActCode)
        {
            using org_ptr = int (WINAPIV*)(struct CItemStore*, char);
            return (org_ptr(0x140262220L))(this, byActCode);
        };
        int GetLastTradeDalant()
        {
            using org_ptr = int (WINAPIV*)(struct CItemStore*);
            return (org_ptr(0x1402621c0L))(this);
        };
        int GetLastTradeGold()
        {
            using org_ptr = int (WINAPIV*)(struct CItemStore*);
            return (org_ptr(0x1402621e0L))(this);
        };
        int GetLastTradePoint()
        {
            using org_ptr = int (WINAPIV*)(struct CItemStore*);
            return (org_ptr(0x140262200L))(this);
        };
        struct _limit_item_info* GetLimitItem(int nIndex)
        {
            using org_ptr = struct _limit_item_info* (WINAPIV*)(struct CItemStore*, int);
            return (org_ptr(0x140262a30L))(this, nIndex);
        };
        void GetLimitItemAmount(struct _limit_amount_info* pAmountInfo)
        {
            using org_ptr = void (WINAPIV*)(struct CItemStore*, struct _limit_amount_info*);
            (org_ptr(0x140262940L))(this, pAmountInfo);
        };
        char* GetNpcCode()
        {
            using org_ptr = char* (WINAPIV*)(struct CItemStore*);
            return (org_ptr(0x140262450L))(this);
        };
        bool GetNpcRaceCode(char* pbyRaceCode)
        {
            using org_ptr = bool (WINAPIV*)(struct CItemStore*, char*);
            return (org_ptr(0x140262380L))(this, pbyRaceCode);
        };
        struct _base_fld* GetNpcRecord()
        {
            using org_ptr = struct _base_fld* (WINAPIV*)(struct CItemStore*);
            return (org_ptr(0x140262400L))(this);
        };
        float* GetStorePos()
        {
            using org_ptr = float* (WINAPIV*)(struct CItemStore*);
            return (org_ptr(0x140262480L))(this);
        };
        bool Init(int nIndex, struct CMapData* pExistMap, struct _store_dummy* pDum, struct _base_fld* pRec)
        {
            using org_ptr = bool (WINAPIV*)(struct CItemStore*, int, struct CMapData*, struct _store_dummy*, struct _base_fld*);
            return (org_ptr(0x140260720L))(this, nIndex, pExistMap, pDum, pRec);
        };
        void InitLimitItemInfo()
        {
            using org_ptr = void (WINAPIV*)(struct CItemStore*);
            (org_ptr(0x1402626e0L))(this);
        };
        char IsBuy(char byOfferNum, struct _sell_offer* pOffer, float fDiscountRate, char byRace)
        {
            using org_ptr = char (WINAPIV*)(struct CItemStore*, char, struct _sell_offer*, float, char);
            return (org_ptr(0x140261c50L))(this, byOfferNum, pOffer, fDiscountRate, byRace);
        };
        char IsSell(char byOfferNum, struct _buy_offer* pOffer, unsigned int dwHasDalant, unsigned int dwHasGold, long double dHasPoint, unsigned int* dwHasActPoint, char* pbyActCode, float fDiscountRate, char byRace, char byGrade)
        {
            using org_ptr = char (WINAPIV*)(struct CItemStore*, char, struct _buy_offer*, unsigned int, unsigned int, long double, unsigned int*, char*, float, char, char);
            return (org_ptr(0x1402613b0L))(this, byOfferNum, pOffer, dwHasDalant, dwHasGold, dHasPoint, dwHasActPoint, pbyActCode, fDiscountRate, byRace, byGrade);
        };
        void SetLimitItemInitTime()
        {
            using org_ptr = void (WINAPIV*)(struct CItemStore*);
            (org_ptr(0x140262a70L))(this);
        };
        void SetZeroTradeMoney()
        {
            using org_ptr = void (WINAPIV*)(struct CItemStore*);
            (org_ptr(0x140262240L))(this);
        };
        void SubLimitItemNum(int nLimitItemIndex, int nSubNum)
        {
            using org_ptr = void (WINAPIV*)(struct CItemStore*, int, int);
            (org_ptr(0x1402628b0L))(this, nLimitItemIndex, nSubNum);
        };
        void UpdateLimitItemNum(bool bUpdate)
        {
            using org_ptr = void (WINAPIV*)(struct CItemStore*, bool);
            (org_ptr(0x140262890L))(this, bUpdate);
        };
        ~CItemStore()
        {
            using org_ptr = void (WINAPIV*)(struct CItemStore*);
            (org_ptr(0x140260680L))(this);
        };
        void dtor_CItemStore()
        {
            using org_ptr = void (WINAPIV*)(struct CItemStore*);
            (org_ptr(0x140260680L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
