// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CLogFile.hpp"
#include "CRFWorldDatabase.hpp"
#include "CUnmannedTraderLazyCleaner.hpp"
#include "CUnmannedTraderRegistItemInfo.hpp"
#include "CUnmannedTraderTradeInfo.hpp"
#include "_TRADE_DB_BASE.hpp"
#include "_a_trade_adjust_price_request_clzo.hpp"
#include "_a_trade_clear_item_request_clzo.hpp"
#include "_a_trade_reg_item_request_clzo.hpp"
#include "_unmannedtrader_buy_item_request_clzo.hpp"
#include "_unmannedtrader_re_regist_request_clzo.hpp"
#include "_unmannedtrader_search_list_request_clzo.hpp"


START_ATF_NAMESPACE
    struct CUnmannedTraderController
    {
        CLogFile *m_pkLogger;
        CLogFile *m_pkServiceLogger;
        CUnmannedTraderTradeInfo m_kTradeInfo;
        CUnmannedTraderLazyCleaner m_kLazyCleaner;
    public:
        void Buy(uint16_t wInx, struct _unmannedtrader_buy_item_request_clzo* pRequest)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, uint16_t, struct _unmannedtrader_buy_item_request_clzo*);
            (org_ptr(0x1401d4920L))(this, wInx, pRequest);
        };
        CUnmannedTraderController()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*);
            (org_ptr(0x14034c880L))(this);
        };
        void ctor_CUnmannedTraderController()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*);
            (org_ptr(0x14034c880L))(this);
        };
        void CancelRegist(uint16_t wInx, struct _a_trade_clear_item_request_clzo* pRequest)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, uint16_t, struct _a_trade_clear_item_request_clzo*);
            (org_ptr(0x1401d4810L))(this, wInx, pRequest);
        };
        bool CheatCancelRegist(uint16_t wInx, unsigned int dwOwnerSerial, char byNth)
        {
            using org_ptr = bool (WINAPIV*)(struct CUnmannedTraderController*, uint16_t, unsigned int, char);
            return (org_ptr(0x14029d760L))(this, wInx, dwOwnerSerial, byNth);
        };
        char CheckDBItemState(char byType, unsigned int dwRegistSerial, char* byState, char* byProcRet)
        {
            using org_ptr = char (WINAPIV*)(struct CUnmannedTraderController*, char, unsigned int, char*, char*);
            return (org_ptr(0x1403506c0L))(this, byType, dwRegistSerial, byState, byProcRet);
        };
        void ComleteLazyClean(char* pData)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, char*);
            (org_ptr(0x1402074d0L))(this, pData);
        };
        void CompleteBuy(char byRet, char* pLoadData)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, char, char*);
            (org_ptr(0x140207450L))(this, byRet, pLoadData);
        };
        void CompleteBuyComplete(char* pData)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, char*);
            (org_ptr(0x14034ee20L))(this, pData);
        };
        void CompleteBuyRollBack(char byRet, char* pLoadData)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, char, char*);
            (org_ptr(0x14034ecf0L))(this, byRet, pLoadData);
        };
        void CompleteCancelRegist(char byRet, char* pLoadData)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, char, char*);
            (org_ptr(0x1402073f0L))(this, byRet, pLoadData);
        };
        void CompleteCreate(uint16_t wInx)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, uint16_t);
            (org_ptr(0x140079d90L))(this, wInx);
        };
        void CompleteCreateNotifyTradeInfo(char byRace, uint16_t wInx)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, char, uint16_t);
            (org_ptr(0x140079e00L))(this, byRace, wInx);
        };
        void CompleteLogInCompete(char* pData)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, char*);
            (org_ptr(0x14034ef80L))(this, pData);
        };
        void CompleteReRegist(char* pLoadData)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, char*);
            (org_ptr(0x140207530L))(this, pLoadData);
        };
        void CompleteReRegistRollBack(char* pData)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, char*);
            (org_ptr(0x14034fbe0L))(this, pData);
        };
        void CompleteRegistItem(char byRet, char* pLoadData)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, char, char*);
            (org_ptr(0x140207330L))(this, byRet, pLoadData);
        };
        void CompleteReprice(char byRet, char* pLoadData)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, char, char*);
            (org_ptr(0x140207390L))(this, byRet, pLoadData);
        };
        void CompleteSelectBuyInfo(char byRet, char* pLoadData)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, char, char*);
            (org_ptr(0x14034f3f0L))(this, byRet, pLoadData);
        };
        void CompleteSelectReservedSchedule(char byRet, char* pLoadData)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, char, char*);
            (org_ptr(0x14034d4b0L))(this, byRet, pLoadData);
        };
        void CompleteSelectSearchList(char byDBRet, char byProcRet, char* pLoadData)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, char, char, char*);
            (org_ptr(0x1402c42f0L))(this, byDBRet, byProcRet, pLoadData);
        };
        void CompleteTimeOutCancelRegist(char byRet, char* pLoadData)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, char, char*);
            (org_ptr(0x14034f230L))(this, byRet, pLoadData);
        };
        void CompleteUpdateCheatRegistTime(char* pLoadData)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, char*);
            (org_ptr(0x14034ff60L))(this, pLoadData);
        };
        void CompleteUpdateState(char byRet, char* pLoadData)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, char, char*);
            (org_ptr(0x14034f0e0L))(this, byRet, pLoadData);
        };
        static void Destroy()
        {
            using org_ptr = void (WINAPIV*)();
            (org_ptr(0x14034cb60L))();
        };
        char GetEmptyRecordSerial(unsigned int* dwSerial, bool* pbRecordInserted)
        {
            using org_ptr = char (WINAPIV*)(struct CUnmannedTraderController*, unsigned int*, bool*);
            return (org_ptr(0x140350270L))(this, dwSerial, pbRecordInserted);
        };
        char GetMaxRegistCnt(uint16_t wInx, unsigned int dwSerial)
        {
            using org_ptr = char (WINAPIV*)(struct CUnmannedTraderController*, uint16_t, unsigned int);
            return (org_ptr(0x14007a1b0L))(this, wInx, dwSerial);
        };
        struct CUnmannedTraderRegistItemInfo* GetRegItemInfo(uint16_t wInx, unsigned int dwSerial)
        {
            using org_ptr = struct CUnmannedTraderRegistItemInfo* (WINAPIV*)(struct CUnmannedTraderController*, uint16_t, unsigned int);
            return (org_ptr(0x14007a210L))(this, wInx, dwSerial);
        };
        bool Init()
        {
            using org_ptr = bool (WINAPIV*)(struct CUnmannedTraderController*);
            return (org_ptr(0x14034cbe0L))(this);
        };
        bool InitLogger()
        {
            using org_ptr = bool (WINAPIV*)(struct CUnmannedTraderController*);
            return (org_ptr(0x14034fc50L))(this);
        };
        bool InsertDefalutRecord()
        {
            using org_ptr = bool (WINAPIV*)(struct CUnmannedTraderController*);
            return (org_ptr(0x140350610L))(this);
        };
        bool InsertStateRecord()
        {
            using org_ptr = bool (WINAPIV*)(struct CUnmannedTraderController*);
            return (org_ptr(0x140350320L))(this);
        };
        static struct CUnmannedTraderController* Instance()
        {
            using org_ptr = struct CUnmannedTraderController* (WINAPIV*)();
            return (org_ptr(0x14034caa0L))();
        };
        bool Load(uint16_t wInx, unsigned int dwSerial, struct _TRADE_DB_BASE* kInfo)
        {
            using org_ptr = bool (WINAPIV*)(struct CUnmannedTraderController*, uint16_t, unsigned int, struct _TRADE_DB_BASE*);
            return (org_ptr(0x140078c10L))(this, wInx, dwSerial, kInfo);
        };
        bool Load()
        {
            using org_ptr = bool (WINAPIV*)(struct CUnmannedTraderController*);
            return (org_ptr(0x14034ccb0L))(this);
        };
        void Log(char* fmt)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, char*);
            (org_ptr(0x1403501e0L))(this, fmt);
        };
        void LogOut(uint16_t wInx, unsigned int dwSerial)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, uint16_t, unsigned int);
            (org_ptr(0x14007a270L))(this, wInx, dwSerial);
        };
        void Loop()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*);
            (org_ptr(0x14034cd60L))(this);
        };
        void ModifyPrice(uint16_t wInx, struct _a_trade_adjust_price_request_clzo* pRequest)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, uint16_t, struct _a_trade_adjust_price_request_clzo*);
            (org_ptr(0x1401d4700L))(this, wInx, pRequest);
        };
        void ReRegist(uint16_t wInx, struct _unmannedtrader_re_regist_request_clzo* pRequest)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, uint16_t, struct _unmannedtrader_re_regist_request_clzo*);
            (org_ptr(0x1401d4b40L))(this, wInx, pRequest);
        };
        void Regist(uint16_t wInx, struct _a_trade_reg_item_request_clzo* pRequest)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, uint16_t, struct _a_trade_reg_item_request_clzo*);
            (org_ptr(0x1401d4550L))(this, wInx, pRequest);
        };
        void Search(uint16_t wInx, struct _unmannedtrader_search_list_request_clzo* pRequest)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*, uint16_t, struct _unmannedtrader_search_list_request_clzo*);
            (org_ptr(0x1401d4a30L))(this, wInx, pRequest);
        };
        char SelectBuy(char* pData)
        {
            using org_ptr = char (WINAPIV*)(struct CUnmannedTraderController*, char*);
            return (org_ptr(0x14034d520L))(this, pData);
        };
        char SelectSearchList(char* pData, struct CRFWorldDatabase* pkWorldDB, char* byProcRet)
        {
            using org_ptr = char (WINAPIV*)(struct CUnmannedTraderController*, char*, struct CRFWorldDatabase*, char*);
            return (org_ptr(0x14034dea0L))(this, pData, pkWorldDB, byProcRet);
        };
        char UpdateBuy(char* pData)
        {
            using org_ptr = char (WINAPIV*)(struct CUnmannedTraderController*, char*);
            return (org_ptr(0x14034d970L))(this, pData);
        };
        char UpdateBuyComplete(char* pData)
        {
            using org_ptr = char (WINAPIV*)(struct CUnmannedTraderController*, char*);
            return (org_ptr(0x14034e1c0L))(this, pData);
        };
        char UpdateBuyRollBack(char* pData)
        {
            using org_ptr = char (WINAPIV*)(struct CUnmannedTraderController*, char*);
            return (org_ptr(0x14034dd60L))(this, pData);
        };
        char UpdateCancelRegist(char* pData)
        {
            using org_ptr = char (WINAPIV*)(struct CUnmannedTraderController*, char*);
            return (org_ptr(0x14034d320L))(this, pData);
        };
        char UpdateCheatRegistTime(char* pData)
        {
            using org_ptr = char (WINAPIV*)(struct CUnmannedTraderController*, char*);
            return (org_ptr(0x14034ea30L))(this, pData);
        };
        bool UpdateClearDanglingOwnerRecord()
        {
            using org_ptr = bool (WINAPIV*)(struct CUnmannedTraderController*);
            return (org_ptr(0x1403505b0L))(this);
        };
        char UpdateItemState(char* pData)
        {
            using org_ptr = char (WINAPIV*)(struct CUnmannedTraderController*, char*);
            return (org_ptr(0x14034e100L))(this, pData);
        };
        char UpdateLazyClean(char* pData)
        {
            using org_ptr = char (WINAPIV*)(struct CUnmannedTraderController*, char*);
            return (org_ptr(0x140206a90L))(this, pData);
        };
        char UpdateLogInComplete(char* pData)
        {
            using org_ptr = char (WINAPIV*)(struct CUnmannedTraderController*, char*);
            return (org_ptr(0x14034e440L))(this, pData);
        };
        char UpdateRePrice(char* pData)
        {
            using org_ptr = char (WINAPIV*)(struct CUnmannedTraderController*, char*);
            return (org_ptr(0x14034d230L))(this, pData);
        };
        char UpdateReRegist(char* pData)
        {
            using org_ptr = char (WINAPIV*)(struct CUnmannedTraderController*, char*);
            return (org_ptr(0x14034e680L))(this, pData);
        };
        char UpdateReRegistRollBack(char* pData)
        {
            using org_ptr = char (WINAPIV*)(struct CUnmannedTraderController*, char*);
            return (org_ptr(0x14034eb40L))(this, pData);
        };
        char UpdateRegistItem(char* pData)
        {
            using org_ptr = char (WINAPIV*)(struct CUnmannedTraderController*, char*);
            return (org_ptr(0x14034cdd0L))(this, pData);
        };
        char UpdateTimeOutCancelRegist(char* pData)
        {
            using org_ptr = char (WINAPIV*)(struct CUnmannedTraderController*, char*);
            return (org_ptr(0x14034cfa0L))(this, pData);
        };
        ~CUnmannedTraderController()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*);
            (org_ptr(0x14034c930L))(this);
        };
        void dtor_CUnmannedTraderController()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderController*);
            (org_ptr(0x14034c930L))(this);
        };
    };
END_ATF_NAMESPACE
