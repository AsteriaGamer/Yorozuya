// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"


START_ATF_NAMESPACE
    namespace ATL
    {
        struct CFileTimeSpan
        {
            __int64 m_nSpan;
        public:
            CFileTimeSpan(struct CFileTimeSpan* span)
            {
                using org_ptr = void (WINAPIV*)(struct CFileTimeSpan*, struct CFileTimeSpan*);
                (org_ptr(0x1406735a0L))(this, span);
            };
            void ctor_CFileTimeSpan(struct CFileTimeSpan* span)
            {
                using org_ptr = void (WINAPIV*)(struct CFileTimeSpan*, struct CFileTimeSpan*);
                (org_ptr(0x1406735a0L))(this, span);
            };
            CFileTimeSpan(int64_t nSpan)
            {
                using org_ptr = void (WINAPIV*)(struct CFileTimeSpan*, int64_t);
                (org_ptr(0x1406735d0L))(this, nSpan);
            };
            void ctor_CFileTimeSpan(int64_t nSpan)
            {
                using org_ptr = void (WINAPIV*)(struct CFileTimeSpan*, int64_t);
                (org_ptr(0x1406735d0L))(this, nSpan);
            };
            CFileTimeSpan()
            {
                using org_ptr = void (WINAPIV*)(struct CFileTimeSpan*);
                (org_ptr(0x140673580L))(this);
            };
            void ctor_CFileTimeSpan()
            {
                using org_ptr = void (WINAPIV*)(struct CFileTimeSpan*);
                (org_ptr(0x140673580L))(this);
            };
            int64_t GetTimeSpan()
            {
                using org_ptr = int64_t (WINAPIV*)(struct CFileTimeSpan*);
                return (org_ptr(0x1406738b0L))(this);
            };
            void SetTimeSpan(int64_t nSpan)
            {
                using org_ptr = void (WINAPIV*)(struct CFileTimeSpan*, int64_t);
                (org_ptr(0x1406738d0L))(this, nSpan);
            };
        };
    }; // end namespace ATL
END_ATF_NAMESPACE
