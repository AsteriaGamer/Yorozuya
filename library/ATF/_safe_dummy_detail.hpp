// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_safe_dummy_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::_safe_dummySetDummy2_ptr _safe_dummySetDummy2_next(nullptr);
        static info::_safe_dummySetDummy2_clbk _safe_dummySetDummy2_user(nullptr);
        static info::_safe_dummyctor__safe_dummy4_ptr _safe_dummyctor__safe_dummy4_next(nullptr);
        static info::_safe_dummyctor__safe_dummy4_clbk _safe_dummyctor__safe_dummy4_user(nullptr);
        
        static bool _safe_dummySetDummy2_wrapper(struct _safe_dummy* _this, struct _dummy_position* pDumPos)
        {
           return _safe_dummySetDummy2_user(_this, pDumPos, _safe_dummySetDummy2_next);
        };
        static void _safe_dummyctor__safe_dummy4_wrapper(struct _safe_dummy* _this)
        {
           _safe_dummyctor__safe_dummy4_user(_this, _safe_dummyctor__safe_dummy4_next);
        };
        
        static hook_record _safe_dummy_functions[] = {
        {   (LPVOID)0x140189bf0L,
            (LPVOID *)&_safe_dummySetDummy2_user,
            (LPVOID *)&_safe_dummySetDummy2_next,
            (LPVOID)cast_pointer_function(_safe_dummySetDummy2_wrapper),
            (LPVOID)cast_pointer_function((bool(_safe_dummy::*)(struct _dummy_position*))&_safe_dummy::SetDummy) },
        {   (LPVOID)0x140189bd0L,
            (LPVOID *)&_safe_dummyctor__safe_dummy4_user,
            (LPVOID *)&_safe_dummyctor__safe_dummy4_next,
            (LPVOID)cast_pointer_function(_safe_dummyctor__safe_dummy4_wrapper),
            (LPVOID)cast_pointer_function((void(_safe_dummy::*)())&_safe_dummy::ctor__safe_dummy) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
