// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CNationSettingFactoryES_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::CNationSettingFactoryESctor_CNationSettingFactoryES2_ptr CNationSettingFactoryESctor_CNationSettingFactoryES2_next(nullptr);
        static info::CNationSettingFactoryESctor_CNationSettingFactoryES2_clbk CNationSettingFactoryESctor_CNationSettingFactoryES2_user(nullptr);
        static info::CNationSettingFactoryESCreate4_ptr CNationSettingFactoryESCreate4_next(nullptr);
        static info::CNationSettingFactoryESCreate4_clbk CNationSettingFactoryESCreate4_user(nullptr);
        
        static void CNationSettingFactoryESctor_CNationSettingFactoryES2_wrapper(struct CNationSettingFactoryES* _this)
        {
           CNationSettingFactoryESctor_CNationSettingFactoryES2_user(_this, CNationSettingFactoryESctor_CNationSettingFactoryES2_next);
        };
        static struct CNationSettingData* CNationSettingFactoryESCreate4_wrapper(struct CNationSettingFactoryES* _this, int iNationCode, char* szNationCodeStr, bool bServiceMode)
        {
           return CNationSettingFactoryESCreate4_user(_this, iNationCode, szNationCodeStr, bServiceMode, CNationSettingFactoryESCreate4_next);
        };
        
        static hook_record CNationSettingFactoryES_functions[] = {
        {   (LPVOID)0x140219880L,
            (LPVOID *)&CNationSettingFactoryESctor_CNationSettingFactoryES2_user,
            (LPVOID *)&CNationSettingFactoryESctor_CNationSettingFactoryES2_next,
            (LPVOID)cast_pointer_function(CNationSettingFactoryESctor_CNationSettingFactoryES2_wrapper),
            (LPVOID)cast_pointer_function((void(CNationSettingFactoryES::*)())&CNationSettingFactoryES::ctor_CNationSettingFactoryES) },
        {   (LPVOID)0x140231c30L,
            (LPVOID *)&CNationSettingFactoryESCreate4_user,
            (LPVOID *)&CNationSettingFactoryESCreate4_next,
            (LPVOID)cast_pointer_function(CNationSettingFactoryESCreate4_wrapper),
            (LPVOID)cast_pointer_function((struct CNationSettingData*(CNationSettingFactoryES::*)(int, char*, bool))&CNationSettingFactoryES::Create) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
