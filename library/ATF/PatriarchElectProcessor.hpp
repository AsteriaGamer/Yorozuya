// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CLogFile.hpp"
#include "CPlayer.hpp"
#include "Cmd.hpp"
#include "ElectProcessor.hpp"
#include "_DB_QRY_SYN_DATA.hpp"
#include "_candidate_info.hpp"


START_ATF_NAMESPACE
    struct PatriarchElectProcessor
    {
        unsigned int m_dwNonvoteCnt[3];
        unsigned int m_dwTotalVoteCnt[3];
        unsigned int m_dwHighGradeNum[3];
        ElectProcessor::ProcessorType _eProcessType;
        ElectProcessor *_kRunningProcessor;
        ElectProcessor *_kProcessor[6];
        bool _bTimeCheck;
        bool _bInitProce;
        unsigned int _dwNextCheckTime;
        unsigned int _dwNextCheckDay;
        unsigned int _dwNextScoreUpdateTime;
        unsigned int _dwElectSerial;
        unsigned int _dwCurrPatriarchElectSerial;
        CLogFile _kSysLog;
    public:
        bool CheatClearPatriarch()
        {
            using org_ptr = bool (WINAPIV*)(struct PatriarchElectProcessor*);
            return (org_ptr(0x1402bc120L))(this);
        };
        bool CheatSetPatriarch(struct CPlayer* pOne, _candidate_info::ClassType eClass)
        {
            using org_ptr = bool (WINAPIV*)(struct PatriarchElectProcessor*, struct CPlayer*, _candidate_info::ClassType);
            return (org_ptr(0x1402bc3c0L))(this, pOne, eClass);
        };
        void CompleteCheckInvalidChar(char byProc)
        {
            using org_ptr = void (WINAPIV*)(struct PatriarchElectProcessor*, char);
            (org_ptr(0x1402bc7d0L))(this, byProc);
        };
        void CompleteInsertElect()
        {
            using org_ptr = void (WINAPIV*)(struct PatriarchElectProcessor*);
            (org_ptr(0x1402bb800L))(this);
        };
        void CompleteInsertPatriarch(struct _DB_QRY_SYN_DATA* pData)
        {
            using org_ptr = void (WINAPIV*)(struct PatriarchElectProcessor*, struct _DB_QRY_SYN_DATA*);
            (org_ptr(0x1402bbc40L))(this, pData);
        };
        void CompleteItemChargeRefund(struct _DB_QRY_SYN_DATA* pData)
        {
            using org_ptr = void (WINAPIV*)(struct PatriarchElectProcessor*, struct _DB_QRY_SYN_DATA*);
            (org_ptr(0x1402bbba0L))(this, pData);
        };
        void CompleteRequestRefund(struct _DB_QRY_SYN_DATA* pData)
        {
            using org_ptr = void (WINAPIV*)(struct PatriarchElectProcessor*, struct _DB_QRY_SYN_DATA*);
            (org_ptr(0x1402bb9a0L))(this, pData);
        };
        void CompleteSelectElect()
        {
            using org_ptr = void (WINAPIV*)(struct PatriarchElectProcessor*);
            (org_ptr(0x1402bb860L))(this);
        };
        void Destroy()
        {
            using org_ptr = void (WINAPIV*)(struct PatriarchElectProcessor*);
            (org_ptr(0x1402ba5a0L))(this);
        };
        bool Doit(Cmd eCmd, struct CPlayer* pOne, char* pdata)
        {
            using org_ptr = bool (WINAPIV*)(struct PatriarchElectProcessor*, Cmd, struct CPlayer*, char*);
            return (org_ptr(0x1402badf0L))(this, eCmd, pOne, pdata);
        };
        bool ForceChangeProcessor(ElectProcessor::ProcessorType eProc)
        {
            using org_ptr = bool (WINAPIV*)(struct PatriarchElectProcessor*, ElectProcessor::ProcessorType);
            return (org_ptr(0x1402ba830L))(this, eProc);
        };
        unsigned int GetCurrPatriarchElectSerial()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct PatriarchElectProcessor*);
            return (org_ptr(0x14007e0e0L))(this);
        };
        unsigned int GetElectSerial()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct PatriarchElectProcessor*);
            return (org_ptr(0x140208270L))(this);
        };
        ElectProcessor::ProcessorType GetProcessorType()
        {
            using org_ptr = ElectProcessor::ProcessorType (WINAPIV*)(struct PatriarchElectProcessor*);
            return (org_ptr(0x140208290L))(this);
        };
        bool GetTimeCheck()
        {
            using org_ptr = bool (WINAPIV*)(struct PatriarchElectProcessor*);
            return (org_ptr(0x1402c0510L))(this);
        };
        bool InitProcess()
        {
            using org_ptr = bool (WINAPIV*)(struct PatriarchElectProcessor*);
            return (org_ptr(0x1402ba630L))(this);
        };
        bool Initialize()
        {
            using org_ptr = bool (WINAPIV*)(struct PatriarchElectProcessor*);
            return (org_ptr(0x1402b9f10L))(this);
        };
        int Insert_Elect()
        {
            using org_ptr = int (WINAPIV*)(struct PatriarchElectProcessor*);
            return (org_ptr(0x1402bb430L))(this);
        };
        int Insert_PatrirchItemChargeRefund(char* pData)
        {
            using org_ptr = int (WINAPIV*)(struct PatriarchElectProcessor*, char*);
            return (org_ptr(0x1402bc040L))(this, pData);
        };
        static struct PatriarchElectProcessor* Instance()
        {
            using org_ptr = struct PatriarchElectProcessor* (WINAPIV*)();
            return (org_ptr(0x1402ba4d0L))();
        };
        bool LoadDatabae()
        {
            using org_ptr = bool (WINAPIV*)(struct PatriarchElectProcessor*);
            return (org_ptr(0x1402bb290L))(this);
        };
        bool LoadElectState()
        {
            using org_ptr = bool (WINAPIV*)(struct PatriarchElectProcessor*);
            return (org_ptr(0x1402bb510L))(this);
        };
        void Loop()
        {
            using org_ptr = void (WINAPIV*)(struct PatriarchElectProcessor*);
            (org_ptr(0x1402ba770L))(this);
        };
        PatriarchElectProcessor()
        {
            using org_ptr = void (WINAPIV*)(struct PatriarchElectProcessor*);
            (org_ptr(0x1402b9cc0L))(this);
        };
        void ctor_PatriarchElectProcessor()
        {
            using org_ptr = void (WINAPIV*)(struct PatriarchElectProcessor*);
            (org_ptr(0x1402b9cc0L))(this);
        };
        void PushDQSCheckInvalidChar()
        {
            using org_ptr = void (WINAPIV*)(struct PatriarchElectProcessor*);
            (org_ptr(0x1402bc870L))(this);
        };
        int Request_Refund(char* pData)
        {
            using org_ptr = int (WINAPIV*)(struct PatriarchElectProcessor*, char*);
            return (org_ptr(0x1402bb8b0L))(this, pData);
        };
        void SendMsg_ConnectNewUser(struct CPlayer* pOne)
        {
            using org_ptr = void (WINAPIV*)(struct PatriarchElectProcessor*, struct CPlayer*);
            (org_ptr(0x1402bb050L))(this, pOne);
        };
        void SendMsg_ResultCode(unsigned int n, char byCode)
        {
            using org_ptr = void (WINAPIV*)(struct PatriarchElectProcessor*, unsigned int, char);
            (org_ptr(0x1402bafb0L))(this, n, byCode);
        };
        void SetCurrPatriarchElectSerial(unsigned int dwSerial)
        {
            using org_ptr = void (WINAPIV*)(struct PatriarchElectProcessor*, unsigned int);
            (org_ptr(0x1404da440L))(this, dwSerial);
        };
        void SetTimeCheck(bool bFlag)
        {
            using org_ptr = void (WINAPIV*)(struct PatriarchElectProcessor*, bool);
            (org_ptr(0x14029d6d0L))(this, bFlag);
        };
        void TimeCheck(uint16_t wDayOfWeek, uint16_t wHour)
        {
            using org_ptr = void (WINAPIV*)(struct PatriarchElectProcessor*, uint16_t, uint16_t);
            (org_ptr(0x1402baab0L))(this, wDayOfWeek, wHour);
        };
        int Update_Elect()
        {
            using org_ptr = int (WINAPIV*)(struct PatriarchElectProcessor*);
            return (org_ptr(0x1402bb690L))(this);
        };
        ~PatriarchElectProcessor()
        {
            using org_ptr = void (WINAPIV*)(struct PatriarchElectProcessor*);
            (org_ptr(0x1402b9df0L))(this);
        };
        void dtor_PatriarchElectProcessor()
        {
            using org_ptr = void (WINAPIV*)(struct PatriarchElectProcessor*);
            (org_ptr(0x1402b9df0L))(this);
        };
    };
END_ATF_NAMESPACE
