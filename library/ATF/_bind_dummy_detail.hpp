// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_bind_dummy_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::_bind_dummySetDummy2_ptr _bind_dummySetDummy2_next(nullptr);
        info::_bind_dummySetDummy2_clbk _bind_dummySetDummy2_user(nullptr);
        info::_bind_dummyctor__bind_dummy4_ptr _bind_dummyctor__bind_dummy4_next(nullptr);
        info::_bind_dummyctor__bind_dummy4_clbk _bind_dummyctor__bind_dummy4_user(nullptr);
        
        bool _bind_dummySetDummy2_wrapper(struct _bind_dummy* _this, struct _dummy_position* pDumPos)
        {
           return _bind_dummySetDummy2_user(_this, pDumPos, _bind_dummySetDummy2_next);
        };
        void _bind_dummyctor__bind_dummy4_wrapper(struct _bind_dummy* _this)
        {
           _bind_dummyctor__bind_dummy4_user(_this, _bind_dummyctor__bind_dummy4_next);
        };
        
        hook_record _bind_dummy_functions[] = {
        {   (LPVOID)0x140189470L,
            (LPVOID *)&_bind_dummySetDummy2_user,
            (LPVOID *)&_bind_dummySetDummy2_next,
            (LPVOID)cast_pointer_function(_bind_dummySetDummy2_wrapper),
            (LPVOID)cast_pointer_function((bool(_bind_dummy::*)(struct _dummy_position*))&_bind_dummy::SetDummy) },
        {   (LPVOID)0x140189450L,
            (LPVOID *)&_bind_dummyctor__bind_dummy4_user,
            (LPVOID *)&_bind_dummyctor__bind_dummy4_next,
            (LPVOID)cast_pointer_function(_bind_dummyctor__bind_dummy4_wrapper),
            (LPVOID)cast_pointer_function((void(_bind_dummy::*)())&_bind_dummy::ctor__bind_dummy) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
