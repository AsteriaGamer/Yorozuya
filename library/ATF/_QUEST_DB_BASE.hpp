// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"


START_ATF_NAMESPACE
    struct _QUEST_DB_BASE
    {
        struct  _LIST
        {
            char byQuestType;
            unsigned __int16 wIndex;
            unsigned __int16 wNum[3];
            unsigned int dwPassSec;
        public:
            void Init()
            {
                using org_ptr = void (WINAPIV*)(struct _LIST*);
                (org_ptr(0x1400768f0L))(this);
            };
            _LIST()
            {
                using org_ptr = void (WINAPIV*)(struct _LIST*);
                (org_ptr(0x1400768a0L))(this);
            };
            void ctor__LIST()
            {
                using org_ptr = void (WINAPIV*)(struct _LIST*);
                (org_ptr(0x1400768a0L))(this);
            };
        };
        struct  _NPC_QUEST_HISTORY
        {
            char szQuestCode[8];
            int nEventNo;
            char byLevel;
            unsigned int dwEventEndTime;
        public:
            void Init()
            {
                using org_ptr = void (WINAPIV*)(struct _NPC_QUEST_HISTORY*);
                (org_ptr(0x1400769d0L))(this);
            };
            _NPC_QUEST_HISTORY()
            {
                using org_ptr = void (WINAPIV*)(struct _NPC_QUEST_HISTORY*);
                (org_ptr(0x140076980L))(this);
            };
            void ctor__NPC_QUEST_HISTORY()
            {
                using org_ptr = void (WINAPIV*)(struct _NPC_QUEST_HISTORY*);
                (org_ptr(0x140076980L))(this);
            };
        };
        struct  _START_NPC_QUEST_HISTORY
        {
            char szQuestCode[64];
            char byLevel;
            _SYSTEMTIME tmStartTime;
            __int64 nEndTime;
        public:
            void Init()
            {
                using org_ptr = void (WINAPIV*)(struct _START_NPC_QUEST_HISTORY*);
                (org_ptr(0x1400cfcf0L))(this);
            };
            _START_NPC_QUEST_HISTORY()
            {
                using org_ptr = void (WINAPIV*)(struct _START_NPC_QUEST_HISTORY*);
                (org_ptr(0x1400cfca0L))(this);
            };
            void ctor__START_NPC_QUEST_HISTORY()
            {
                using org_ptr = void (WINAPIV*)(struct _START_NPC_QUEST_HISTORY*);
                (org_ptr(0x1400cfca0L))(this);
            };
        };
        _LIST m_List[30];
        _NPC_QUEST_HISTORY m_History[70];
        unsigned int dwListCnt;
        _START_NPC_QUEST_HISTORY *m_StartHistory;
    public:
        void Init()
        {
            using org_ptr = void (WINAPIV*)(struct _QUEST_DB_BASE*);
            (org_ptr(0x140076a30L))(this);
        };
        _QUEST_DB_BASE()
        {
            using org_ptr = void (WINAPIV*)(struct _QUEST_DB_BASE*);
            (org_ptr(0x140076800L))(this);
        };
        void ctor__QUEST_DB_BASE()
        {
            using org_ptr = void (WINAPIV*)(struct _QUEST_DB_BASE*);
            (org_ptr(0x140076800L))(this);
        };
    };
END_ATF_NAMESPACE
