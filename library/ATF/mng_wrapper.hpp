// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "AINetFile_registry.hpp"
#include "AINetFtp_registry.hpp"
#include "AINet_registry.hpp"
#include "AP_BatterySlot_registry.hpp"
#include "ATL__CAtlException_registry.hpp"
#include "ATL__CCRTAllocator_registry.hpp"
#include "ATL__CComBSTR_registry.hpp"
#include "ATL__CFileTimeSpan_registry.hpp"
#include "ATL__CFileTime_registry.hpp"
#include "ATL__CTimeSpan_registry.hpp"
#include "ATL__CTime_registry.hpp"
#include "ATL__CTraceCategory_registry.hpp"
#include "ATL__CTraceFileAndLineInfo_registry.hpp"
#include "ATL__CTrace_registry.hpp"
#include "AggroCaculateData_registry.hpp"
#include "Atmosphere_registry.hpp"
#include "AutoMineMachineMng_registry.hpp"
#include "AutoMineMachine_registry.hpp"
#include "AutominePersonalMgr_registry.hpp"
#include "AutominePersonal_registry.hpp"
#include "BASE_HACKSHEILD_PARAM_registry.hpp"
#include "BNetwork_registry.hpp"
#include "BossSchedule_Map_registry.hpp"
#include "BossSchedule_TBL_registry.hpp"
#include "BossSchedule_registry.hpp"
#include "C24Timer_registry.hpp"
#include "CAITimer_registry.hpp"
#include "CActionPointSystemMgr_registry.hpp"
#include "CAggroNode_registry.hpp"
#include "CAlpha_registry.hpp"
#include "CAniCamera_registry.hpp"
#include "CAnimus_registry.hpp"
#include "CAsyncLogger_registry.hpp"
#include "CAsyncLogBufferList_registry.hpp"
#include "CAsyncLogBuffer_registry.hpp"
#include "CAsyncLogInfo_registry.hpp"
#include "CAtlAllocator_registry.hpp"
#include "CAtlTraceCategory_registry.hpp"
#include "CAtlTraceModuleInfo_registry.hpp"
#include "CAtlTraceModule_registry.hpp"
#include "CAtlTraceProcess_registry.hpp"
#include "CAtlTraceSettings_registry.hpp"
#include "CAttack_registry.hpp"
#include "CBattleTournamentInfo_registry.hpp"
#include "CBillingBR_registry.hpp"
#include "CBillingCN_registry.hpp"
#include "CBillingID_registry.hpp"
#include "CBillingJP_registry.hpp"
#include "CBillingKR_registry.hpp"
#include "CBillingManager_registry.hpp"
#include "CBillingNULL_registry.hpp"
#include "CBillingPH_registry.hpp"
#include "CBillingRU_registry.hpp"
#include "CBilling_registry.hpp"
#include "CBossMonsterScheduleSystem_registry.hpp"
#include "CBsp_registry.hpp"
#include "CCashDBWorkManager_registry.hpp"
#include "CCashDbWorkerBR_registry.hpp"
#include "CCashDbWorkerCN_registry.hpp"
#include "CCashDbWorkerES_registry.hpp"
#include "CCashDbWorkerGB_registry.hpp"
#include "CCashDbWorkerID_registry.hpp"
#include "CCashDbWorkerJP_registry.hpp"
#include "CCashDbWorkerKR_registry.hpp"
#include "CCashDbWorkerNULL_registry.hpp"
#include "CCashDbWorkerPH_registry.hpp"
#include "CCashDbWorkerRU_registry.hpp"
#include "CCashDbWorkerTH_registry.hpp"
#include "CCashDbWorkerTW_registry.hpp"
#include "CCashDbWorkerUS_registry.hpp"
#include "CCharacter_registry.hpp"
#include "CChatStealSystem_registry.hpp"
#include "CCheckSumBaseConverter_registry.hpp"
#include "CCheckSumCharacAccountTrunkData_registry.hpp"
#include "CCheckSumCharacTrunkConverter_registry.hpp"
#include "CCheckSumGuildConverter_registry.hpp"
#include "CCheckSumGuildData_registry.hpp"
#include "CCheckSum_registry.hpp"
#include "CChiNetworkEX_registry.hpp"
#include "CCircleZone_registry.hpp"
#include "CClientDC_registry.hpp"
#include "CCollLineDraw_registry.hpp"
#include "CCommandLineInfo_registry.hpp"
#include "CConnNumPHMgr_registry.hpp"
#include "CCouponMgr_registry.hpp"
#include "CCryptParamCrete_registry.hpp"
#include "CCryptParam_registry.hpp"
#include "CCryptor_registry.hpp"
#include "CD3DApplication_registry.hpp"
#include "CD3DArcBall_registry.hpp"
#include "CD3DCamera_registry.hpp"
#include "CDarkHoleChannel_registry.hpp"
#include "CDarkHoleDungeonQuestSetup_registry.hpp"
#include "CDarkHoleDungeonQuest_registry.hpp"
#include "CDarkHole_registry.hpp"
#include "CDummyDraw_registry.hpp"
#include "CDummyPosTable_registry.hpp"
#include "CEngNetworkBillEX_registry.hpp"
#include "CEnglandBillingMgr_registry.hpp"
#include "CEntity_registry.hpp"
#include "CEquipItemSFAgent_registry.hpp"
#include "CEventLootTable_registry.hpp"
#include "CExchangeEvent_registry.hpp"
#include "CExtDummy_registry.hpp"
#include "CExtPotionBuf_registry.hpp"
#include "CFPS_registry.hpp"
#include "CFont_registry.hpp"
#include "CGameObject_registry.hpp"
#include "CGdiObject_registry.hpp"
#include "CGoldenBoxItemMgr_registry.hpp"
#include "CGravityStoneRegener_registry.hpp"
#include "CGravityStone_registry.hpp"
#include "CGuardTower_registry.hpp"
#include "CGuildBattleController_registry.hpp"
#include "CGuildList_registry.hpp"
#include "CGuildMasterEffect_registry.hpp"
#include "CGuildRanking_registry.hpp"
#include "CGuildRoomInfo_registry.hpp"
#include "CGuildRoomSystem_registry.hpp"
#include "CGuild_registry.hpp"
#include "CHackShieldExSystem_registry.hpp"
#include "CHolyKeeper_registry.hpp"
#include "CHolyScheduleData_registry.hpp"
#include "CHolyStoneSaveData_registry.hpp"
#include "CHolyStoneSystemDataMgr_registry.hpp"
#include "CHolyStoneSystem_registry.hpp"
#include "CHolyStone_registry.hpp"
#include "CHonorGuild_registry.hpp"
#include "CIndexBuffer_registry.hpp"
#include "CIndexList_registry.hpp"
#include "CIniFile_registry.hpp"
#include "CItemBox_registry.hpp"
#include "CItemDropMgr_registry.hpp"
#include "CItemLootTable_registry.hpp"
#include "CItemStoreManager_registry.hpp"
#include "CItemStore_registry.hpp"
#include "CItemUpgradeTable_registry.hpp"
#include "CLevel_registry.hpp"
#include "CLogFile_registry.hpp"
#include "CLogTypeDBTaskManager_registry.hpp"
#include "CLogTypeDBTaskPool_registry.hpp"
#include "CLogTypeDBTask_registry.hpp"
#include "CLootingMgr_registry.hpp"
#include "CLuaCommandEx_registry.hpp"
#include "CLuaCommand_registry.hpp"
#include "CLuaEventMgr_registry.hpp"
#include "CLuaEventNode_registry.hpp"
#include "CLuaLootingMgr_registry.hpp"
#include "CLuaLooting_Novus_Item_registry.hpp"
#include "CLuaScriptMgr_registry.hpp"
#include "CLuaScript_registry.hpp"
#include "CLuaSignalReActor_registry.hpp"
#include "CMainThread_registry.hpp"
#include "CMapDataTable_registry.hpp"
#include "CMapData_registry.hpp"
#include "CMapExtend_registry.hpp"
#include "CMapItemStoreList_registry.hpp"
#include "CMapOperation_registry.hpp"
#include "CMerchant_registry.hpp"
#include "CMergeFileManager_registry.hpp"
#include "CMergeFile_registry.hpp"
#include "CMgrAccountLobbyHistory_registry.hpp"
#include "CMgrAvatorItemHistory_registry.hpp"
#include "CMgrAvatorLvHistory_registry.hpp"
#include "CMgrAvatorQuestHistory_registry.hpp"
#include "CMgrGuildHistory_registry.hpp"
#include "CMoneySupplyMgr_registry.hpp"
#include "CMonsterAI_registry.hpp"
#include "CMonsterAggroMgr_registry.hpp"
#include "CMonsterAttack_registry.hpp"
#include "CMonsterEventRespawn_registry.hpp"
#include "CMonsterEventSet_registry.hpp"
#include "CMonsterHelper_registry.hpp"
#include "CMonsterHierarchy_registry.hpp"
#include "CMonsterSPGroupTable_registry.hpp"
#include "CMonsterSkillPool_registry.hpp"
#include "CMonsterSkill_registry.hpp"
#include "CMonster_registry.hpp"
#include "CMoveMapLimitEnviromentValues_registry.hpp"
#include "CMoveMapLimitInfoList_registry.hpp"
#include "CMoveMapLimitInfoPortal_registry.hpp"
#include "CMoveMapLimitInfo_registry.hpp"
#include "CMoveMapLimitManager_registry.hpp"
#include "CMoveMapLimitRightInfoList_registry.hpp"
#include "CMoveMapLimitRightInfo_registry.hpp"
#include "CMoveMapLimitRightPortal_registry.hpp"
#include "CMoveMapLimitRight_registry.hpp"
#include "CMsgData_registry.hpp"
#include "CFrameRate_registry.hpp"
#include "CMsgProcess_registry.hpp"
#include "CMyCriticalSection_registry.hpp"
#include "CMyTimer_registry.hpp"
#include "CNationCodeStrTable_registry.hpp"
#include "CNationCodeStr_registry.hpp"
#include "CNationSettingDataBR_registry.hpp"
#include "CNationSettingDataCN_registry.hpp"
#include "CNationSettingDataES_registry.hpp"
#include "CNationSettingDataGB_registry.hpp"
#include "CNationSettingDataID_registry.hpp"
#include "CNationSettingDataJP_registry.hpp"
#include "CNationSettingDataKR_registry.hpp"
#include "CNationSettingDataNULL_registry.hpp"
#include "CNationSettingDataPH_registry.hpp"
#include "CNationSettingDataRU_registry.hpp"
#include "CNationSettingDataTH_registry.hpp"
#include "CNationSettingDataTW_registry.hpp"
#include "CNationSettingDataUS_registry.hpp"
#include "CNationSettingData_registry.hpp"
#include "CNationSettingFactoryBR_registry.hpp"
#include "CNationSettingFactoryCN_registry.hpp"
#include "CNationSettingFactoryES_registry.hpp"
#include "CNationSettingFactoryGB_registry.hpp"
#include "CNationSettingFactoryGroup_registry.hpp"
#include "CNationSettingFactoryID_registry.hpp"
#include "CNationSettingFactoryJP_registry.hpp"
#include "CNationSettingFactoryKR_registry.hpp"
#include "CNationSettingFactoryPH_registry.hpp"
#include "CNationSettingFactoryRU_registry.hpp"
#include "CNationSettingFactoryTH_registry.hpp"
#include "CNationSettingFactoryTW_registry.hpp"
#include "CNationSettingFactoryUS_registry.hpp"
#include "CNationSettingFactory_registry.hpp"
#include "CNationSettingManager_registry.hpp"
#include "CNetCriticalSection_registry.hpp"
#include "CNetFrameRate_registry.hpp"
#include "CNetIndexList_registry.hpp"
#include "CNetProcess_registry.hpp"
#include "CNetSocket_registry.hpp"
#include "CNetTimer_registry.hpp"
#include "CNetWorking_registry.hpp"
#include "CNetworkEX_registry.hpp"
#include "CNetwork_registry.hpp"
#include "CNotifyNotifyRaceLeaderSownerUTaxrate_registry.hpp"
#include "CNuclearBombMgr_registry.hpp"
#include "CNuclearBomb_registry.hpp"
#include "CObjectList_registry.hpp"
#include "CObject_registry.hpp"
#include "COreAmountMgr_registry.hpp"
#include "COreCuttingTable_registry.hpp"
#include "CPaintDC_registry.hpp"
#include "CParkingUnit_registry.hpp"
#include "CParticle_registry.hpp"
#include "CPartyModeKillMonsterExpNotify_registry.hpp"
#include "CPartyPlayer_registry.hpp"
#include "CPathFinder_registry.hpp"
#include "CPathMgr_registry.hpp"
#include "CPcBangFavor_registry.hpp"
#include "CPlayMP3_registry.hpp"
#include "CPlayerAttack_registry.hpp"
#include "CPlayerDB_registry.hpp"
#include "CPlayer_registry.hpp"
#include "CPoint_registry.hpp"
#include "CPostData_registry.hpp"
#include "CPostReturnStorage_registry.hpp"
#include "CPostStorage_registry.hpp"
#include "CPostSystemManager_registry.hpp"
#include "CPotionMgr_registry.hpp"
#include "CPotionParam_registry.hpp"
#include "CProcessThread_registry.hpp"
#include "CPvpCashMng_registry.hpp"
#include "CPvpCashPoint_registry.hpp"
#include "CPvpOrderView_registry.hpp"
#include "CPvpPointLimiter_registry.hpp"
#include "CPvpUserAndGuildRankingSystem_registry.hpp"
#include "CPvpUserRankingInfo_registry.hpp"
#include "CPvpUserRankingTargetUserList_registry.hpp"
#include "CQuestMgr_registry.hpp"
#include "CR3Font_registry.hpp"
#include "CRFCashItemDatabase_registry.hpp"
#include "CRFDBItemLog_registry.hpp"
#include "CRFMonsterAIMgr_registry.hpp"
#include "CRFNewDatabase_registry.hpp"
#include "CRFWorldDatabase_registry.hpp"
#include "CRaceBossMsgController_registry.hpp"
#include "CRaceBossWinRate_registry.hpp"
#include "CRaceBuffByHolyQuestProcedure_registry.hpp"
#include "CRaceBuffHolyQuestResultInfo_registry.hpp"
#include "CRaceBuffInfoByHolyQuestList_registry.hpp"
#include "CRaceBuffInfoByHolyQuest_registry.hpp"
#include "CRaceBuffInfoByHolyQuestfGroup_registry.hpp"
#include "CRaceBuffManager_registry.hpp"
#include "CRadarItemMgr_registry.hpp"
#include "CRealMoveRequestDelayChecker_registry.hpp"
#include "CRecallEffectController_registry.hpp"
#include "CRecallRequest_registry.hpp"
#include "CRecordData_registry.hpp"
#include "CRect_registry.hpp"
#include "CReturnGateController_registry.hpp"
#include "CReturnGateCreateParam_registry.hpp"
#include "CReturnGate_registry.hpp"
#include "CRtc_registry.hpp"
#include "CRusiaBillingMgr_registry.hpp"
#include "CSUItemSystem_registry.hpp"
#include "CSetItemEffect_registry.hpp"
#include "CSetItemType_registry.hpp"
#include "CSize_registry.hpp"
#include "CSkyBox_registry.hpp"
#include "CSprite_registry.hpp"
#include "CSurface_registry.hpp"
#include "CSyncCS_registry.hpp"
#include "CTakeOut_registry.hpp"
#include "CTalkCrystalCombineManager_registry.hpp"
#include "CTerm_registry.hpp"
#include "CTextureRender_registry.hpp"
#include "CTimer_registry.hpp"
#include "CToolCollisionFace_registry.hpp"
#include "CTotalGuildRankInfo_registry.hpp"
#include "CTotalGuildRankManager_registry.hpp"
#include "CTotalGuildRankRecord_registry.hpp"
#include "CTraceSnapshot_registry.hpp"
#include "CTransportShip_registry.hpp"
#include "CTrap_registry.hpp"
#include "CUnmannedTraderClassInfoFactory_registry.hpp"
#include "CUnmannedTraderClassInfoTableCodeType_registry.hpp"
#include "CUnmannedTraderClassInfoTableType_registry.hpp"
#include "CUnmannedTraderClassInfo_registry.hpp"
#include "CUnmannedTraderController_registry.hpp"
#include "CUnmannedTraderDivisionInfo_registry.hpp"
#include "CUnmannedTraderGroupDivisionVersionInfo_registry.hpp"
#include "CUnmannedTraderGroupIDInfo_registry.hpp"
#include "CUnmannedTraderGroupItemInfoTable_registry.hpp"
#include "CUnmannedTraderGroupVersionInfo_registry.hpp"
#include "CUnmannedTraderItemCodeInfo_registry.hpp"
#include "CUnmannedTraderItemState_registry.hpp"
#include "CUnmannedTraderLazyCleaner_registry.hpp"
#include "CUnmannedTraderRegistItemInfo_registry.hpp"
#include "CUnmannedTraderRequestLimiter_registry.hpp"
#include "CUnmannedTraderSchedule_registry.hpp"
#include "CUnmannedTraderScheduler_registry.hpp"
#include "CUnmannedTraderSortType_registry.hpp"
#include "CUnmannedTraderSubClassFactory_registry.hpp"
#include "CUnmannedTraderSubClassInfoCode_registry.hpp"
#include "CUnmannedTraderSubClassInfoDefault_registry.hpp"
#include "CUnmannedTraderSubClassInfoForceLiverGrade_registry.hpp"
#include "CUnmannedTraderSubClassInfoLevel_registry.hpp"
#include "CUnmannedTraderSubClassInfo_registry.hpp"
#include "CUnmannedTraderTaxRateManager_registry.hpp"
#include "CUnmannedTraderTradeInfo_registry.hpp"
#include "CUnmannedTraderUserInfoTable_registry.hpp"
#include "CUnmannedTraderUserInfo_registry.hpp"
#include "CUserDB_registry.hpp"
#include "CUserRankingProcess_registry.hpp"
#include "CVertexBuffer_registry.hpp"
#include "CVoteSystem_registry.hpp"
#include "CWeeklyGuildRankInfo_registry.hpp"
#include "CWeeklyGuildRankManager_registry.hpp"
#include "CWeeklyGuildRankOwnerInfo_registry.hpp"
#include "CWeeklyGuildRankRecord_registry.hpp"
#include "CWorldSchedule_registry.hpp"
#include "CandidateMgr_registry.hpp"
#include "CandidateRegister_registry.hpp"
#include "CashDbWorker_registry.hpp"
#include "CashItemRemoteStore_registry.hpp"
#include "ClassOrderProcessor_registry.hpp"
#include "ControllerTaxRate_registry.hpp"
#include "CryptoPP_registry.hpp"
#include "D3DXVECTOR2_registry.hpp"
#include "Define_the_symbol__ATL_MIXED__Thank_you_registry.hpp"
#include "DfAIMgr_registry.hpp"
#include "DnBuffNode_registry.hpp"
#include "ElectProcessor_registry.hpp"
#include "EmotionPresentationChecker_registry.hpp"
#include "FONT2DVERTEX_registry.hpp"
#include "FinalDecisionApplyer_registry.hpp"
#include "FinalDecisionProcessor_registry.hpp"
#include "GMCallMgr_registry.hpp"
#include "GMRequestData_registry.hpp"
#include "GUILD_BATTLE__CCurrentGuildBattleInfoManager_registry.hpp"
#include "GUILD_BATTLE__CGuildBattleLogger_registry.hpp"
#include "GUILD_BATTLE__CGuildBattleRankManager_registry.hpp"
#include "GUILD_BATTLE__CGuildBattleReservedScheduleListManager_registry.hpp"
#include "GUILD_BATTLE__CGuildBattleReservedScheduleMapGroup_registry.hpp"
#include "GUILD_BATTLE__CGuildBattleReservedSchedule_registry.hpp"
#include "GUILD_BATTLE__CGuildBattleRewardItemManager_registry.hpp"
#include "GUILD_BATTLE__CGuildBattleRewardItem_registry.hpp"
#include "GUILD_BATTLE__CGuildBattleScheduleManager_registry.hpp"
#include "GUILD_BATTLE__CGuildBattleSchedulePool_registry.hpp"
#include "GUILD_BATTLE__CGuildBattleSchedule_registry.hpp"
#include "GUILD_BATTLE__CGuildBattleScheduler_registry.hpp"
#include "GUILD_BATTLE__CGuildBattleStateList_registry.hpp"
#include "GUILD_BATTLE__CGuildBattleState_registry.hpp"
#include "GUILD_BATTLE__CGuildBattle_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleFieldList_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleField_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleGuildMember_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleGuild_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleLogger_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleManager_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleStateCountDown_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleStateDivide_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleStateFin_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleStateInBattle_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleStateListPool_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleStateList_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleStateNotify_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleStateReady_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleStateReturn_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleStateRoundList_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleStateRoundProcess_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleStateRoundReturnStartPos_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleStateRoundStart_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleStateRound_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleState_registry.hpp"
#include "GUILD_BATTLE__CNormalGuildBattle_registry.hpp"
#include "GUILD_BATTLE__CPossibleBattleGuildListManager_registry.hpp"
#include "GUILD_BATTLE__CReservedGuildScheduleDayGroup_registry.hpp"
#include "GUILD_BATTLE__CReservedGuildScheduleMapGroup_registry.hpp"
#include "GUILD_BATTLE__CReservedGuildSchedulePage_registry.hpp"
#include "GuildCreateEventInfo_registry.hpp"
#include "HACKSHEILD_PARAM_ANTICP_registry.hpp"
#include "ICsSendInterface_registry.hpp"
#include "INI_Key_registry.hpp"
#include "INI_Section_registry.hpp"
#include "INationGameGuardSystem_registry.hpp"
#include "ItemCombineMgr_registry.hpp"
#include "LendItemMng_registry.hpp"
#include "LendItemSheet_registry.hpp"
#include "LtdWriter_registry.hpp"
#include "LuaParam3_registry.hpp"
#include "MD5_registry.hpp"
#include "MiningTicket_registry.hpp"
#include "MonsterSFContDamageToleracne_registry.hpp"
#include "MonsterSetInfoData_registry.hpp"
#include "MonsterStateData_registry.hpp"
#include "MyTimer_registry.hpp"
#include "PatriarchElectProcessor_registry.hpp"
#include "Player_TL_Status_registry.hpp"
#include "PotionInnerData_registry.hpp"
#include "R3Camera_registry.hpp"
#include "RACE_BOSS_MSG__CMsgListManager_registry.hpp"
#include "RACE_BOSS_MSG__CMsgList_registry.hpp"
#include "RACE_BOSS_MSG__CMsg_registry.hpp"
#include "RECV_DATA_registry.hpp"
#include "RFEventBase_registry.hpp"
#include "RFEvent_ClassRefine_registry.hpp"
#include "Request_Buy_Item_registry.hpp"
#include "Request_Remain_Cash_registry.hpp"
#include "SF_Timer_registry.hpp"
#include "SKILL_registry.hpp"
#include "ScheduleMSG_registry.hpp"
#include "SecondCandidateCrystallizer_registry.hpp"
#include "Sky_registry.hpp"
#include "Sun_registry.hpp"
#include "TRC_AutoTrade_registry.hpp"
#include "TaskPool_registry.hpp"
#include "Task_registry.hpp"
#include "TimeItem_registry.hpp"
#include "TimeLimitJadeMng_registry.hpp"
#include "TimeLimitJade_registry.hpp"
#include "TimeLimitMgr_registry.hpp"
#include "TournamentWinner_registry.hpp"
#include "UIDGenerator_registry.hpp"
#include "ULI_registry.hpp"
#include "US__AbstractThread_registry.hpp"
#include "US__CNoneCopyAble_registry.hpp"
#include "US__CriticalSection_registry.hpp"
#include "UsRefObject_registry.hpp"
#include "UsStateTBL_registry.hpp"
#include "Us_FSM_Node_registry.hpp"
#include "Us_HFSM_registry.hpp"
#include "Voter_registry.hpp"
#include "WheatyExceptionReport_registry.hpp"
#include "Worker_registry.hpp"
#include "_100_per_random_table_registry.hpp"
#include "_ANIMUSKEY_registry.hpp"
#include "_ANIMUS_DB_BASE_registry.hpp"
#include "_ANIMUS_RETURN_DELAY_registry.hpp"
#include "_ATTACK_DELAY_CHECKER_registry.hpp"
#include "_AUTOMINE_SLOT_registry.hpp"
#include "_AVATOR_DATA_registry.hpp"
#include "_AVATOR_DB_BASE_registry.hpp"
#include "_BILLING_FORCE_CLOSE_DELAY_registry.hpp"
#include "_BILLING_INFO_registry.hpp"
#include "_BUDDY_DB_BASE_registry.hpp"
#include "_BUDDY_LIST_registry.hpp"
#include "_COMBINEKEY_registry.hpp"
#include "_CRYMSG_DB_BASE_registry.hpp"
#include "_CRYMSG_LIST_registry.hpp"
#include "_CUTTING_DB_BASE_registry.hpp"
#include "_ChatStealTargetInfo_registry.hpp"
#include "_ContPotionData_registry.hpp"
#include "_DB_LOAD_AUTOMINE_MACHINE_registry.hpp"
#include "_DB_QRY_SYN_DATA_registry.hpp"
#include "_DELAY_PROCESS_registry.hpp"
#include "_DELPOST_DB_BASE_registry.hpp"
#include "_DTRADE_ITEM_registry.hpp"
#include "_DTRADE_PARAM_registry.hpp"
#include "_ECONOMY_SYSTEM_registry.hpp"
#include "_EMBELLKEY_registry.hpp"
#include "_EQUIPKEY_registry.hpp"
#include "_EQUIP_DB_BASE_registry.hpp"
#include "_Exttrunk_db_load_registry.hpp"
#include "_FORCEKEY_registry.hpp"
#include "_FORCE_CLOSE_registry.hpp"
#include "_FORCE_DB_BASE_registry.hpp"
#include "_INVENKEY_registry.hpp"
#include "_INVEN_DB_BASE_registry.hpp"
#include "_ITEMCOMBINE_DB_BASE_registry.hpp"
#include "_Init_action_point_zocl_registry.hpp"
#include "_LAYER_SET_registry.hpp"
#include "_LINKKEY_registry.hpp"
#include "_LINK_DB_BASE_registry.hpp"
#include "_LTD_registry.hpp"
#include "_MASTERY_PARAM_registry.hpp"
#include "_MONEY_SUPPLY_DATA_registry.hpp"
#include "_MOVE_LOBBY_DELAY_registry.hpp"
#include "_MULTI_BLOCK_registry.hpp"
#include "_NEAR_DATA_registry.hpp"
#include "_NET_BUFFER_registry.hpp"
#include "_NET_TYPE_PARAM_registry.hpp"
#include "_NOT_ARRANGED_AVATOR_DB_registry.hpp"
#include "_NPCQuestIndexTempData_registry.hpp"
#include "_NameChangeBuddyInfo_registry.hpp"
#include "_PARTICLE_ELEMENT_registry.hpp"
#include "_PCBANG_FAVOR_ITEM_DB_BASE_registry.hpp"
#include "_PCBANG_PLAY_TIME_registry.hpp"
#include "_PERSONALAMINE_INVEN_DB_BASE_registry.hpp"
#include "_POSTDATA_DB_BASE_registry.hpp"
#include "_POSTSTORAGE_DB_BASE_registry.hpp"
#include "_POTION_NEXT_USE_TIME_DB_BASE_registry.hpp"
#include "_PVPPOINT_LIMIT_DB_BASE_registry.hpp"
#include "_PVP_ORDER_VIEW_DB_BASE_registry.hpp"
#include "_PVP_RANK_REFRESH_USER_registry.hpp"
#include "_QUEST_CASH_OTHER_registry.hpp"
#include "_QUEST_CASH_registry.hpp"
#include "_QUEST_DB_BASE_registry.hpp"
#include "_R3ENGINE_STATE_registry.hpp"
#include "_REGED_AVATOR_DB_registry.hpp"
#include "_REGED_registry.hpp"
#include "_RENAME_POTION_USE_INFO_registry.hpp"
#include "_RETURNPOST_DB_BASE_registry.hpp"
#include "_SFCONT_DB_BASE_registry.hpp"
#include "_SKILL_IDX_PER_MASTERY_registry.hpp"
#include "_SOCK_TYPE_PARAM_registry.hpp"
#include "_SOUND_ENTITIES_LIST_registry.hpp"
#include "_SRAND_registry.hpp"
#include "_STAT_DB_BASE_registry.hpp"
#include "_STORAGE_LIST_registry.hpp"
#include "_SUPPLEMENT_DB_BASE_registry.hpp"
#include "_SYNC_STATE_registry.hpp"
#include "_SYN_DATA_registry.hpp"
#include "_SYN_HEADER_registry.hpp"
#include "_THREAD_CONFIG_registry.hpp"
#include "_TOWER_PARAM_registry.hpp"
#include "_TRADE_DB_BASE_registry.hpp"
#include "_TRAP_PARAM_registry.hpp"
#include "_TRUNK_DB_BASE_registry.hpp"
#include "_UNIT_DB_BASE_registry.hpp"
#include "_WAIT_ENTER_ACCOUNT_registry.hpp"
#include "_WEAPON_PARAM_registry.hpp"
#include "__TEMP_WAIT_TOWER_registry.hpp"
#include "__add_loot_item_registry.hpp"
#include "__add_monster_registry.hpp"
#include "__add_time_registry.hpp"
#include "__change_monster_registry.hpp"
#include "__dp_mission_potal_registry.hpp"
#include "__dummy_block_registry.hpp"
#include "__error_info_registry.hpp"
#include "__guild_list_page_registry.hpp"
#include "__holy_keeper_data_registry.hpp"
#include "__holy_stone_data_registry.hpp"
#include "__inner_check_registry.hpp"
#include "__monster_group_registry.hpp"
#include "__respawn_monster_registry.hpp"
#include "__respond_check_registry.hpp"
#include "_a_trade_adjust_price_result_zocl_registry.hpp"
#include "_a_trade_clear_item_result_zocl_registry.hpp"
#include "_action_point_system_ini_registry.hpp"
#include "_add_char_result_zone_registry.hpp"
#include "_add_lend_item_result_zocl_registry.hpp"
#include "_alive_char_result_zocl_registry.hpp"
#include "_alter_action_point_zocl_registry.hpp"
#include "_alter_cont_effect_time_zocl_registry.hpp"
#include "_animus_create_setdata_registry.hpp"
#include "_animus_db_load_registry.hpp"
#include "_animus_download_result_zocl_registry.hpp"
#include "_announ_message_receipt_udp_registry.hpp"
#include "_apex_block_request_wrac_registry.hpp"
#include "_apex_id_registry.hpp"
#include "_apex_send_ip_registry.hpp"
#include "_apex_send_login_registry.hpp"
#include "_apex_send_logout_registry.hpp"
#include "_apex_send_trans_registry.hpp"
#include "_atrade_taxrate_result_zocl_registry.hpp"
#include "_attack_count_result_zocl_registry.hpp"
#include "_attack_force_result_zocl_registry.hpp"
#include "_attack_gen_result_zocl_registry.hpp"
#include "_attack_keeper_inform_zocl_registry.hpp"
#include "_attack_param_registry.hpp"
#include "_attack_selfdestruction_result_zocl_registry.hpp"
#include "_attack_siege_result_zocl_registry.hpp"
#include "_attack_skill_result_zocl_registry.hpp"
#include "_attack_trap_inform_zocl_registry.hpp"
#include "_attack_unit_result_zocl_registry.hpp"
#include "_bag_db_load_registry.hpp"
#include "_base_download_result_zocl_registry.hpp"
#include "_base_fld_registry.hpp"
#include "_be_damaged_char_registry.hpp"
#include "_be_damaged_player_registry.hpp"
#include "_bind_dummy_registry.hpp"
#include "_buddy_download_result_zocl_registry.hpp"
#include "_buy_offer_registry.hpp"
#include "_buy_store_success_zocl_registry.hpp"
#include "_cancel_raceboss_msg_result_zoct_registry.hpp"
#include "_candidate_info_registry.hpp"
#include "_cash_discount__registry.hpp"
#include "_cash_discount_event_inform_zocl_registry.hpp"
#include "_cash_discount_ini__registry.hpp"
#include "_cash_event_inform_zocl_registry.hpp"
#include "_cash_event_ini_registry.hpp"
#include "_cash_event_registry.hpp"
#include "_cashdb_setting_request_wrac_registry.hpp"
#include "_ccrfg_detect_alret_registry.hpp"
#include "_character_create_setdata_registry.hpp"
#include "_character_db_load_registry.hpp"
#include "_character_disconnect_result_wrac_registry.hpp"
#include "_chat_lock_inform_zocl_registry.hpp"
#include "_chat_message_receipt_udp_registry.hpp"
#include "_chat_multi_far_trans_zocl_registry.hpp"
#include "_chat_steal_message_gm_zocl_registry.hpp"
#include "_check_query_registry.hpp"
#include "_check_speed_hack_ans_registry.hpp"
#include "_class_value_registry.hpp"
#include "_coll_point_registry.hpp"
#include "_combine_ex_item_result_zocl_registry.hpp"
#include "_combine_lend_item_result_zocl_registry.hpp"
#include "_con_event__registry.hpp"
#include "_conditional_event_inform_zocl_registry.hpp"
#include "_connection_status_result_zoct_registry.hpp"
#include "_create_holy_master_zocl_registry.hpp"
#include "_cum_download_result_zocl_registry.hpp"
#include "_darkhole_answer_reenter_result_zocl_registry.hpp"
#include "_darkhole_ask_reenter_inform_zocl_registry.hpp"
#include "_darkhole_channel_close_inform_zocl_registry.hpp"
#include "_darkhole_clear_out_result_zocl_registry.hpp"
#include "_darkhole_create_setdata_registry.hpp"
#include "_darkhole_create_zocl_registry.hpp"
#include "_darkhole_destroy_zocl_registry.hpp"
#include "_darkhole_enter_result_zocl_registry.hpp"
#include "_darkhole_fixpositon_zocl_registry.hpp"
#include "_darkhole_giveup_out_result_zocl_registry.hpp"
#include "_darkhole_job_count_inform_zocl_registry.hpp"
#include "_darkhole_job_pass_inform_zocl_registry.hpp"
#include "_darkhole_leader_change_inform_zocl_registry.hpp"
#include "_darkhole_member_info_inform_zocl_registry.hpp"
#include "_darkhole_mission_info_inform_zocl_registry.hpp"
#include "_darkhole_mission_pass_inform_zocl_registry.hpp"
#include "_darkhole_mission_quest_inform_zocl_registry.hpp"
#include "_darkhole_new_member_inform_zocl_registry.hpp"
#include "_darkhole_new_mission_inform_zocl_registry.hpp"
#include "_darkhole_open_all_portal_by_result_inform_zocl_registry.hpp"
#include "_darkhole_open_portal_by_react_inform_zocl_registry.hpp"
#include "_darkhole_open_result_zocl_registry.hpp"
#include "_darkhole_outof_member_inform_zocl_registry.hpp"
#include "_darkhole_quest_info_inform_zocl_registry.hpp"
#include "_darkhole_real_add_time_inform_zocl_registry.hpp"
#include "_darkhole_real_msg_inform_zocl_registry.hpp"
#include "_darkhole_state_change_zocl_registry.hpp"
#include "_darkhole_timeout_inform_zocl_registry.hpp"
#include "_db_golden_box_item_registry.hpp"
#include "_del_char_result_zone_registry.hpp"
#include "_detected_char_list_registry.hpp"
#include "_dh_job_setup_registry.hpp"
#include "_dh_mission_mgr_registry.hpp"
#include "_dh_mission_setup_registry.hpp"
#include "_dh_player_mgr_registry.hpp"
#include "_dh_quest_setup_registry.hpp"
#include "_dh_reward_sub_setup_registry.hpp"
#include "_dummy_position_registry.hpp"
#include "_economy_history_data_registry.hpp"
#include "_effect_parameter_registry.hpp"
#include "_embellish_db_load_registry.hpp"
#include "_enter_lobby_report_wrac_registry.hpp"
#include "_enter_world_request_wrac_registry.hpp"
#include "_enter_world_result_zone_registry.hpp"
#include "_equip_db_load_registry.hpp"
#include "_equip_up_item_lv_limit_zocl_registry.hpp"
#include "_event_participant_classrefine_registry.hpp"
#include "_event_respawn_registry.hpp"
#include "_event_set_looting_registry.hpp"
#include "_event_set_registry.hpp"
#include "_exchange_lend_item_result_zocl_registry.hpp"
#include "_fireguard_block_request_wrac_registry.hpp"
#include "_force_db_load_registry.hpp"
#include "_force_download_result_zocl_registry.hpp"
#include "_gm_msg_gmcall_list_response_zocl_registry.hpp"
#include "_goldbox_index_registry.hpp"
#include "_golden_box_item_event_registry.hpp"
#include "_golden_box_item_ini_registry.hpp"
#include "_golden_box_item_registry.hpp"
#include "_good_storage_info_registry.hpp"
#include "_guild_alter_member_grade_inform_zocl_registry.hpp"
#include "_guild_alter_member_state_inform_zocl_registry.hpp"
#include "_guild_applier_download_zocl_registry.hpp"
#include "_guild_applier_info_registry.hpp"
#include "_guild_battle_get_gravity_stone_result_zocl_registry.hpp"
#include "_guild_battle_goal_result_zocl_registry.hpp"
#include "_guild_battle_rank_list_result_zocl_registry.hpp"
#include "_guild_battle_reserved_schedule_result_zocl_registry.hpp"
#include "_guild_battle_suggest_matter_registry.hpp"
#include "_guild_battle_suggest_request_result_zocl_registry.hpp"
#include "_guild_honor_list_result_zocl_registry.hpp"
#include "_guild_list_result_zocl_registry.hpp"
#include "_guild_manage_request_clzo_registry.hpp"
#include "_guild_master_info_registry.hpp"
#include "_guild_member_buddy_download_zocl_registry.hpp"
#include "_guild_member_download_zocl_registry.hpp"
#include "_guild_member_info_registry.hpp"
#include "_guild_money_io_download_zocl_registry.hpp"
#include "_guild_query_info_result_zocl_registry.hpp"
#include "_guild_vote_process_inform_zocl_registry.hpp"
#include "_guildroom_enter_result_zocl_registry.hpp"
#include "_guildroom_out_result_zocl_registry.hpp"
#include "_guildroom_rent_result_zocl_registry.hpp"
#include "_happen_event_cont_registry.hpp"
#include "_holy_quest_report_wrac_registry.hpp"
#include "_insert_new_quest_inform_zocl_registry.hpp"
#include "_insert_next_quest_inform_zocl_registry.hpp"
#include "_insert_trc_info_registry.hpp"
#include "_inven_download_result_zocl_registry.hpp"
#include "_item_fanfare_zocl_registry.hpp"
#include "_itembox_create_setdata_registry.hpp"
#include "_itembox_take_add_result_zocl_registry.hpp"
#include "_itembox_take_new_result_zocl_registry.hpp"
#include "_job_sub_setup_registry.hpp"
#include "_keeper_create_setdata_registry.hpp"
#include "_limit_amount_info_registry.hpp"
#include "_limit_item_db_data_registry.hpp"
#include "_limit_item_info_registry.hpp"
#include "_limit_item_num_info_zocl_registry.hpp"
#include "_limitedsale_event_inform_zocl_registry.hpp"
#include "_log_case_charselect_registry.hpp"
#include "_log_change_class_after_init_class_registry.hpp"
#include "_log_sheet_economy_registry.hpp"
#include "_log_sheet_lv_registry.hpp"
#include "_log_sheet_usernum_registry.hpp"
#include "_logout_account_request_wrac_registry.hpp"
#include "_map_fld_registry.hpp"
#include "_map_rate_registry.hpp"
#include "_mastery_up_data_registry.hpp"
#include "_max_point_registry.hpp"
#include "_message_registry.hpp"
#include "_mon_active_registry.hpp"
#include "_mon_block_registry.hpp"
#include "_money_supply_gatering_inform_zowb_registry.hpp"
#include "_monster_create_setdata_registry.hpp"
#include "_monster_sp_group_registry.hpp"
#include "_move_to_own_stonemap_inform_zocl_registry.hpp"
#include "_move_to_own_stonemap_result_zocl_registry.hpp"
#include "_moveout_user_result_zone_registry.hpp"
#include "_not_arranged_char_inform_zocl_registry.hpp"
#include "_notice_move_limit_map_msg_zocl_registry.hpp"
#include "_notify_cont_play_time_zocl_registry.hpp"
#include "_notify_coupon_ensure_time_zocl_registry.hpp"
#include "_notify_coupon_error_zocl_registry.hpp"
#include "_notify_local_time_result_zocl_registry.hpp"
#include "_notify_max_pvp_point_zocl_registry.hpp"
#include "_notify_not_use_premium_cashitem_zocl_registry.hpp"
#include "_notify_pvp_cash_point_error_zocl_registry.hpp"
#include "_notify_race_boss_winrate_zocl_registry.hpp"
#include "_notify_remain_coupon_zocl_registry.hpp"
#include "_npc_create_setdata_registry.hpp"
#include "_npc_quest_list_result_zocl_registry.hpp"
#include "_npclink_check_item_result_zocl_registry.hpp"
#include "_nuclear_bomb_current_state_zocl_registry.hpp"
#include "_nuclear_bomb_destruction_zocl_registry.hpp"
#include "_nuclear_bomb_drop_result_zocl_registry.hpp"
#include "_nuclear_bomb_explosion_result_zocl_registry.hpp"
#include "_nuclear_bomb_position_inform_zocl_registry.hpp"
#include "_nuclear_create_setdata_registry.hpp"
#include "_nuclear_explosion_success_zocl_registry.hpp"
#include "_nuclear_find_rader_result_zocl_registry.hpp"
#include "_nuclear_position_result_zocl_registry.hpp"
#include "_nuclear_result_code_zocl_registry.hpp"
#include "_object_create_setdata_registry.hpp"
#include "_object_id_registry.hpp"
#include "_object_list_point_registry.hpp"
#include "_open_world_request_wrac_registry.hpp"
#include "_ore_cutting_result_zocl_registry.hpp"
#include "_other_shape_all_zocl_registry.hpp"
#include "_other_shape_part_zocl_registry.hpp"
#include "_param_cash_registry.hpp"
#include "_param_cash_rollback_registry.hpp"
#include "_param_cash_select_registry.hpp"
#include "_param_cash_total_selling_registry.hpp"
#include "_param_cash_update_registry.hpp"
#include "_param_cashitem_dblog_registry.hpp"
#include "_parkingunit_create_setdata_registry.hpp"
#include "_party_join_joiner_result_zocl_registry.hpp"
#include "_party_member_info_upd_registry.hpp"
#include "_personal_amine_errmsg_zocl_registry.hpp"
#include "_personal_amine_fixpos_zocl_registry.hpp"
#include "_personal_amine_infoui_open_zocl_registry.hpp"
#include "_personal_amine_inven_db_load_registry.hpp"
#include "_personal_amine_make_storage_zocl_registry.hpp"
#include "_personal_amine_mineore_zocl_registry.hpp"
#include "_personal_automine_alter_dur_zocl_registry.hpp"
#include "_personal_automine_attacked_zocl_registry.hpp"
#include "_personal_automine_battery_extract_zocl_registry.hpp"
#include "_personal_automine_battery_insert_zocl_registry.hpp"
#include "_personal_automine_current_state_zocl_registry.hpp"
#include "_personal_automine_delbattery_zocl_registry.hpp"
#include "_personal_automine_download_zocl_registry.hpp"
#include "_personal_automine_install_zocl_registry.hpp"
#include "_personal_automine_popore_zocl_registry.hpp"
#include "_personal_automine_selore_zocl_registry.hpp"
#include "_personal_automine_stop_zocl_registry.hpp"
#include "_personal_automine_uninstall_circle_zocl_registry.hpp"
#include "_personal_automine_uninstall_zocl_registry.hpp"
#include "_portal_dummy_registry.hpp"
#include "_possible_battle_guild_list_result_zocl_registry.hpp"
#include "_post_content_result_zocl_registry.hpp"
#include "_post_result_zocl_registry.hpp"
#include "_pt_appoint_inform_request_zocl_registry.hpp"
#include "_pt_automine_charge_money_db_update_fail_zocl_registry.hpp"
#include "_pt_automine_getoutore_zocl_registry.hpp"
#include "_pt_automine_info_zocl_registry.hpp"
#include "_pt_automine_result_zocl_registry.hpp"
#include "_pt_automine_state_zocl_registry.hpp"
#include "_pt_inform_appoint_zocl_registry.hpp"
#include "_pt_inform_commission_income_zocl_registry.hpp"
#include "_pt_inform_punishment_zocl_registry.hpp"
#include "_pt_inform_tax_rate_zocl_registry.hpp"
#include "_pt_notify_final_decision_registry.hpp"
#include "_pt_notify_vote_score_zocl_registry.hpp"
#include "_pt_propose_appoint_zocl_registry.hpp"
#include "_pt_query_appoint_zocl_registry.hpp"
#include "_pt_result_appoint_zocl_registry.hpp"
#include "_pt_result_change_tax_rate_zocl_registry.hpp"
#include "_pt_result_code_zocl_registry.hpp"
#include "_pt_result_fcandidacy_list_zocl_registry.hpp"
#include "_pt_result_punishment_zocl_registry.hpp"
#include "_pt_trans_votepaper_zocl_registry.hpp"
#include "_pvp_cash_recover_itemlist_result_zocl_registry.hpp"
#include "_pvp_order_view_end_zocl_registry.hpp"
#include "_pvp_order_view_inform_zocl_registry.hpp"
#include "_pvp_order_view_point_inform_zocl_registry.hpp"
#include "_pvp_rank_list_result_data_zocl_registry.hpp"
#include "_qry_case_addguildbattleschedule_registry.hpp"
#include "_qry_case_addpvppoint_registry.hpp"
#include "_qry_case_alive_char_registry.hpp"
#include "_qry_case_all_store_limit_item_registry.hpp"
#include "_qry_case_amine_battery_discharge_registry.hpp"
#include "_qry_case_amine_batterycharge_registry.hpp"
#include "_qry_case_amine_mineore_registry.hpp"
#include "_qry_case_amine_moveore_registry.hpp"
#include "_qry_case_amine_newowner_registry.hpp"
#include "_qry_case_amine_selore_registry.hpp"
#include "_qry_case_amine_workstate_registry.hpp"
#include "_qry_case_buyemblem_registry.hpp"
#include "_qry_case_character_rename_registry.hpp"
#include "_qry_case_cheat_player_vote_info_registry.hpp"
#include "_qry_case_contsave_registry.hpp"
#include "_qry_case_dest_guild_out_guildbattlecost_registry.hpp"
#include "_qry_case_discharge_patriarch_registry.hpp"
#include "_qry_case_disjointguild_registry.hpp"
#include "_qry_case_forceleave_registry.hpp"
#include "_qry_case_gm_greetingmsg_registry.hpp"
#include "_qry_case_guild_greetingmsg_registry.hpp"
#include "_qry_case_in_atrade_tax_registry.hpp"
#include "_qry_case_in_guildbattlecost_registry.hpp"
#include "_qry_case_in_guildbattlerewardmoney_registry.hpp"
#include "_qry_case_inputgmoney_registry.hpp"
#include "_qry_case_insert_candidate_registry.hpp"
#include "_qry_case_insert_orelog_registry.hpp"
#include "_qry_case_insert_patriarch_comm_registry.hpp"
#include "_qry_case_insert_timelimit_info_registry.hpp"
#include "_qry_case_insertguild_registry.hpp"
#include "_qry_case_insertitem_registry.hpp"
#include "_qry_case_joinacguild_registry.hpp"
#include "_qry_case_load_guildbattle_totalrecord_registry.hpp"
#include "_qry_case_loadguildbattlerank_registry.hpp"
#include "_qry_case_lobby_logout_registry.hpp"
#include "_qry_case_make_storage_registry.hpp"
#include "_qry_case_outputgmoney_registry.hpp"
#include "_qry_case_post_content_get_registry.hpp"
#include "_qry_case_post_list_regi_registry.hpp"
#include "_qry_case_post_return_list_get_registry.hpp"
#include "_qry_case_post_send_registry.hpp"
#include "_qry_case_post_serial_check_registry.hpp"
#include "_qry_case_post_storage_list_get_registry.hpp"
#include "_qry_case_race_greetingmsg_registry.hpp"
#include "_qry_case_raceboss_accumulation_winrate_registry.hpp"
#include "_qry_case_rank_racerank_guildrank_registry.hpp"
#include "_qry_case_request_refund_registry.hpp"
#include "_qry_case_select_charserial_registry.hpp"
#include "_qry_case_select_guild_master_lastconn_registry.hpp"
#include "_qry_case_select_patriarch_comm_registry.hpp"
#include "_qry_case_select_timelimit_info_registry.hpp"
#include "_qry_case_selfleave_registry.hpp"
#include "_qry_case_sendwebracebosssms_registry.hpp"
#include "_qry_case_src_guild_out_guildbattlecost_registry.hpp"
#include "_qry_case_unmandtrader_cheat_updateregisttime_registry.hpp"
#include "_qry_case_unmandtrader_re_registsingleitem_registry.hpp"
#include "_qry_case_unmandtrader_updateitemstate_registry.hpp"
#include "_qry_case_update_data_for_post_send_registry.hpp"
#include "_qry_case_update_data_for_trade_registry.hpp"
#include "_qry_case_update_guildmaster_registry.hpp"
#include "_qry_case_update_honor_guild_registry.hpp"
#include "_qry_case_update_mineore_registry.hpp"
#include "_qry_case_update_player_vote_info_registry.hpp"
#include "_qry_case_update_punishment_registry.hpp"
#include "_qry_case_update_server_reset_token_registry.hpp"
#include "_qry_case_update_user_guild_data_registry.hpp"
#include "_qry_case_update_vote_available_registry.hpp"
#include "_qry_case_updateclearguildbattleDayInfo_registry.hpp"
#include "_qry_case_updatedrawguildbattlerank_registry.hpp"
#include "_qry_case_updatereservedschedule_registry.hpp"
#include "_qry_case_updateweeklyguildpvppointsum_registry.hpp"
#include "_qry_case_updatewinloseguildbattlerank_registry.hpp"
#include "_qry_sheet_delete_registry.hpp"
#include "_qry_sheet_insert_registry.hpp"
#include "_qry_sheet_load_registry.hpp"
#include "_qry_sheet_lobby_registry.hpp"
#include "_qry_sheet_logout_registry.hpp"
#include "_qry_sheet_reged_registry.hpp"
#include "_quest_check_result_registry.hpp"
#include "_quest_download_result_zocl_registry.hpp"
#include "_quest_dummy_registry.hpp"
#include "_quest_fail_result_registry.hpp"
#include "_quest_history_download_result_zocl_registry.hpp"
#include "_quick_link_registry.hpp"
#include "_radar_char_list_result_zocl_registry.hpp"
#include "_react_area_registry.hpp"
#include "_react_obj_registry.hpp"
#include "_react_sub_setup_registry.hpp"
#include "_record_bin_header_registry.hpp"
#include "_rege_char_data_registry.hpp"
#include "_reged_char_result_zone_registry.hpp"
#include "_res_dummy_registry.hpp"
#include "_result_csi_buy_zocl_registry.hpp"
#include "_result_csi_error_zocl_registry.hpp"
#include "_result_csi_goods_list_zocl_registry.hpp"
#include "_safe_dummy_registry.hpp"
#include "_sel_char_result_zone_registry.hpp"
#include "_sel_patriarch_elect_state_registry.hpp"
#include "_select_avator_report_wrac_registry.hpp"
#include "_server_notify_inform_zone_registry.hpp"
#include "_server_rate_realtime_load_registry.hpp"
#include "_sf_continous_registry.hpp"
#include "_sf_delay_download_result_zocl_registry.hpp"
#include "_skill_lv_up_data_registry.hpp"
#include "_socket_registry.hpp"
#include "_start_dummy_registry.hpp"
#include "_start_world_request_wrac_registry.hpp"
#include "_started_vote_inform_zocl_registry.hpp"
#include "_starting_vote_inform_zocl_registry.hpp"
#include "_stone_create_setdata_registry.hpp"
#include "_stop_world_request_wrac_registry.hpp"
#include "_storage_refresh_inform_zocl_registry.hpp"
#include "_store_dummy_registry.hpp"
#include "_store_list_result_zocl_registry.hpp"
#include "_suggested_matter_change_taxrate_registry.hpp"
#include "_suggested_matter_registry.hpp"
#include "_talik_crystal_exchange_zocl_registry.hpp"
#include "_talik_recvr_list_registry.hpp"
#include "_talk_crystal_matrial_combine_node_registry.hpp"
#include "_target_monster_aggro_inform_zocl_registry.hpp"
#include "_target_monster_contsf_allinform_zocl_registry.hpp"
#include "_target_player_damage_contsf_allinform_zocl_registry.hpp"
#include "_thread_parameter_registry.hpp"
#include "_throw_skill_result_one_zocl_registry.hpp"
#include "_throw_skill_result_other_zocl_registry.hpp"
#include "_throw_unit_result_one_zocl_registry.hpp"
#include "_throw_unit_result_other_zocl_registry.hpp"
#include "_total_count_registry.hpp"
#include "_total_guild_rank_result_zocl_registry.hpp"
#include "_tower_create_setdata_registry.hpp"
#include "_trans_account_report_wrac_registry.hpp"
#include "_trans_gm_msg_inform_zocl_registry.hpp"
#include "_trap_create_setdata_registry.hpp"
#include "_trunk_db_load_registry.hpp"
#include "_trunk_download_result_zocl_registry.hpp"
#include "_trunk_est_result_zocl_registry.hpp"
#include "_unit_bullet_param_registry.hpp"
#include "_unit_download_result_zocl_registry.hpp"
#include "_unit_pack_fill_result_zocl_registry.hpp"
#include "_unmannedtrader_Regist_item_inform_zocl_registry.hpp"
#include "_unmannedtrader_Sell_Wait_item_inform_zocl_registry.hpp"
#include "_unmannedtrader_buy_item_result_zocl_registry.hpp"
#include "_unmannedtrader_close_item_inform_zocl_registry.hpp"
#include "_unmannedtrader_continue_item_inform_zocl_registry.hpp"
#include "_unmannedtrader_re_regist_result_zocl_registry.hpp"
#include "_unmannedtrader_regist_item_success_result_zocl_registry.hpp"
#include "_update_candidate_wincount_packing_registry.hpp"
#include "_user_num_report_wrac_registry.hpp"
#include "_weekly_guild_rank_result_zocl_registry.hpp"
#include "_world_account_ping_wrac_registry.hpp"
#include "_worlddb_arrange_char_info_registry.hpp"
#include "_worlddb_npc_quest_complete_history_registry.hpp"
#include "_worlddb_potion_delay_info_registry.hpp"
#include "_worlddb_sf_delay_info_registry.hpp"
#include "cStaticMember_Player_registry.hpp"
#include "global_registry.hpp"
#include "lua_tinker__table_obj_registry.hpp"
#include "lua_tinker__table_registry.hpp"
#include "lua_tinker__user_registry.hpp"
#include "lua_tinker__var_base_registry.hpp"
#include "qry_case_cash_limsale_registry.hpp"
#include "qry_case_golden_box_item_registry.hpp"
#include "si_effect_registry.hpp"
#include "si_interpret_registry.hpp"
#include "std___Iterator_base_registry.hpp"
#include "std___Lockit_registry.hpp"
#include "std__bad_alloc_registry.hpp"
#include "std__exception_registry.hpp"
#include "std__ios_base_registry.hpp"
#include "std__length_error_registry.hpp"
#include "std__logic_error_registry.hpp"
#include "std__out_of_range_registry.hpp"
#include "strFILE_registry.hpp"
#include "type_info_registry.hpp"


START_ATF_NAMESPACE
    
    class CATFCoreRegistry
    {
    public:
        CATFCoreRegistry() {
            _wrappers.emplace_back(_STD make_shared<registry::global_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRFNewDatabase_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNetCriticalSection_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CLogFile_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRFWorldDatabase_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_gm_greetingmsg_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_race_greetingmsg_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_guild_greetingmsg_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_NOT_ARRANGED_AVATOR_DB_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_worlddb_arrange_char_info_registry>());
            _wrappers.emplace_back(_STD make_shared<ATL::registry::CTime_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_INVENKEY_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_AUTOMINE_SLOT_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_DB_LOAD_AUTOMINE_MACHINE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPostData_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_limit_item_db_data_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_all_store_limit_item_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_sel_patriarch_elect_state_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_candidate_info_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_request_refund_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_update_punishment_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_honor_list_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_worlddb_sf_delay_info_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_worlddb_npc_quest_complete_history_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_PCBANG_PLAY_TIME_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_worlddb_potion_delay_info_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::TournamentWinner_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_rege_char_data_registry>());
            _wrappers.emplace_back(_STD make_shared<ATL::registry::CTraceCategory_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_SRAND_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_BILLING_INFO_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_WAIT_ENTER_ACCOUNT_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CFrameRate_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMsgData_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_message_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMyCriticalSection_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMsgProcess_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CConnNumPHMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMyTimer_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_DB_QRY_SYN_DATA_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNetIndexList_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCheckSum_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRecordData_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_record_bin_header_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CItemLootTable_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CEventLootTable_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::COreCuttingTable_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CItemUpgradeTable_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_base_fld_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_monster_sp_group_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMonsterSPGroupTable_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMainThread_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::RFEventBase_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CGameObject_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCharacter_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPlayer_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_object_id_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMapData_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CLevel_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CVertexBuffer_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CIndexBuffer_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CEntity_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_PARTICLE_ELEMENT_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CParticle_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMergeFile_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMergeFileManager_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_SOUND_ENTITIES_LIST_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CExtDummy_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPathFinder_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CAlpha_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CBsp_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CSkyBox_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CAniCamera_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CTimer_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CObjectList_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_object_list_point_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_dummy_position_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_mon_block_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_mon_active_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CIniFile_registry>());
            _wrappers.emplace_back(_STD make_shared<std::registry::_Iterator_base_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::INI_Section_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::INI_Key_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::BossSchedule_registry>());
            _wrappers.emplace_back(_STD make_shared<US::registry::CNoneCopyAble_registry>());
            _wrappers.emplace_back(_STD make_shared<US::registry::AbstractThread_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CBossMonsterScheduleSystem_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMapOperation_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMapDataTable_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_map_fld_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::BossSchedule_Map_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::BossSchedule_TBL_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::ScheduleMSG_registry>());
            _wrappers.emplace_back(_STD make_shared<US::registry::CriticalSection_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_MULTI_BLOCK_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_LAYER_SET_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_portal_dummy_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_store_dummy_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_start_dummy_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_bind_dummy_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_res_dummy_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_quest_dummy_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_safe_dummy_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CDummyPosTable_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_100_per_random_table_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_sf_continous_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_effect_parameter_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_STORAGE_LIST_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUserDB_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_EQUIPKEY_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_REGED_AVATOR_DB_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_REGED_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_AVATOR_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_LINKKEY_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_LINK_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_EMBELLKEY_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_EQUIP_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_FORCEKEY_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_FORCE_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_ANIMUSKEY_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_ANIMUS_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_STAT_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_INVEN_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_CUTTING_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_QUEST_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_UNIT_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_SFCONT_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_TRADE_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_BUDDY_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_TRUNK_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_COMBINEKEY_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_ITEMCOMBINE_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_POSTSTORAGE_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_RETURNPOST_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_DELPOST_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_POSTDATA_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_CRYMSG_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_PERSONALAMINE_INVEN_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_PVPPOINT_LIMIT_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_PVP_ORDER_VIEW_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_SUPPLEMENT_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_POTION_NEXT_USE_TIME_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_PCBANG_FAVOR_ITEM_DB_BASE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_AVATOR_DATA_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_SYNC_STATE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_detected_char_list_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRadarItemMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPartyPlayer_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CDarkHoleChannel_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CDarkHole_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_dh_quest_setup_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_dh_mission_setup_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::__monster_group_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_react_obj_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::__dummy_block_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_react_area_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::__add_monster_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::__add_loot_item_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::__change_monster_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::__inner_check_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::__respond_check_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::__respawn_monster_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::__add_time_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_dh_job_setup_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_job_sub_setup_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_react_sub_setup_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::__dp_mission_potal_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_dh_reward_sub_setup_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CLootingMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CAggroNode_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMonster_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMonsterAggroMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMonsterHierarchy_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::MonsterSFContDamageToleracne_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::EmotionPresentationChecker_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::MonsterStateData_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMonsterSkill_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMonsterSkillPool_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_event_respawn_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_event_set_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::Us_HFSM_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::UsRefObject_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::UsStateTBL_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::Us_FSM_Node_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::SF_Timer_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPathMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMonsterAI_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CLuaCommand_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CLuaCommandEx_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CLuaSignalReActor_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_dh_mission_mgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_dh_player_mgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CIndexList_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CSyncCS_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_character_db_load_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_bag_db_load_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_equip_db_load_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_embellish_db_load_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_force_db_load_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_animus_db_load_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_trunk_db_load_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_Exttrunk_db_load_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPostStorage_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPostReturnStorage_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::AP_BatterySlot_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_amine_mineore_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_update_mineore_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::AutominePersonal_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_amine_inven_db_load_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_quick_link_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CGuild_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_member_info_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_master_info_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_applier_info_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_suggested_matter_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_battle_suggest_matter_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_member_download_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_applier_download_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_query_info_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_money_io_download_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_member_buddy_download_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPlayerDB_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRealMoveRequestDelayChecker_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_WEAPON_PARAM_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_DTRADE_ITEM_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_DTRADE_PARAM_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_mastery_up_data_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_skill_lv_up_data_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_MASTERY_PARAM_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CGuardTower_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_TOWER_PARAM_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CTrap_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_TRAP_PARAM_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_BUDDY_LIST_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_happen_event_cont_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CQuestMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::ItemCombineMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::MiningTicket_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CSetItemEffect_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CEquipItemSFAgent_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_CRYMSG_LIST_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_RENAME_POTION_USE_INFO_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_NPCQuestIndexTempData_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CParkingUnit_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CAITimer_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_attack_param_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::SKILL_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CAnimus_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_ContPotionData_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPotionParam_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CExtPotionBuf_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_target_monster_contsf_allinform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_target_player_damage_contsf_allinform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_ATTACK_DELAY_CHECKER_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPvpPointLimiter_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPvpOrderView_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPvpCashPoint_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCouponMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_NameChangeBuddyInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_other_shape_all_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_other_shape_part_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNotifyNotifyRaceLeaderSownerUTaxrate_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CBattleTournamentInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::GuildCreateEventInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_server_rate_realtime_load_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::Player_TL_Status_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::TimeLimitMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_economy_history_data_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_update_guildmaster_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_sendwebracebosssms_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::qry_case_cash_limsale_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_db_golden_box_item_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::PotionInnerData_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPotionMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNetTimer_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_golden_box_item_ini_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_golden_box_item_event_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_golden_box_item_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_goldbox_index_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CGoldenBoxItemMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<ATL::registry::CTrace_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CObject_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRect_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCommandLineInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMonsterHelper_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_NEAR_DATA_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_alter_member_grade_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CSize_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CSurface_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_announ_message_receipt_udp_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_disjointguild_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CHolyStone_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_object_create_setdata_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_character_create_setdata_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_stone_create_setdata_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_animus_create_setdata_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_be_damaged_char_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CAttack_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CTakeOut_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMgrAvatorLvHistory_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_list_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_update_player_vote_info_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_loadguildbattlerank_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_party_join_joiner_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::__holy_keeper_data_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_add_char_result_zone_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::BASE_HACKSHEILD_PARAM_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::INationGameGuardSystem_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CHackShieldExSystem_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::HACKSHEILD_PARAM_ANTICP_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_battle_reserved_schedule_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNetProcess_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNetSocket_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_socket_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_SOCK_TYPE_PARAM_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_total_count_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_FORCE_CLOSE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_NET_TYPE_PARAM_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNetWorking_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_NET_BUFFER_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_thread_parameter_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNetFrameRate_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_updatewinloseguildbattlerank_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_result_csi_error_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_create_setdata_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRFCashItemDatabase_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_param_cash_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_param_cash_select_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_param_cash_update_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_param_cash_rollback_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_attack_count_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_cash_event_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_raceboss_accumulation_winrate_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_limit_item_info_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CGuildRoomInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_PVP_RANK_REFRESH_USER_registry>());
            _wrappers.emplace_back(_STD make_shared<std::registry::exception_registry>());
            _wrappers.emplace_back(_STD make_shared<std::registry::logic_error_registry>());
            _wrappers.emplace_back(_STD make_shared<std::registry::length_error_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPvpUserRankingInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPvpUserRankingTargetUserList_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CGuildRanking_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUserRankingProcess_registry>());
            _wrappers.emplace_back(_STD make_shared<std::registry::out_of_range_registry>());
            _wrappers.emplace_back(_STD make_shared<std::registry::_Lockit_registry>());
            _wrappers.emplace_back(_STD make_shared<std::registry::bad_alloc_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_attack_force_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_insert_orelog_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_itembox_take_add_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_amine_mineore_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::AggroCaculateData_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_battle_rank_list_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_post_list_regi_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_a_trade_clear_item_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::D3DXVECTOR2_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pvp_cash_recover_itemlist_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_coll_point_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCollLineDraw_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingData_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::Worker_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::Task_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::TaskPool_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CashDbWorker_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CBilling_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingManager_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCheckSumBaseConverter_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCheckSumCharacTrunkConverter_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCheckSumCharacAccountTrunkData_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_itembox_create_setdata_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_quest_history_download_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_trap_create_setdata_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::si_effect_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::si_interpret_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CSetItemType_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_con_event__registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_cash_discount_event_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_quest_check_result_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_quest_fail_result_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_dest_guild_out_guildbattlecost_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_chat_steal_message_gm_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_good_storage_info_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_inform_commission_income_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CandidateMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_in_atrade_tax_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_tower_create_setdata_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_update_user_guild_data_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_in_guildbattlecost_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_MONEY_SUPPLY_DATA_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_updatedrawguildbattlerank_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_chat_lock_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_parkingunit_create_setdata_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_store_list_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CGdiObject_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CFont_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_alive_char_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::__TEMP_WAIT_TOWER_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_cheat_player_vote_info_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_nuclear_bomb_current_state_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_amine_batterycharge_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_update_server_reset_token_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::__guild_list_page_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRFMonsterAIMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_not_arranged_char_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_attack_unit_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_alter_action_point_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pvp_order_view_end_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMgrGuildHistory_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_attack_selfdestruction_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CLuaScript_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CLuaScriptMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::MyTimer_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_exchange_lend_item_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_map_rate_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_force_download_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_buy_offer_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_attack_keeper_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_cash_event_ini_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_cash_event_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_cum_download_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_buddy_download_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CLuaEventNode_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_unmannedtrader_buy_item_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_post_content_get_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_cash_discount_ini__registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_cash_discount__registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CashItemRemoteStore_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_param_cashitem_dblog_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_result_csi_buy_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_selfleave_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_class_value_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_amine_newowner_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_battle_goal_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_DELAY_PROCESS_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_ANIMUS_RETURN_DELAY_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_nuclear_explosion_success_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_select_guild_master_lastconn_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_insert_patriarch_comm_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_limitedsale_event_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPoint_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMapExtend_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_nuclear_result_code_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_equip_up_item_lv_limit_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_lobby_logout_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CBillingNULL_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_log_sheet_usernum_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CItemStore_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_npc_create_setdata_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_enter_world_result_zone_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_manage_request_clzo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_sheet_logout_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_in_guildbattlerewardmoney_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_reged_char_result_zone_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_unit_bullet_param_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_amine_workstate_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_talik_recvr_list_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_max_point_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPvpCashMng_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_addpvppoint_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_amine_selore_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CItemBox_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CGuildList_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guildroom_enter_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_buy_store_success_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_post_serial_check_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CGuildRoomSystem_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_unmandtrader_cheat_updateregisttime_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_weekly_guild_rank_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_unit_pack_fill_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_post_storage_list_get_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_npclink_check_item_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_throw_skill_result_one_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_server_notify_inform_zone_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_keeper_create_setdata_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_sel_char_result_zone_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guildroom_rent_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_discharge_patriarch_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CLuaLooting_Novus_Item_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_npc_quest_list_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_load_guildbattle_totalrecord_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_chat_multi_far_trans_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCheckSumGuildConverter_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCheckSumGuildData_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_limit_amount_info_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pvp_rank_list_result_data_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_MOVE_LOBBY_DELAY_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CHolyStoneSaveData_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_limit_item_num_info_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPartyModeKillMonsterExpNotify_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CLuaLootingMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_combine_ex_item_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::DfAIMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_be_damaged_player_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_unmannedtrader_regist_item_success_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_result_csi_goods_list_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_update_candidate_wincount_packing_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_log_sheet_lv_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CDummyDraw_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_attack_trap_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guildroom_out_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNetworkEX_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_target_monster_aggro_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_throw_skill_result_other_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_attack_gen_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_update_honor_guild_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_inven_download_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingDataNULL_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_nuclear_create_setdata_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_notify_local_time_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_sheet_lobby_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CFPS_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMgrAccountLobbyHistory_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_vote_process_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_money_supply_gatering_inform_zowb_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_chat_message_receipt_udp_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_unmannedtrader_close_item_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_nuclear_bomb_destruction_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMgrAvatorItemHistory_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderItemState_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderRegistItemInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPvpUserAndGuildRankingSystem_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_amine_moveore_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_param_cash_total_selling_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_possible_battle_guild_list_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::__holy_stone_data_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CHolyScheduleData_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_QUEST_CASH_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_QUEST_CASH_OTHER_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CHolyStoneSystem_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_inform_tax_rate_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_nuclear_position_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_result_change_tax_rate_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::TimeItem_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_sheet_load_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_add_lend_item_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_nuclear_bomb_drop_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_combine_lend_item_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_inputgmoney_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_nuclear_bomb_explosion_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_conditional_event_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_select_timelimit_info_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_alter_cont_effect_time_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_inform_punishment_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_unit_download_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_throw_unit_result_other_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CLuaEventMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_unmandtrader_updateitemstate_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_result_punishment_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_outputgmoney_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pvp_order_view_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_log_sheet_economy_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_atrade_taxrate_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_monster_create_setdata_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_notify_race_boss_winrate_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_trans_gm_msg_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_unmannedtrader_continue_item_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_started_vote_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CHolyKeeper_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_unmannedtrader_Regist_item_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPcBangFavor_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_insert_candidate_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_unmannedtrader_re_regist_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_rank_racerank_guildrank_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_log_case_charselect_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMerchant_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_sf_delay_download_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_joinacguild_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_update_data_for_post_send_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_SKILL_IDX_PER_MASTERY_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_BILLING_FORCE_CLOSE_DELAY_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPlayerAttack_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::LendItemSheet_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::LendItemMng_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_battle_get_gravity_stone_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_insert_timelimit_info_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_base_download_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::ElectProcessor_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMonsterAttack_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_del_char_result_zone_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_forceleave_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_trunk_est_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_move_to_own_stonemap_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_post_send_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_check_query_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_updatereservedschedule_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_battle_suggest_request_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_talik_crystal_exchange_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::qry_case_golden_box_item_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_throw_unit_result_one_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_character_rename_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_itembox_take_new_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_ccrfg_detect_alret_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_select_charserial_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMgrAvatorQuestHistory_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::PatriarchElectProcessor_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pvp_order_view_point_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_src_guild_out_guildbattlecost_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_guild_alter_member_state_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_automine_download_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_moveout_user_result_zone_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_addguildbattleschedule_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_update_vote_available_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_post_return_list_get_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMoneySupplyMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_contsave_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::MonsterSetInfoData_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::R3Camera_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_a_trade_adjust_price_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_trunk_download_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_create_holy_master_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_gm_msg_gmcall_list_response_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_starting_vote_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_sheet_reged_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_radar_char_list_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_Init_action_point_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_sheet_insert_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_insertitem_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_nuclear_find_rader_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_total_guild_rank_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_check_speed_hack_ans_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_item_fanfare_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_sheet_delete_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_select_patriarch_comm_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNuclearBomb_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_buyemblem_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_animus_download_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_move_to_own_stonemap_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_unmannedtrader_Sell_Wait_item_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_nuclear_bomb_position_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_amine_battery_discharge_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_storage_refresh_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_quest_download_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_updateweeklyguildpvppointsum_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_insertguild_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_log_change_class_after_init_class_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::UIDGenerator_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_event_participant_classrefine_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_attack_skill_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_unmandtrader_re_registsingleitem_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_party_member_info_upd_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::RFEvent_ClassRefine_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_update_data_for_trade_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_attack_siege_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_event_set_looting_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_ECONOMY_SYSTEM_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_updateclearguildbattleDayInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRFDBItemLog_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_LTD_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCashDBWorkManager_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::type_info_registry>());
            _wrappers.emplace_back(_STD make_shared<std::registry::ios_base_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::MD5_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::WheatyExceptionReport_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::AINetFile_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::AINet_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::AINetFtp_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRtc_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CProcessThread_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_SYN_HEADER_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_SYN_DATA_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_THREAD_CONFIG_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CTerm_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_talk_crystal_matrial_combine_node_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CTalkCrystalCombineManager_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CAsyncLogInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CAsyncLogBuffer_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CAsyncLogBufferList_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CAsyncLogger_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_action_point_system_ini_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CActionPointSystemMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNetwork_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CChiNetworkEX_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_apex_send_login_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_apex_send_ip_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_apex_send_trans_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_apex_send_logout_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_apex_block_request_wrac_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_trans_account_report_wrac_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_start_world_request_wrac_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_logout_account_request_wrac_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_cashdb_setting_request_wrac_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_holy_quest_report_wrac_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_select_avator_report_wrac_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_open_world_request_wrac_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_character_disconnect_result_wrac_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_apex_id_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_stop_world_request_wrac_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_enter_lobby_report_wrac_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_world_account_ping_wrac_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_user_num_report_wrac_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_fireguard_block_request_wrac_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_enter_world_request_wrac_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::LuaParam3_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_notify_coupon_ensure_time_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_notify_cont_play_time_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_notify_coupon_error_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_notify_remain_coupon_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_notice_move_limit_map_msg_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationCodeStr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_notify_max_pvp_point_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_notify_not_use_premium_cashitem_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_notify_pvp_cash_point_error_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationCodeStrTable_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::TimeLimitJade_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::TimeLimitJadeMng_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::COreAmountMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_ChatStealTargetInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CChatStealSystem_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CGuildMasterEffect_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CWorldSchedule_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CTransportShip_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CGuildBattle_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CGuildBattleState_registry>());
            _wrappers.emplace_back(_STD make_shared<ATL::registry::CTimeSpan_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleState_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleLogger_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleGuildMember_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleGuild_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCircleZone_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CGravityStoneRegener_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CGravityStone_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleField_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CGuildBattleStateList_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleStateNotify_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleStateReady_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleStateCountDown_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleStateRound_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleStateRoundStart_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleStateRoundProcess_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleStateRoundReturnStartPos_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleStateRoundList_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleStateInBattle_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleStateDivide_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleStateReturn_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleStateFin_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleStateList_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattle_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleStateListPool_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CGuildBattleLogger_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CGuildBattleRewardItem_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CGuildBattleRewardItemManager_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CGuildBattleSchedule_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CGuildBattleSchedulePool_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleFieldList_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CGuildBattleReservedSchedule_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CGuildBattleReservedScheduleMapGroup_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CGuildBattleScheduleManager_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CReservedGuildSchedulePage_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CReservedGuildScheduleMapGroup_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CReservedGuildScheduleDayGroup_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CCurrentGuildBattleInfoManager_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CPossibleBattleGuildListManager_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CGuildBattleScheduler_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CLogTypeDBTask_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CWeeklyGuildRankRecord_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CWeeklyGuildRankOwnerInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CWeeklyGuildRankInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CWeeklyGuildRankManager_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CLogTypeDBTaskPool_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CLogTypeDBTaskManager_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CGuildBattleController_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CNormalGuildBattleManager_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CGuildBattleRankManager_registry>());
            _wrappers.emplace_back(_STD make_shared<GUILD_BATTLE::registry::CGuildBattleReservedScheduleListManager_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRaceBuffInfoByHolyQuest_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRaceBuffInfoByHolyQuestfGroup_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRaceBuffInfoByHolyQuestList_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRaceBuffHolyQuestResultInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRaceBuffByHolyQuestProcedure_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRaceBuffManager_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMoveMapLimitRight_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMoveMapLimitRightPortal_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMoveMapLimitRightInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMoveMapLimitRightInfoList_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMoveMapLimitInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMoveMapLimitInfoList_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMoveMapLimitInfoPortal_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMoveMapLimitManager_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMoveMapLimitEnviromentValues_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderGroupDivisionVersionInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderGroupVersionInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderSchedule_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderRequestLimiter_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderUserInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderTradeInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderUserInfoTable_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderScheduler_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderLazyCleaner_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::ControllerTaxRate_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_suggested_matter_change_taxrate_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::TRC_AutoTrade_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderTaxRateManager_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_insert_trc_info_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderItemCodeInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderClassInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderSortType_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderDivisionInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderGroupIDInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderSubClassInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderSubClassFactory_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderSubClassInfoLevel_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderSubClassInfoDefault_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderSubClassInfoForceLiverGrade_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderSubClassInfoCode_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderClassInfoFactory_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderClassInfoTableType_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderClassInfoTableCodeType_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderGroupItemInfoTable_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CHonorGuild_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CUnmannedTraderController_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMapItemStoreList_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CItemStoreManager_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CExchangeEvent_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPostSystemManager_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCashDbWorkerTH_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCashDbWorkerNULL_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCashDbWorkerES_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCashDbWorkerUS_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCashDbWorkerCN_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCashDbWorkerTW_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCashDbWorkerBR_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRusiaBillingMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCashDbWorkerRU_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCashDbWorkerPH_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCashDbWorkerJP_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCashDbWorkerID_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::BNetwork_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CEngNetworkBillEX_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::RECV_DATA_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::Request_Remain_Cash_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::Request_Buy_Item_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CEnglandBillingMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCashDbWorkerGB_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CCashDbWorkerKR_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::ICsSendInterface_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CSUItemSystem_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::AutominePersonalMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_automine_selore_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_automine_battery_insert_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_automine_battery_extract_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_automine_stop_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_amine_infoui_open_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_automine_popore_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_qry_case_make_storage_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_amine_make_storage_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_amine_errmsg_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_automine_alter_dur_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_automine_getoutore_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_automine_uninstall_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_automine_charge_money_db_update_fail_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_automine_uninstall_circle_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_ore_cutting_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_automine_state_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_amine_fixpos_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_automine_install_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_automine_current_state_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_automine_delbattery_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_personal_automine_attacked_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_automine_info_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_automine_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::AutoMineMachine_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::AutoMineMachineMng_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CItemDropMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CTotalGuildRankRecord_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CTotalGuildRankInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CTotalGuildRankManager_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_trans_votepaper_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_notify_vote_score_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::Voter_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_inform_appoint_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_result_appoint_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_propose_appoint_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_notify_final_decision_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_appoint_inform_request_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_result_fcandidacy_list_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_result_code_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_pt_query_appoint_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::SecondCandidateCrystallizer_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::FinalDecisionProcessor_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::FinalDecisionApplyer_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRaceBossWinRate_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::ClassOrderProcessor_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CandidateRegister_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CVoteSystem_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::GMCallMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::DnBuffNode_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::GMRequestData_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMonsterEventSet_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CMonsterEventRespawn_registry>());
            _wrappers.emplace_back(_STD make_shared<RACE_BOSS_MSG::registry::CMsg_registry>());
            _wrappers.emplace_back(_STD make_shared<RACE_BOSS_MSG::registry::CMsgList_registry>());
            _wrappers.emplace_back(_STD make_shared<RACE_BOSS_MSG::registry::CMsgListManager_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRaceBossMsgController_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_cancel_raceboss_msg_result_zoct_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_connection_status_result_zoct_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::cStaticMember_Player_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CBillingID_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CBillingCN_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CBillingBR_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CBillingRU_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CBillingPH_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CBillingJP_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CBillingKR_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CBillingManager_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CHolyStoneSystemDataMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::C24Timer_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::strFILE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CDarkHoleDungeonQuestSetup_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::__error_info_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CDarkHoleDungeonQuest_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_new_member_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_outof_member_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_leader_change_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_quest_info_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_mission_info_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_member_info_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_job_count_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_open_portal_by_react_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_open_all_portal_by_result_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_job_pass_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_mission_pass_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_mission_quest_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_channel_close_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_new_mission_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_timeout_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_ask_reenter_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_real_msg_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_real_add_time_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_fixpositon_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_clear_out_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_open_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_giveup_out_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_enter_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_state_change_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_create_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_destroy_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_darkhole_answer_reenter_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CReturnGate_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CReturnGateController_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CReturnGateCreateParam_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRecallRequest_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CRecallEffectController_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::LtdWriter_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingDataTH_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingFactory_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingFactoryTH_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingFactoryGroup_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingFactoryES_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingDataES_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingDataUS_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingFactoryUS_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingFactoryCN_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingDataCN_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingDataTW_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingFactoryTW_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingFactoryBR_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingDataBR_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingDataRU_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingFactoryRU_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingDataPH_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingFactoryPH_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingDataJP_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingFactoryJP_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingDataID_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingFactoryID_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingDataGB_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingFactoryGB_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingDataKR_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNationSettingFactoryKR_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CNuclearBombMgr_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_post_content_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_post_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_alive_char_result_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_insert_new_quest_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_insert_next_quest_inform_zocl_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CClientDC_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPaintDC_registry>());
            _wrappers.emplace_back(_STD make_shared<ATL::registry::CTraceFileAndLineInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<ATL::registry::CCRTAllocator_registry>());
            _wrappers.emplace_back(_STD make_shared<Define_the_symbol__ATL_MIXED::registry::Thank_you_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::ULI_registry>());
            _wrappers.emplace_back(_STD make_shared<ATL::registry::CComBSTR_registry>());
            _wrappers.emplace_back(_STD make_shared<ATL::registry::CAtlException_registry>());
            _wrappers.emplace_back(_STD make_shared<ATL::registry::CFileTimeSpan_registry>());
            _wrappers.emplace_back(_STD make_shared<ATL::registry::CFileTime_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CTraceSnapshot_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CAtlTraceModuleInfo_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CAtlTraceProcess_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CAtlAllocator_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CAtlTraceSettings_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CAtlTraceModule_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CAtlTraceCategory_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::_R3ENGINE_STATE_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::Sun_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CTextureRender_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::Atmosphere_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CPlayMP3_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CR3Font_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CSprite_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::Sky_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CD3DApplication_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::FONT2DVERTEX_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CD3DArcBall_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CToolCollisionFace_registry>());
            _wrappers.emplace_back(_STD make_shared<registry::CD3DCamera_registry>());
        };
    
        CATFCoreRegistry(const CATFCoreRegistry&){};
    
    public:
        ~CATFCoreRegistry() {
        };
    
        static CATFCoreRegistry& get_instance() {
            static CATFCoreRegistry instance;
            return instance;
        };
    
    public:
        void registry()
        {
            for (auto& w : _wrappers)
                w->registry();
        };
    
    private:
        _STD vector<ImplWrapper_ptr> _wrappers;
    };
END_ATF_NAMESPACE
