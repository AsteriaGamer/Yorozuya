// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CCharacter.hpp"
#include "CMyTimer.hpp"
#include "_dummy_position.hpp"
#include "_monster_fld.hpp"
#include "_object_id.hpp"
#include "_stone_create_setdata.hpp"


START_ATF_NAMESPACE
    struct  CHolyStone : CCharacter
    {
        bool m_bOper;
        int m_nHP;
        int m_nMaxHP;
        unsigned int m_dwLastDestroyTime;
        _monster_fld *m_pRec;
        _dummy_position *m_pDum;
        char m_byMasterRaceCode;
        int m_nDefPart[5];
        int m_nOldRate;
        unsigned int m_dwLastRecoverTime;
        int m_nCurrLootIndex;
        int m_nEndLootIndex;
        int m_nCurrDropIndex;
        unsigned __int16 m_wMagnifications;
        unsigned __int16 m_wRange;
        unsigned __int16 m_wDropCntOnce;
        unsigned __int16 m_wAddCountWithPlayer;
        CMyTimer m_tmrDropTime;
    public:
        void AutoRecover()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyStone*);
            (org_ptr(0x1401373d0L))(this);
        };
        CHolyStone()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyStone*);
            (org_ptr(0x140136d10L))(this);
        };
        void ctor_CHolyStone()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyStone*);
            (org_ptr(0x140136d10L))(this);
        };
        uint16_t CalcCurHPRate()
        {
            using org_ptr = uint16_t (WINAPIV*)(struct CHolyStone*);
            return (org_ptr(0x140138f10L))(this);
        };
        bool Create(struct _stone_create_setdata* pData)
        {
            using org_ptr = bool (WINAPIV*)(struct CHolyStone*, struct _stone_create_setdata*);
            return (org_ptr(0x140136fa0L))(this, pData);
        };
        bool Destroy(char byDestroyCode, struct CCharacter* pAtter)
        {
            using org_ptr = bool (WINAPIV*)(struct CHolyStone*, char, struct CCharacter*);
            return (org_ptr(0x140137140L))(this, byDestroyCode, pAtter);
        };
        void DropItem()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyStone*);
            (org_ptr(0x140137fa0L))(this);
        };
        uint16_t GetAddCountWithPlayer()
        {
            using org_ptr = uint16_t (WINAPIV*)(struct CHolyStone*);
            return (org_ptr(0x140137ee0L))(this);
        };
        int GetAttackDP()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyStone*);
            return (org_ptr(0x140138eb0L))(this);
        };
        int GetDefFC(int nAttactPart, struct CCharacter* pAttChar, int* pnConvertPart)
        {
            using org_ptr = int (WINAPIV*)(struct CHolyStone*, int, struct CCharacter*, int*);
            return (org_ptr(0x1401376f0L))(this, nAttactPart, pAttChar, pnConvertPart);
        };
        float GetDefFacing(int nPart)
        {
            using org_ptr = float (WINAPIV*)(struct CHolyStone*, int);
            return (org_ptr(0x140138e00L))(this, nPart);
        };
        float GetDefGap(int nPart)
        {
            using org_ptr = float (WINAPIV*)(struct CHolyStone*, int);
            return (org_ptr(0x140138da0L))(this, nPart);
        };
        int GetDefSkill(bool bBackAttack)
        {
            using org_ptr = int (WINAPIV*)(struct CHolyStone*, bool);
            return (org_ptr(0x140138cb0L))(this, bBackAttack);
        };
        int GetFireTol()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyStone*);
            return (org_ptr(0x140138ce0L))(this);
        };
        int GetHP()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyStone*);
            return (org_ptr(0x140138be0L))(this);
        };
        int GetLevel()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyStone*);
            return (org_ptr(0x140138c80L))(this);
        };
        int GetMaxHP()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyStone*);
            return (org_ptr(0x140138c00L))(this);
        };
        static unsigned int GetNewStoneSerial()
        {
            using org_ptr = unsigned int (WINAPIV*)();
            return (org_ptr(0x140138fc0L))();
        };
        char* GetObjName()
        {
            using org_ptr = char* (WINAPIV*)(struct CHolyStone*);
            return (org_ptr(0x1401378e0L))(this);
        };
        int GetObjRace()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyStone*);
            return (org_ptr(0x140138ef0L))(this);
        };
        int GetSoilTol()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyStone*);
            return (org_ptr(0x140138d40L))(this);
        };
        int GetWaterTol()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyStone*);
            return (org_ptr(0x140138d10L))(this);
        };
        float GetWeaponAdjust()
        {
            using org_ptr = float (WINAPIV*)(struct CHolyStone*);
            return (org_ptr(0x140138e60L))(this);
        };
        float GetWidth()
        {
            using org_ptr = float (WINAPIV*)(struct CHolyStone*);
            return (org_ptr(0x140138c30L))(this);
        };
        int GetWindTol()
        {
            using org_ptr = int (WINAPIV*)(struct CHolyStone*);
            return (org_ptr(0x140138d70L))(this);
        };
        bool Init(struct _object_id* pID)
        {
            using org_ptr = bool (WINAPIV*)(struct CHolyStone*, struct _object_id*);
            return (org_ptr(0x140136e40L))(this, pID);
        };
        bool IsBeAttackedAble(bool bFirst)
        {
            using org_ptr = bool (WINAPIV*)(struct CHolyStone*, bool);
            return (org_ptr(0x140138ed0L))(this, bFirst);
        };
        bool IsBeDamagedAble(struct CCharacter* pAtter)
        {
            using org_ptr = bool (WINAPIV*)(struct CHolyStone*, struct CCharacter*);
            return (org_ptr(0x140137770L))(this, pAtter);
        };
        bool IsChangedHP(uint16_t wAlterRate)
        {
            using org_ptr = bool (WINAPIV*)(struct CHolyStone*, uint16_t);
            return (org_ptr(0x1402847d0L))(this, wAlterRate);
        };
        void Loop()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyStone*);
            (org_ptr(0x140137370L))(this);
        };
        void OutOfSec()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyStone*);
            (org_ptr(0x140138b90L))(this);
        };
        void SendMsg_Create()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyStone*);
            (org_ptr(0x1401379d0L))(this);
        };
        void SendMsg_Destroy(char byDestroyCode, unsigned int dwDestroySerial)
        {
            using org_ptr = void (WINAPIV*)(struct CHolyStone*, char, unsigned int);
            (org_ptr(0x140137ad0L))(this, byDestroyCode, dwDestroySerial);
        };
        void SendMsg_FixPosition(int n)
        {
            using org_ptr = void (WINAPIV*)(struct CHolyStone*, int);
            (org_ptr(0x140137b80L))(this, n);
        };
        void SendMsg_StoneAlterOper()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyStone*);
            (org_ptr(0x140137cd0L))(this);
        };
        int SetDamage(int nDam, struct CCharacter* pDst, int nDstLv, bool bCrt, int nAttackType, unsigned int dwAttackSerial, bool bJadeReturn)
        {
            using org_ptr = int (WINAPIV*)(struct CHolyStone*, int, struct CCharacter*, int, bool, int, unsigned int, bool);
            return (org_ptr(0x140137590L))(this, nDam, pDst, nDstLv, bCrt, nAttackType, dwAttackSerial, bJadeReturn);
        };
        void SetDropItem()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyStone*);
            (org_ptr(0x140137d80L))(this);
        };
        bool SetHP(int nHP, bool bOver)
        {
            using org_ptr = bool (WINAPIV*)(struct CHolyStone*, int, bool);
            return (org_ptr(0x140137510L))(this, nHP, bOver);
        };
        void SetOper(bool bOper, float fHPRate)
        {
            using org_ptr = void (WINAPIV*)(struct CHolyStone*, bool, float);
            (org_ptr(0x140137290L))(this, bOper, fHPRate);
        };
        ~CHolyStone()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyStone*);
            (org_ptr(0x140136db0L))(this);
        };
        void dtor_CHolyStone()
        {
            using org_ptr = void (WINAPIV*)(struct CHolyStone*);
            (org_ptr(0x140136db0L))(this);
        };
    };
END_ATF_NAMESPACE
