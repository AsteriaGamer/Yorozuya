// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CCryptParamCrete_info.hpp"

/*
START_ATF_NAMESPACE
    namespace detail
    {
        static info::CCryptParamCretector_CCryptParamCrete2_ptr CCryptParamCretector_CCryptParamCrete2_next(nullptr);
        static info::CCryptParamCretector_CCryptParamCrete2_clbk CCryptParamCretector_CCryptParamCrete2_user(nullptr);
        static info::CCryptParamCretedtor_CCryptParamCrete7_ptr CCryptParamCretedtor_CCryptParamCrete7_next(nullptr);
        static info::CCryptParamCretedtor_CCryptParamCrete7_clbk CCryptParamCretedtor_CCryptParamCrete7_user(nullptr);
        
        static void CCryptParamCretector_CCryptParamCrete2_wrapper(struct CCryptParamCrete* _this, struct CryptoPP::AutoSeededRandomPool* prng)
        {
           CCryptParamCretector_CCryptParamCrete2_user(_this, prng, CCryptParamCretector_CCryptParamCrete2_next);
        };
        static void CCryptParamCretedtor_CCryptParamCrete7_wrapper(struct CCryptParamCrete* _this)
        {
           CCryptParamCretedtor_CCryptParamCrete7_user(_this, CCryptParamCretedtor_CCryptParamCrete7_next);
        };
        
        static hook_record CCryptParamCrete_functions[] = {
        {   (LPVOID)0x140448170L,
            (LPVOID *)&CCryptParamCretector_CCryptParamCrete2_user,
            (LPVOID *)&CCryptParamCretector_CCryptParamCrete2_next,
            (LPVOID)cast_pointer_function(CCryptParamCretector_CCryptParamCrete2_wrapper),
            (LPVOID)cast_pointer_function((void(CCryptParamCrete::*)(struct CryptoPP::AutoSeededRandomPool*))&CCryptParamCrete::ctor_CCryptParamCrete) },
        {   (LPVOID)0x14044e3f0L,
            (LPVOID *)&CCryptParamCretedtor_CCryptParamCrete7_user,
            (LPVOID *)&CCryptParamCretedtor_CCryptParamCrete7_next,
            (LPVOID)cast_pointer_function(CCryptParamCretedtor_CCryptParamCrete7_wrapper),
            (LPVOID)cast_pointer_function((void(CCryptParamCrete::*)())&CCryptParamCrete::dtor_CCryptParamCrete) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
*/