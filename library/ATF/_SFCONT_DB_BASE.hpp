// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"


START_ATF_NAMESPACE
    struct _SFCONT_DB_BASE
    {
        struct _LIST
        {
            unsigned int dwKey;
        public:
            char GetEffectCode()
            {
                using org_ptr = char (WINAPIV*)(struct _LIST*);
                return (org_ptr(0x14007a480L))(this);
            };
            uint16_t GetEffectIndex()
            {
                using org_ptr = uint16_t (WINAPIV*)(struct _LIST*);
                return (org_ptr(0x14007a4a0L))(this);
            };
            uint16_t GetLeftTime()
            {
                using org_ptr = uint16_t (WINAPIV*)(struct _LIST*);
                return (org_ptr(0x14007a4e0L))(this);
            };
            char GetLv()
            {
                using org_ptr = char (WINAPIV*)(struct _LIST*);
                return (org_ptr(0x14007a4c0L))(this);
            };
            char GetOrder()
            {
                using org_ptr = char (WINAPIV*)(struct _LIST*);
                return (org_ptr(0x14007a460L))(this);
            };
            void Init()
            {
                using org_ptr = void (WINAPIV*)(struct _LIST*);
                (org_ptr(0x140076bb0L))(this);
            };
            bool IsFilled()
            {
                using org_ptr = bool (WINAPIV*)(struct _LIST*);
                return (org_ptr(0x14007a500L))(this);
            };
            void SetKey(char pl_byOrder, char pl_byEffectCode, uint16_t pl_wEffectIndex, char pl_byLv, uint16_t pl_wLeftTime)
            {
                using org_ptr = void (WINAPIV*)(struct _LIST*, char, char, uint16_t, char, uint16_t);
                (org_ptr(0x140120b60L))(this, pl_byOrder, pl_byEffectCode, pl_wEffectIndex, pl_byLv, pl_wLeftTime);
            };
            void SetLeftTime(uint16_t pl_wLeftTime)
            {
                using org_ptr = void (WINAPIV*)(struct _LIST*, uint16_t);
                (org_ptr(0x140120c30L))(this, pl_wLeftTime);
            };
            void SetOrder(char pl_byOrder)
            {
                using org_ptr = void (WINAPIV*)(struct _LIST*, char);
                (org_ptr(0x14007d320L))(this, pl_byOrder);
            };
        };
        _LIST m_List[2][8];
    public:
        void Init()
        {
            using org_ptr = void (WINAPIV*)(struct _SFCONT_DB_BASE*);
            (org_ptr(0x140076b00L))(this);
        };
        _SFCONT_DB_BASE()
        {
            using org_ptr = void (WINAPIV*)(struct _SFCONT_DB_BASE*);
            (org_ptr(0x140076ab0L))(this);
        };
        void ctor__SFCONT_DB_BASE()
        {
            using org_ptr = void (WINAPIV*)(struct _SFCONT_DB_BASE*);
            (org_ptr(0x140076ab0L))(this);
        };
    };
END_ATF_NAMESPACE
