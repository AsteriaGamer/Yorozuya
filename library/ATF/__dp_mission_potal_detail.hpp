// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "__dp_mission_potal_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::__dp_mission_potalctor___dp_mission_potal2_ptr __dp_mission_potalctor___dp_mission_potal2_next(nullptr);
        static info::__dp_mission_potalctor___dp_mission_potal2_clbk __dp_mission_potalctor___dp_mission_potal2_user(nullptr);
        static info::__dp_mission_potalfind4_ptr __dp_mission_potalfind4_next(nullptr);
        static info::__dp_mission_potalfind4_clbk __dp_mission_potalfind4_user(nullptr);
        static info::__dp_mission_potalset6_ptr __dp_mission_potalset6_next(nullptr);
        static info::__dp_mission_potalset6_clbk __dp_mission_potalset6_user(nullptr);
        static info::__dp_mission_potaldtor___dp_mission_potal8_ptr __dp_mission_potaldtor___dp_mission_potal8_next(nullptr);
        static info::__dp_mission_potaldtor___dp_mission_potal8_clbk __dp_mission_potaldtor___dp_mission_potal8_user(nullptr);
        
        static void __dp_mission_potalctor___dp_mission_potal2_wrapper(struct __dp_mission_potal* _this)
        {
           __dp_mission_potalctor___dp_mission_potal2_user(_this, __dp_mission_potalctor___dp_mission_potal2_next);
        };
        static bool __dp_mission_potalfind4_wrapper(struct __dp_mission_potal* _this, char* pcode)
        {
           return __dp_mission_potalfind4_user(_this, pcode, __dp_mission_potalfind4_next);
        };
        static void __dp_mission_potalset6_wrapper(struct __dp_mission_potal* _this, char* szCode)
        {
           __dp_mission_potalset6_user(_this, szCode, __dp_mission_potalset6_next);
        };
        static void __dp_mission_potaldtor___dp_mission_potal8_wrapper(struct __dp_mission_potal* _this)
        {
           __dp_mission_potaldtor___dp_mission_potal8_user(_this, __dp_mission_potaldtor___dp_mission_potal8_next);
        };
        
        static hook_record __dp_mission_potal_functions[] = {
        {   (LPVOID)0x140272d20L,
            (LPVOID *)&__dp_mission_potalctor___dp_mission_potal2_user,
            (LPVOID *)&__dp_mission_potalctor___dp_mission_potal2_next,
            (LPVOID)cast_pointer_function(__dp_mission_potalctor___dp_mission_potal2_wrapper),
            (LPVOID)cast_pointer_function((void(__dp_mission_potal::*)())&__dp_mission_potal::ctor___dp_mission_potal) },
        {   (LPVOID)0x14026f780L,
            (LPVOID *)&__dp_mission_potalfind4_user,
            (LPVOID *)&__dp_mission_potalfind4_next,
            (LPVOID)cast_pointer_function(__dp_mission_potalfind4_wrapper),
            (LPVOID)cast_pointer_function((bool(__dp_mission_potal::*)(char*))&__dp_mission_potal::find) },
        {   (LPVOID)0x14027a190L,
            (LPVOID *)&__dp_mission_potalset6_user,
            (LPVOID *)&__dp_mission_potalset6_next,
            (LPVOID)cast_pointer_function(__dp_mission_potalset6_wrapper),
            (LPVOID)cast_pointer_function((void(__dp_mission_potal::*)(char*))&__dp_mission_potal::set) },
        {   (LPVOID)0x140272de0L,
            (LPVOID *)&__dp_mission_potaldtor___dp_mission_potal8_user,
            (LPVOID *)&__dp_mission_potaldtor___dp_mission_potal8_next,
            (LPVOID)cast_pointer_function(__dp_mission_potaldtor___dp_mission_potal8_wrapper),
            (LPVOID)cast_pointer_function((void(__dp_mission_potal::*)())&__dp_mission_potal::dtor___dp_mission_potal) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
