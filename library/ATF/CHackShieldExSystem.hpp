// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "BASE_HACKSHEILD_PARAM.hpp"
#include "CMyTimer.hpp"
#include "INationGameGuardSystem.hpp"
#include "_MSG_HEADER.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 8)
    struct  CHackShieldExSystem : INationGameGuardSystem
    {
        BASE_HACKSHEILD_PARAM **m_ppNodeArray;
        bool m_bInit;
        bool m_bActive;
        CMyTimer m_tmLoopTime;
        unsigned int m_dwCurrentCheckIndex;
    public:
        CHackShieldExSystem()
        {
            using org_ptr = void (WINAPIV*)(struct CHackShieldExSystem*);
            (org_ptr(0x140416cb0L))(this);
        };
        void ctor_CHackShieldExSystem()
        {
            using org_ptr = void (WINAPIV*)(struct CHackShieldExSystem*);
            (org_ptr(0x140416cb0L))(this);
        };
        struct BASE_HACKSHEILD_PARAM* GetParam(unsigned int n)
        {
            using org_ptr = struct BASE_HACKSHEILD_PARAM* (WINAPIV*)(struct CHackShieldExSystem*, unsigned int);
            return (org_ptr(0x140417080L))(this, n);
        };
        bool IsActive()
        {
            using org_ptr = bool (WINAPIV*)(struct CHackShieldExSystem*);
            return (org_ptr(0x140417720L))(this);
        };
        bool IsInit()
        {
            using org_ptr = bool (WINAPIV*)(struct CHackShieldExSystem*);
            return (org_ptr(0x140417740L))(this);
        };
        bool OnCheckSession_FirstVerify(int n)
        {
            using org_ptr = bool (WINAPIV*)(struct CHackShieldExSystem*, int);
            return (org_ptr(0x140417250L))(this, n);
        };
        void OnConnectSession(int n)
        {
            using org_ptr = void (WINAPIV*)(struct CHackShieldExSystem*, int);
            (org_ptr(0x1404170d0L))(this, n);
        };
        void OnDisConnectSession(int n)
        {
            using org_ptr = void (WINAPIV*)(struct CHackShieldExSystem*, int);
            (org_ptr(0x140417140L))(this, n);
        };
        void OnLoop()
        {
            using org_ptr = void (WINAPIV*)(struct CHackShieldExSystem*);
            (org_ptr(0x140417390L))(this);
        };
        void OnLoopSession(int n)
        {
            using org_ptr = void (WINAPIV*)(struct CHackShieldExSystem*, int);
            (org_ptr(0x1404171a0L))(this, n);
        };
        bool RecvClientLine(int n, struct _MSG_HEADER* pHeader, char* pMsg)
        {
            using org_ptr = bool (WINAPIV*)(struct CHackShieldExSystem*, int, struct _MSG_HEADER*, char*);
            return (org_ptr(0x1404172c0L))(this, n, pHeader, pMsg);
        };
        ~CHackShieldExSystem()
        {
            using org_ptr = void (WINAPIV*)(struct CHackShieldExSystem*);
            (org_ptr(0x140416d70L))(this);
        };
        void dtor_CHackShieldExSystem()
        {
            using org_ptr = void (WINAPIV*)(struct CHackShieldExSystem*);
            (org_ptr(0x140416d70L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
