// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "strFILEVtbl.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 8)
    struct strFILE
    {
        strFILEVtbl *vfptr;
        char *m_pLoadStr;
        char *m_pReadStr;
        unsigned int m_dwLoadSize;
    public:
        bool load(char* pszFileName)
        {
            using org_ptr = bool (WINAPIV*)(struct strFILE*, char*);
            return (org_ptr(0x140271e20L))(this, pszFileName);
        };
        int read_line_count()
        {
            using org_ptr = int (WINAPIV*)(struct strFILE*);
            return (org_ptr(0x14027a6b0L))(this);
        };
        strFILE()
        {
            using org_ptr = void (WINAPIV*)(struct strFILE*);
            (org_ptr(0x140271d40L))(this);
        };
        void ctor_strFILE()
        {
            using org_ptr = void (WINAPIV*)(struct strFILE*);
            (org_ptr(0x140271d40L))(this);
        };
        bool word(char* poutszWord)
        {
            using org_ptr = bool (WINAPIV*)(struct strFILE*, char*);
            return (org_ptr(0x140272070L))(this, poutszWord);
        };
        bool word(long double* pdoutVal)
        {
            using org_ptr = bool (WINAPIV*)(struct strFILE*, long double*);
            return (org_ptr(0x14027a0c0L))(this, pdoutVal);
        };
        bool word(float* pfoutVal)
        {
            using org_ptr = bool (WINAPIV*)(struct strFILE*, float*);
            return (org_ptr(0x140279fe0L))(this, pfoutVal);
        };
        bool word(int* pnoutVal)
        {
            using org_ptr = bool (WINAPIV*)(struct strFILE*, int*);
            return (org_ptr(0x140279eb0L))(this, pnoutVal);
        };
        ~strFILE()
        {
            using org_ptr = void (WINAPIV*)(struct strFILE*);
            (org_ptr(0x140271da0L))(this);
        };
        void dtor_strFILE()
        {
            using org_ptr = void (WINAPIV*)(struct strFILE*);
            (org_ptr(0x140271da0L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
