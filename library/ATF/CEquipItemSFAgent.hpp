// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CPlayer.hpp"
#include "_STORAGE_LIST.hpp"
#include "_sf_continous.hpp"
#include "_skill_fld.hpp"


START_ATF_NAMESPACE
    struct CEquipItemSFAgent
    {
        struct _requireSlot
        {
            bool m_SlotIndex[8];
        public:
            void Init()
            {
                using org_ptr = void (WINAPIV*)(struct _requireSlot*);
                (org_ptr(0x140122f60L))(this);
            };
            _requireSlot()
            {
                using org_ptr = void (WINAPIV*)(struct _requireSlot*);
                (org_ptr(0x140122f10L))(this);
            };
            void ctor__requireSlot()
            {
                using org_ptr = void (WINAPIV*)(struct _requireSlot*);
                (org_ptr(0x140122f10L))(this);
            };
        };
        CPlayer *m_pMaster;
        _sf_continous *m_pContSF[8];
    public:
        void AllEndContSF()
        {
            using org_ptr = void (WINAPIV*)(struct CEquipItemSFAgent*);
            (org_ptr(0x140121040L))(this);
        };
        CEquipItemSFAgent()
        {
            using org_ptr = void (WINAPIV*)(struct CEquipItemSFAgent*);
            (org_ptr(0x140120f90L))(this);
        };
        void ctor_CEquipItemSFAgent()
        {
            using org_ptr = void (WINAPIV*)(struct CEquipItemSFAgent*);
            (org_ptr(0x140120f90L))(this);
        };
        void EndContSF(struct _sf_continous* pSF_Cont)
        {
            using org_ptr = void (WINAPIV*)(struct CEquipItemSFAgent*, struct _sf_continous*);
            (org_ptr(0x1401215e0L))(this, pSF_Cont);
        };
        float GetBoosterAddSpeed()
        {
            using org_ptr = float (WINAPIV*)(struct CEquipItemSFAgent*);
            return (org_ptr(0x140121890L))(this);
        };
        struct _STORAGE_LIST::_db_con* GetEquip(int nEquipTblIndex)
        {
            using org_ptr = struct _STORAGE_LIST::_db_con* (WINAPIV*)(struct CEquipItemSFAgent*, int);
            return (org_ptr(0x1401210a0L))(this, nEquipTblIndex);
        };
        struct _sf_continous* GetEquipSFCont(int nEquipTblIndex)
        {
            using org_ptr = struct _sf_continous* (WINAPIV*)(struct CEquipItemSFAgent*, int);
            return (org_ptr(0x140121140L))(this, nEquipTblIndex);
        };
        bool GetRequireSFSlot(struct _requireSlot* pSlot, struct _skill_fld* pSkillFld)
        {
            using org_ptr = bool (WINAPIV*)(struct CEquipItemSFAgent*, struct _requireSlot*, struct _skill_fld*);
            return (org_ptr(0x140121290L))(this, pSlot, pSkillFld);
        };
        void Init(struct CPlayer* pMaster)
        {
            using org_ptr = void (WINAPIV*)(struct CEquipItemSFAgent*, struct CPlayer*);
            (org_ptr(0x140120fe0L))(this, pMaster);
        };
        char IsEnableSkill(struct _skill_fld* pSkill)
        {
            using org_ptr = char (WINAPIV*)(struct CEquipItemSFAgent*, struct _skill_fld*);
            return (org_ptr(0x140121180L))(this, pSkill);
        };
        char IsEnableSkill(int nEquipTblIndex, struct _skill_fld* pSkill)
        {
            using org_ptr = char (WINAPIV*)(struct CEquipItemSFAgent*, int, struct _skill_fld*);
            return (org_ptr(0x140121200L))(this, nEquipTblIndex, pSkill);
        };
        bool IsUseBooster()
        {
            using org_ptr = bool (WINAPIV*)(struct CEquipItemSFAgent*);
            return (org_ptr(0x140121780L))(this);
        };
        void ReleaseSFCont(int nEquipTblIndex)
        {
            using org_ptr = void (WINAPIV*)(struct CEquipItemSFAgent*, int);
            (org_ptr(0x140121670L))(this, nEquipTblIndex);
        };
        float SearchItemAddSpeed(struct _STORAGE_LIST::_db_con* pItem)
        {
            using org_ptr = float (WINAPIV*)(struct CEquipItemSFAgent*, struct _STORAGE_LIST::_db_con*);
            return (org_ptr(0x1401217e0L))(this, pItem);
        };
        void SetSFCont(int nEquipTblIndex, struct _sf_continous* pSF)
        {
            using org_ptr = void (WINAPIV*)(struct CEquipItemSFAgent*, int, struct _sf_continous*);
            (org_ptr(0x1401212e0L))(this, nEquipTblIndex, pSF);
        };
        void StartContSF(struct _sf_continous* pSF_Cont)
        {
            using org_ptr = void (WINAPIV*)(struct CEquipItemSFAgent*, struct _sf_continous*);
            (org_ptr(0x140121490L))(this, pSF_Cont);
        };
        ~CEquipItemSFAgent()
        {
            using org_ptr = void (WINAPIV*)(struct CEquipItemSFAgent*);
            (org_ptr(0x140073b00L))(this);
        };
        void dtor_CEquipItemSFAgent()
        {
            using org_ptr = void (WINAPIV*)(struct CEquipItemSFAgent*);
            (org_ptr(0x140073b00L))(this);
        };
    };
END_ATF_NAMESPACE
