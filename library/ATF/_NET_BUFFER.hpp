// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CNetCriticalSection.hpp"


START_ATF_NAMESPACE
    struct _NET_BUFFER
    {
        unsigned int m_nMaxSize;
        unsigned int m_nEtrSize;
        int m_dwPopRot;
        int m_dwPopPnt;
        int m_dwPushRot;
        int m_dwPushPnt;
        char *m_sMainBuffer;
        CNetCriticalSection m_csPush;
        CNetCriticalSection m_csPop;
        char *m_sTempBuffer;
    public:
        void AddPopPos(unsigned int dwAddSize)
        {
            using org_ptr = void (WINAPIV*)(struct _NET_BUFFER*, unsigned int);
            (org_ptr(0x14047d5c0L))(this, dwAddSize);
        };
        void AddPushPos(unsigned int dwAddSize)
        {
            using org_ptr = void (WINAPIV*)(struct _NET_BUFFER*, unsigned int);
            (org_ptr(0x14047d4f0L))(this, dwAddSize);
        };
        bool AllocBuffer(int nMaxSize, int nEtrSize, char* pTemp)
        {
            using org_ptr = bool (WINAPIV*)(struct _NET_BUFFER*, int, int, char*);
            return (org_ptr(0x14047d080L))(this, nMaxSize, nEtrSize, pTemp);
        };
        int GetLeftLoadSize()
        {
            using org_ptr = int (WINAPIV*)(struct _NET_BUFFER*);
            return (org_ptr(0x14047d420L))(this);
        };
        char* GetPopPoint(bool* pbMiss)
        {
            using org_ptr = char* (WINAPIV*)(struct _NET_BUFFER*, bool*);
            return (org_ptr(0x14047d690L))(this, pbMiss);
        };
        char* GetPushPos()
        {
            using org_ptr = char* (WINAPIV*)(struct _NET_BUFFER*);
            return (org_ptr(0x14047d400L))(this);
        };
        char* GetSendPoint(int* pnSendSize, bool* pMiss)
        {
            using org_ptr = char* (WINAPIV*)(struct _NET_BUFFER*, int*, bool*);
            return (org_ptr(0x14047d9b0L))(this, pnSendSize, pMiss);
        };
        void Init()
        {
            using org_ptr = void (WINAPIV*)(struct _NET_BUFFER*);
            (org_ptr(0x14047d140L))(this);
        };
        _NET_BUFFER()
        {
            using org_ptr = void (WINAPIV*)(struct _NET_BUFFER*);
            (org_ptr(0x14047ce20L))(this);
        };
        void ctor__NET_BUFFER()
        {
            using org_ptr = void (WINAPIV*)(struct _NET_BUFFER*);
            (org_ptr(0x14047ce20L))(this);
        };
        ~_NET_BUFFER()
        {
            using org_ptr = void (WINAPIV*)(struct _NET_BUFFER*);
            (org_ptr(0x14047cf60L))(this);
        };
        void dtor__NET_BUFFER()
        {
            using org_ptr = void (WINAPIV*)(struct _NET_BUFFER*);
            (org_ptr(0x14047cf60L))(this);
        };
    };
END_ATF_NAMESPACE
