// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "global.hpp"


START_ATF_NAMESPACE
    namespace global
    {
        namespace info
        {
            using globalARGBToJpegFile1_ptr = int64_t (WINAPIV*)(char*, uint8_t*, unsigned int, unsigned int, unsigned int, int, int);
            using globalARGBToJpegFile1_clbk = int64_t (WINAPIV*)(char*, uint8_t*, unsigned int, unsigned int, unsigned int, int, int, globalARGBToJpegFile1_ptr);
            using globalAddEnvVariable3_ptr = int (WINAPIV*)(char*, char*, int);
            using globalAddEnvVariable3_clbk = int (WINAPIV*)(char*, char*, int, globalAddEnvVariable3_ptr);
            using globalAdjustIndependenceR3M4_ptr = void (WINAPIV*)(struct _R3MATERIAL*, int32_t, int32_t);
            using globalAdjustIndependenceR3M4_clbk = void (WINAPIV*)(struct _R3MATERIAL*, int32_t, int32_t, globalAdjustIndependenceR3M4_ptr);
            using globalAfterRenderOneLayer5_ptr = void (WINAPIV*)(struct CVertexBuffer*, struct _BSP_MAT_GROUP*);
            using globalAfterRenderOneLayer5_clbk = void (WINAPIV*)(struct CVertexBuffer*, struct _BSP_MAT_GROUP*, globalAfterRenderOneLayer5_ptr);
            using globalAfterRenderSetting6_ptr = void (WINAPIV*)(int, struct CVertexBuffer*, struct _BSP_MAT_GROUP*);
            using globalAfterRenderSetting6_clbk = void (WINAPIV*)(int, struct CVertexBuffer*, struct _BSP_MAT_GROUP*, globalAfterRenderSetting6_ptr);
            using globalAfxAssertFailedLine7_ptr = int64_t (WINAPIV*)(char*, int);
            using globalAfxAssertFailedLine7_clbk = int64_t (WINAPIV*)(char*, int, globalAfxAssertFailedLine7_ptr);
            using globalAfxCrtErrorCheck9_ptr = int (WINAPIV*)(int);
            using globalAfxCrtErrorCheck9_clbk = int (WINAPIV*)(int, globalAfxCrtErrorCheck9_ptr);
            using globalAfxEnableControlContainer10_ptr = void (WINAPIV*)(struct COccManager*);
            using globalAfxEnableControlContainer10_clbk = void (WINAPIV*)(struct COccManager*, globalAfxEnableControlContainer10_ptr);
            using globalAfxGetInstanceHandle11_ptr = HINSTANCE (WINAPIV*)();
            using globalAfxGetInstanceHandle11_clbk = HINSTANCE (WINAPIV*)(globalAfxGetInstanceHandle11_ptr);
            using globalAfxGetModuleState12_ptr = struct AFX_MODULE_STATE* (WINAPIV*)();
            using globalAfxGetModuleState12_clbk = struct AFX_MODULE_STATE* (WINAPIV*)(globalAfxGetModuleState12_ptr);
            using globalAfxInitialize13_ptr = int (WINAPIV*)(int, unsigned int);
            using globalAfxInitialize13_clbk = int (WINAPIV*)(int, unsigned int, globalAfxInitialize13_ptr);
            using globalAfxThrowInvalidArgException14_ptr = void (WINAPIV*)();
            using globalAfxThrowInvalidArgException14_clbk = void (WINAPIV*)(globalAfxThrowInvalidArgException14_ptr);
            using globalAfxThrowMemoryException15_ptr = void (WINAPIV*)();
            using globalAfxThrowMemoryException15_clbk = void (WINAPIV*)(globalAfxThrowMemoryException15_ptr);
            using globalAfxThrowOleException16_ptr = void (WINAPIV*)(int32_t);
            using globalAfxThrowOleException16_clbk = void (WINAPIV*)(int32_t, globalAfxThrowOleException16_ptr);
            using globalAfxWinMain17_ptr = int64_t (WINAPIV*)(HINSTANCE, HINSTANCE, char*, int);
            using globalAfxWinMain17_clbk = int64_t (WINAPIV*)(HINSTANCE, HINSTANCE, char*, int, globalAfxWinMain17_ptr);
            using globalAtlA2WHelper19_ptr = wchar_t* (WINAPIV*)(wchar_t*, char*, int, unsigned int);
            using globalAtlA2WHelper19_clbk = wchar_t* (WINAPIV*)(wchar_t*, char*, int, unsigned int, globalAtlA2WHelper19_ptr);
            using globalAtlW2AHelper21_ptr = char* (WINAPIV*)(char*, wchar_t*, int, unsigned int);
            using globalAtlW2AHelper21_clbk = char* (WINAPIV*)(char*, wchar_t*, int, unsigned int, globalAtlW2AHelper21_ptr);
            using globalAtoH23_ptr = void (WINAPIV*)(char*, char*, int);
            using globalAtoH23_clbk = void (WINAPIV*)(char*, char*, int, globalAtoH23_ptr);
            using globalAuthorityFilter25_ptr = bool (WINAPIV*)(struct CHEAT_COMMAND*, struct CPlayer*);
            using globalAuthorityFilter25_clbk = bool (WINAPIV*)(struct CHEAT_COMMAND*, struct CPlayer*, globalAuthorityFilter25_ptr);
            using globalBGRFromRGB26_ptr = int64_t (WINAPIV*)(uint8_t*, unsigned int, unsigned int);
            using globalBGRFromRGB26_clbk = int64_t (WINAPIV*)(uint8_t*, unsigned int, unsigned int, globalBGRFromRGB26_ptr);
            using globalBlendOff27_ptr = void (WINAPIV*)();
            using globalBlendOff27_clbk = void (WINAPIV*)(globalBlendOff27_ptr);
            using globalBlendOn28_ptr = void (WINAPIV*)(int);
            using globalBlendOn28_clbk = void (WINAPIV*)(int, globalBlendOn28_ptr);
            using globalBlurFilterShader29_ptr = void (WINAPIV*)(uint32_t, struct CTextureRender*, struct CTextureRender*);
            using globalBlurFilterShader29_clbk = void (WINAPIV*)(uint32_t, struct CTextureRender*, struct CTextureRender*, globalBlurFilterShader29_ptr);
            using globalBlurFilterSprite30_ptr = void (WINAPIV*)(struct CTextureRender*, uint32_t, void*);
            using globalBlurFilterSprite30_clbk = void (WINAPIV*)(struct CTextureRender*, uint32_t, void*, globalBlurFilterSprite30_ptr);
            using globalBlurShaderVSPS31_ptr = int32_t (WINAPIV*)(uint32_t, struct CTextureRender*, struct CTextureRender*);
            using globalBlurShaderVSPS31_clbk = int32_t (WINAPIV*)(uint32_t, struct CTextureRender*, struct CTextureRender*, globalBlurShaderVSPS31_ptr);
            using globalBtoH33_ptr = char (WINAPIV*)(char);
            using globalBtoH33_clbk = char (WINAPIV*)(char, globalBtoH33_ptr);
            using globalByteSortForShort34_ptr = void (WINAPIV*)(uint32_t, uint32_t*, int16_t*, uint32_t*, int16_t*);
            using globalByteSortForShort34_clbk = void (WINAPIV*)(uint32_t, uint32_t*, int16_t*, uint32_t*, int16_t*, globalByteSortForShort34_ptr);
            using globalCN_CalculateSunAndFieldColor35_ptr = void (WINAPIV*)(float);
            using globalCN_CalculateSunAndFieldColor35_clbk = void (WINAPIV*)(float, globalCN_CalculateSunAndFieldColor35_ptr);
            using globalCN_GetAccselateTime36_ptr = float (WINAPIV*)();
            using globalCN_GetAccselateTime36_clbk = float (WINAPIV*)(globalCN_GetAccselateTime36_ptr);
            using globalCN_GetAtmosphere37_ptr = struct Atmosphere* (WINAPIV*)();
            using globalCN_GetAtmosphere37_clbk = struct Atmosphere* (WINAPIV*)(globalCN_GetAtmosphere37_ptr);
            using globalCN_GetDayTime38_ptr = void (WINAPIV*)(uint32_t*, uint32_t*, uint32_t*);
            using globalCN_GetDayTime38_clbk = void (WINAPIV*)(uint32_t*, uint32_t*, uint32_t*, globalCN_GetDayTime38_ptr);
            using globalCN_GetDayTime39_ptr = float (WINAPIV*)();
            using globalCN_GetDayTime39_clbk = float (WINAPIV*)(globalCN_GetDayTime39_ptr);
            using globalCN_GetFieldColor40_ptr = uint32_t (WINAPIV*)();
            using globalCN_GetFieldColor40_clbk = uint32_t (WINAPIV*)(globalCN_GetFieldColor40_ptr);
            using globalCN_GetFogColor41_ptr = uint32_t (WINAPIV*)(float*);
            using globalCN_GetFogColor41_clbk = uint32_t (WINAPIV*)(float*, globalCN_GetFogColor41_ptr);
            using globalCN_GetRealDayTime42_ptr = void (WINAPIV*)(uint32_t*, uint32_t*, uint32_t*);
            using globalCN_GetRealDayTime42_clbk = void (WINAPIV*)(uint32_t*, uint32_t*, uint32_t*, globalCN_GetRealDayTime42_ptr);
            using globalCN_GetRealDayTime43_ptr = float (WINAPIV*)();
            using globalCN_GetRealDayTime43_clbk = float (WINAPIV*)(globalCN_GetRealDayTime43_ptr);
            using globalCN_GetSky44_ptr = Sky* (WINAPIV*)();
            using globalCN_GetSky44_clbk = Sky* (WINAPIV*)(globalCN_GetSky44_ptr);
            using globalCN_GetSun45_ptr = struct Sun* (WINAPIV*)();
            using globalCN_GetSun45_clbk = struct Sun* (WINAPIV*)(globalCN_GetSun45_ptr);
            using globalCN_GetSunColor46_ptr = uint32_t (WINAPIV*)();
            using globalCN_GetSunColor46_clbk = uint32_t (WINAPIV*)(globalCN_GetSunColor46_ptr);
            using globalCN_GetSunDirection47_ptr = void (WINAPIV*)(float*);
            using globalCN_GetSunDirection47_clbk = void (WINAPIV*)(float*, globalCN_GetSunDirection47_ptr);
            using globalCN_GetWeather48_ptr = float (WINAPIV*)();
            using globalCN_GetWeather48_clbk = float (WINAPIV*)(globalCN_GetWeather48_ptr);
            using globalCN_InvalidateNature49_ptr = void (WINAPIV*)();
            using globalCN_InvalidateNature49_clbk = void (WINAPIV*)(globalCN_InvalidateNature49_ptr);
            using globalCN_IsEnableSky50_ptr = int64_t (WINAPIV*)();
            using globalCN_IsEnableSky50_clbk = int64_t (WINAPIV*)(globalCN_IsEnableSky50_ptr);
            using globalCN_MixDayColor51_ptr = uint32_t (WINAPIV*)(uint32_t);
            using globalCN_MixDayColor51_clbk = uint32_t (WINAPIV*)(uint32_t, globalCN_MixDayColor51_ptr);
            using globalCN_NatureFrameMove52_ptr = void (WINAPIV*)();
            using globalCN_NatureFrameMove52_clbk = void (WINAPIV*)(globalCN_NatureFrameMove52_ptr);
            using globalCN_RenderSky53_ptr = void (WINAPIV*)();
            using globalCN_RenderSky53_clbk = void (WINAPIV*)(globalCN_RenderSky53_ptr);
            using globalCN_RestoreNature54_ptr = void (WINAPIV*)();
            using globalCN_RestoreNature54_clbk = void (WINAPIV*)(globalCN_RestoreNature54_ptr);
            using globalCN_SetAccselateTime55_ptr = void (WINAPIV*)(float);
            using globalCN_SetAccselateTime55_clbk = void (WINAPIV*)(float, globalCN_SetAccselateTime55_ptr);
            using globalCN_SetDayTime56_ptr = void (WINAPIV*)(float);
            using globalCN_SetDayTime56_clbk = void (WINAPIV*)(float, globalCN_SetDayTime56_ptr);
            using globalCN_SetDayTime57_ptr = void (WINAPIV*)(uint32_t, uint32_t, uint32_t);
            using globalCN_SetDayTime57_clbk = void (WINAPIV*)(uint32_t, uint32_t, uint32_t, globalCN_SetDayTime57_ptr);
            using globalCN_SetEnableSky58_ptr = void (WINAPIV*)(int);
            using globalCN_SetEnableSky58_clbk = void (WINAPIV*)(int, globalCN_SetEnableSky58_ptr);
            using globalCN_SetRealDayTime59_ptr = void (WINAPIV*)(float);
            using globalCN_SetRealDayTime59_clbk = void (WINAPIV*)(float, globalCN_SetRealDayTime59_ptr);
            using globalCN_SetRealDayTime60_ptr = void (WINAPIV*)(uint32_t, uint32_t, uint32_t);
            using globalCN_SetRealDayTime60_clbk = void (WINAPIV*)(uint32_t, uint32_t, uint32_t, globalCN_SetRealDayTime60_ptr);
            using globalCN_SetWeather61_ptr = void (WINAPIV*)(float);
            using globalCN_SetWeather61_clbk = void (WINAPIV*)(float, globalCN_SetWeather61_ptr);
            using globalCN_SkyVertexShaderConstants62_ptr = void (WINAPIV*)();
            using globalCN_SkyVertexShaderConstants62_clbk = void (WINAPIV*)(globalCN_SkyVertexShaderConstants62_ptr);
            using globalCalcBi_n63_ptr = float (WINAPIV*)(int, int, double);
            using globalCalcBi_n63_clbk = float (WINAPIV*)(int, int, double, globalCalcBi_n63_ptr);
            using globalCalcCodeKey65_ptr = unsigned int* (WINAPIV*)(unsigned int*);
            using globalCalcCodeKey65_clbk = unsigned int* (WINAPIV*)(unsigned int*, globalCalcCodeKey65_ptr);
            using globalCalcCubicCurve66_ptr = void (WINAPIV*)(float**, int, float*);
            using globalCalcCubicCurve66_clbk = void (WINAPIV*)(float**, int, float*, globalCalcCubicCurve66_ptr);
            using globalCalcEvalCubicCurve67_ptr = float (WINAPIV*)(float*, float);
            using globalCalcEvalCubicCurve67_clbk = float (WINAPIV*)(float*, float, globalCalcEvalCubicCurve67_ptr);
            using globalCalcFileSize69_ptr = int (WINAPIV*)(char*);
            using globalCalcFileSize69_clbk = int (WINAPIV*)(char*, globalCalcFileSize69_ptr);
            using globalCalcMastery71_ptr = int (WINAPIV*)(int, int, unsigned int, int);
            using globalCalcMastery71_clbk = int (WINAPIV*)(int, int, unsigned int, int, globalCalcMastery71_ptr);
            using globalCalcRoundUp73_ptr = int (WINAPIV*)(float);
            using globalCalcRoundUp73_clbk = int (WINAPIV*)(float, globalCalcRoundUp73_ptr);
            using globalCalcSnakeVertexList74_ptr = uint32_t (WINAPIV*)(struct _D3DR3VERTEX_TEX1*, float**, uint32_t, float, uint32_t);
            using globalCalcSnakeVertexList74_clbk = uint32_t (WINAPIV*)(struct _D3DR3VERTEX_TEX1*, float**, uint32_t, float, uint32_t, globalCalcSnakeVertexList74_ptr);
            using globalCalcSquare76_ptr = int (WINAPIV*)(int, int);
            using globalCalcSquare76_clbk = int (WINAPIV*)(int, int, globalCalcSquare76_ptr);
            using globalCalculateMoveCamera77_ptr = void (WINAPIV*)(_MOVE_CAMERA*);
            using globalCalculateMoveCamera77_clbk = void (WINAPIV*)(_MOVE_CAMERA*, globalCalculateMoveCamera77_ptr);
            using globalCanAddMoneyForMaxLimGold79_ptr = bool (WINAPIV*)(uint64_t, uint64_t);
            using globalCanAddMoneyForMaxLimGold79_clbk = bool (WINAPIV*)(uint64_t, uint64_t, globalCanAddMoneyForMaxLimGold79_ptr);
            using globalCanAddMoneyForMaxLimMoney81_ptr = bool (WINAPIV*)(uint64_t, uint64_t);
            using globalCanAddMoneyForMaxLimMoney81_clbk = bool (WINAPIV*)(uint64_t, uint64_t, globalCanAddMoneyForMaxLimMoney81_ptr);
            using globalCcrFgCallback83_ptr = int (WINAPIV*)(int, void*, void*, int, void*);
            using globalCcrFgCallback83_clbk = int (WINAPIV*)(int, void*, void*, int, void*, globalCcrFgCallback83_ptr);
            using globalCheckEdge84_ptr = int64_t (WINAPIV*)(float*, float*, float*, float*, float);
            using globalCheckEdge84_clbk = int64_t (WINAPIV*)(float*, float*, float*, float*, float, globalCheckEdge84_ptr);
            using globalCheckEdgeEpsilon85_ptr = int64_t (WINAPIV*)(float*, float*, float*, float*, float);
            using globalCheckEdgeEpsilon85_clbk = int64_t (WINAPIV*)(float*, float*, float*, float*, float, globalCheckEdgeEpsilon85_ptr);
            using globalCheckSameItemFromString_CodeIndex87_ptr = bool (WINAPIV*)(char*, char, uint16_t);
            using globalCheckSameItemFromString_CodeIndex87_clbk = bool (WINAPIV*)(char*, char, uint16_t, globalCheckSameItemFromString_CodeIndex87_ptr);
            using globalClean2DRectangleZbuffer88_ptr = void (WINAPIV*)(int32_t, int32_t, int32_t, int32_t);
            using globalClean2DRectangleZbuffer88_clbk = void (WINAPIV*)(int32_t, int32_t, int32_t, int32_t, globalClean2DRectangleZbuffer88_ptr);
            using globalCleanViewPortStack89_ptr = void (WINAPIV*)();
            using globalCleanViewPortStack89_clbk = void (WINAPIV*)(globalCleanViewPortStack89_ptr);
            using globalCleanZbuffer90_ptr = void (WINAPIV*)(float, float, float, float);
            using globalCleanZbuffer90_clbk = void (WINAPIV*)(float, float, float, float, globalCleanZbuffer90_ptr);
            using globalClearDynamicLight91_ptr = void (WINAPIV*)();
            using globalClearDynamicLight91_clbk = void (WINAPIV*)(globalClearDynamicLight91_ptr);
            using globalCombineExCheckKeyGen93_ptr = unsigned int (WINAPIV*)(unsigned int, unsigned int);
            using globalCombineExCheckKeyGen93_clbk = unsigned int (WINAPIV*)(unsigned int, unsigned int, globalCombineExCheckKeyGen93_ptr);
            using globalCompareGradeAndPvpPoint95_ptr = int (WINAPIV*)(void*, void*);
            using globalCompareGradeAndPvpPoint95_clbk = int (WINAPIV*)(void*, void*, globalCompareGradeAndPvpPoint95_ptr);
            using globalConvAniObject96_ptr = void (WINAPIV*)(int, uint8_t*, struct _READ_ANI_OBJECT*, struct _ANI_OBJECT*);
            using globalConvAniObject96_clbk = void (WINAPIV*)(int, uint8_t*, struct _READ_ANI_OBJECT*, struct _ANI_OBJECT*, globalConvAniObject96_ptr);
            using globalConvertCodeIntoItem98_ptr = struct _STORAGE_LIST::_db_con* (WINAPIV*)(char*, char, char);
            using globalConvertCodeIntoItem98_clbk = struct _STORAGE_LIST::_db_con* (WINAPIV*)(char*, char, char, globalConvertCodeIntoItem98_ptr);
            using globalConvertErrorCode_Jap100_ptr = int (WINAPIV*)(char);
            using globalConvertErrorCode_Jap100_clbk = int (WINAPIV*)(char, globalConvertErrorCode_Jap100_ptr);
            using globalConvertHexa101_ptr = uint32_t (WINAPIV*)(char*);
            using globalConvertHexa101_clbk = uint32_t (WINAPIV*)(char*, globalConvertHexa101_ptr);
            using globalCosineInterpolate102_ptr = float (WINAPIV*)(float, float, float);
            using globalCosineInterpolate102_clbk = float (WINAPIV*)(float, float, float, globalCosineInterpolate102_ptr);
            using globalCountOfImports103_ptr = unsigned int (WINAPIV*)(struct _IMAGE_THUNK_DATA64*);
            using globalCountOfImports103_clbk = unsigned int (WINAPIV*)(struct _IMAGE_THUNK_DATA64*, globalCountOfImports103_ptr);
            using globalCreateAndWriteUVOffsets104_ptr = void (WINAPIV*)(int, int);
            using globalCreateAndWriteUVOffsets104_clbk = void (WINAPIV*)(int, int, globalCreateAndWriteUVOffsets104_ptr);
            using globalCreateAnimus106_ptr = bool (WINAPIV*)(struct CMapData*, uint16_t, float*, char, int, int, unsigned int, struct CPlayer*);
            using globalCreateAnimus106_clbk = bool (WINAPIV*)(struct CMapData*, uint16_t, float*, char, int, int, unsigned int, struct CPlayer*, globalCreateAnimus106_ptr);
            using globalCreateBlurVBuffer107_ptr = void (WINAPIV*)(uint32_t, uint32_t);
            using globalCreateBlurVBuffer107_clbk = void (WINAPIV*)(uint32_t, uint32_t, globalCreateBlurVBuffer107_ptr);
            using globalCreateGuardTower109_ptr = struct CGuardTower* (WINAPIV*)(struct CMapData*, uint16_t, float*, struct _STORAGE_LIST::_db_con*, struct CPlayer*, char, bool);
            using globalCreateGuardTower109_clbk = struct CGuardTower* (WINAPIV*)(struct CMapData*, uint16_t, float*, struct _STORAGE_LIST::_db_con*, struct CPlayer*, char, bool, globalCreateGuardTower109_ptr);
            using globalCreateItemBox111_ptr = struct CItemBox* (WINAPIV*)(struct _STORAGE_LIST::_db_con*, struct CPlayer*, unsigned int, bool, struct CCharacter*, char, struct CMapData*, uint16_t, float*, bool);
            using globalCreateItemBox111_clbk = struct CItemBox* (WINAPIV*)(struct _STORAGE_LIST::_db_con*, struct CPlayer*, unsigned int, bool, struct CCharacter*, char, struct CMapData*, uint16_t, float*, bool, globalCreateItemBox111_ptr);
            using globalCreateItemBox113_ptr = struct CItemBox* (WINAPIV*)(struct _STORAGE_LIST::_db_con*, char, struct CMapData*, uint16_t, float*, bool, struct CPlayer*, int, char);
            using globalCreateItemBox113_clbk = struct CItemBox* (WINAPIV*)(struct _STORAGE_LIST::_db_con*, char, struct CMapData*, uint16_t, float*, bool, struct CPlayer*, int, char, globalCreateItemBox113_ptr);
            using globalCreateRepMonster115_ptr = struct CMonster* (WINAPIV*)(struct CMapData*, uint16_t, float*, char*, struct CMonster*, bool, bool, bool, bool, bool);
            using globalCreateRepMonster115_clbk = struct CMonster* (WINAPIV*)(struct CMapData*, uint16_t, float*, char*, struct CMonster*, bool, bool, bool, bool, bool, globalCreateRepMonster115_ptr);
            using globalCreateRespawnMonster117_ptr = struct CMonster* (WINAPIV*)(struct CMapData*, uint16_t, int, struct _mon_active*, struct _dummy_position*, bool, bool, bool, bool, bool);
            using globalCreateRespawnMonster117_clbk = struct CMonster* (WINAPIV*)(struct CMapData*, uint16_t, int, struct _mon_active*, struct _dummy_position*, bool, bool, bool, bool, bool, globalCreateRespawnMonster117_ptr);
            using globalCreateSystemTower119_ptr = struct CGuardTower* (WINAPIV*)(struct CMapData*, uint16_t, float*, int, char, int);
            using globalCreateSystemTower119_clbk = struct CGuardTower* (WINAPIV*)(struct CMapData*, uint16_t, float*, int, char, int, globalCreateSystemTower119_ptr);
            using globalCreateTrap121_ptr = struct CTrap* (WINAPIV*)(struct CMapData*, uint16_t, float*, struct CPlayer*, int);
            using globalCreateTrap121_clbk = struct CTrap* (WINAPIV*)(struct CMapData*, uint16_t, float*, struct CPlayer*, int, globalCreateTrap121_ptr);
            using globalCrossVector122_ptr = void (WINAPIV*)(float*, float*, float*);
            using globalCrossVector122_clbk = void (WINAPIV*)(float*, float*, float*, globalCrossVector122_ptr);
            using globalCubicInterpolate123_ptr = float (WINAPIV*)(float, float, float, float, float);
            using globalCubicInterpolate123_clbk = float (WINAPIV*)(float, float, float, float, float, globalCubicInterpolate123_ptr);
            using globalD3DUtil_CreateTexture124_ptr = int32_t (WINAPIV*)(struct IDirect3DDevice8*, char*, struct IDirect3DTexture8**, _D3DFORMAT);
            using globalD3DUtil_CreateTexture124_clbk = int32_t (WINAPIV*)(struct IDirect3DDevice8*, char*, struct IDirect3DTexture8**, _D3DFORMAT, globalD3DUtil_CreateTexture124_ptr);
            using globalD3DUtil_CreateVertexShader125_ptr = int32_t (WINAPIV*)(struct IDirect3DDevice8*, char*, uint32_t*, uint32_t*);
            using globalD3DUtil_CreateVertexShader125_clbk = int32_t (WINAPIV*)(struct IDirect3DDevice8*, char*, uint32_t*, uint32_t*, globalD3DUtil_CreateVertexShader125_ptr);
            using globalD3DUtil_GetCubeMapViewMatrix126_ptr = struct D3DXMATRIX* (WINAPIV*)(short, struct D3DXMATRIX*);
            using globalD3DUtil_GetCubeMapViewMatrix126_clbk = struct D3DXMATRIX* (WINAPIV*)(short, struct D3DXMATRIX*, globalD3DUtil_GetCubeMapViewMatrix126_ptr);
            using globalD3DUtil_GetRotationFromCursor127_ptr = struct D3DXQUATERNION* (WINAPIV*)(short, struct D3DXQUATERNION*, HWND);
            using globalD3DUtil_GetRotationFromCursor127_clbk = struct D3DXQUATERNION* (WINAPIV*)(short, struct D3DXQUATERNION*, HWND, globalD3DUtil_GetRotationFromCursor127_ptr);
            using globalD3DUtil_InitLight128_ptr = void (WINAPIV*)(struct _D3DLIGHT8*, _D3DLIGHTTYPE, float, float, float);
            using globalD3DUtil_InitLight128_clbk = void (WINAPIV*)(struct _D3DLIGHT8*, _D3DLIGHTTYPE, float, float, float, globalD3DUtil_InitLight128_ptr);
            using globalD3DUtil_InitMaterial129_ptr = void (WINAPIV*)(struct _D3DMATERIAL8*, float, float, float, float);
            using globalD3DUtil_InitMaterial129_clbk = void (WINAPIV*)(struct _D3DMATERIAL8*, float, float, float, float, globalD3DUtil_InitMaterial129_ptr);
            using globalD3DUtil_SetColorKey130_ptr = int32_t (WINAPIV*)(struct IDirect3DTexture8*, uint32_t);
            using globalD3DUtil_SetColorKey130_clbk = int32_t (WINAPIV*)(struct IDirect3DTexture8*, uint32_t, globalD3DUtil_SetColorKey130_ptr);
            using globalD3DUtil_SetDeviceCursor131_ptr = int32_t (WINAPIV*)(struct IDirect3DDevice8*, HICON, int);
            using globalD3DUtil_SetDeviceCursor131_clbk = int32_t (WINAPIV*)(struct IDirect3DDevice8*, HICON, int, globalD3DUtil_SetDeviceCursor131_ptr);
            using globalD3DUtil_SetDeviceCursor132_ptr = int32_t (WINAPIV*)(struct IDirect3DDevice8*, uint32_t, uint32_t, struct IDirect3DTexture8*);
            using globalD3DUtil_SetDeviceCursor132_clbk = int32_t (WINAPIV*)(struct IDirect3DDevice8*, uint32_t, uint32_t, struct IDirect3DTexture8*, globalD3DUtil_SetDeviceCursor132_ptr);
            using globalD3DXMatrixIdentity133_ptr = struct D3DXMATRIX* (WINAPIV*)(struct D3DXMATRIX*);
            using globalD3DXMatrixIdentity133_clbk = struct D3DXMATRIX* (WINAPIV*)(struct D3DXMATRIX*, globalD3DXMatrixIdentity133_ptr);
            using globalD3DXQuaternionAxisToAxis134_ptr = struct D3DXQUATERNION* (WINAPIV*)(struct D3DXQUATERNION*, struct D3DXVECTOR3*, struct D3DXVECTOR3*);
            using globalD3DXQuaternionAxisToAxis134_clbk = struct D3DXQUATERNION* (WINAPIV*)(struct D3DXQUATERNION*, struct D3DXVECTOR3*, struct D3DXVECTOR3*, globalD3DXQuaternionAxisToAxis134_ptr);
            using globalD3DXQuaternionIdentity135_ptr = struct D3DXQUATERNION* (WINAPIV*)(struct D3DXQUATERNION*);
            using globalD3DXQuaternionIdentity135_clbk = struct D3DXQUATERNION* (WINAPIV*)(struct D3DXQUATERNION*, globalD3DXQuaternionIdentity135_ptr);
            using globalD3DXQuaternionUnitAxisToUnitAxis2136_ptr = struct D3DXQUATERNION* (WINAPIV*)(struct D3DXQUATERNION*, struct D3DXVECTOR3*, struct D3DXVECTOR3*);
            using globalD3DXQuaternionUnitAxisToUnitAxis2136_clbk = struct D3DXQUATERNION* (WINAPIV*)(struct D3DXQUATERNION*, struct D3DXVECTOR3*, struct D3DXVECTOR3*, globalD3DXQuaternionUnitAxisToUnitAxis2136_ptr);
            using globalD3DXVec2Dot138_ptr = float (WINAPIV*)(struct D3DXVECTOR2*, struct D3DXVECTOR2*);
            using globalD3DXVec2Dot138_clbk = float (WINAPIV*)(struct D3DXVECTOR2*, struct D3DXVECTOR2*, globalD3DXVec2Dot138_ptr);
            using globalD3DXVec3Cross139_ptr = struct D3DXVECTOR3* (WINAPIV*)(struct D3DXVECTOR3*, struct D3DXVECTOR3*, struct D3DXVECTOR3*);
            using globalD3DXVec3Cross139_clbk = struct D3DXVECTOR3* (WINAPIV*)(struct D3DXVECTOR3*, struct D3DXVECTOR3*, struct D3DXVECTOR3*, globalD3DXVec3Cross139_ptr);
            using globalD3DXVec3Dot140_ptr = float (WINAPIV*)(struct D3DXVECTOR3*, struct D3DXVECTOR3*);
            using globalD3DXVec3Dot140_clbk = float (WINAPIV*)(struct D3DXVECTOR3*, struct D3DXVECTOR3*, globalD3DXVec3Dot140_ptr);
            using globalD3DXVec3Length141_ptr = float (WINAPIV*)(struct D3DXVECTOR3*);
            using globalD3DXVec3Length141_clbk = float (WINAPIV*)(struct D3DXVECTOR3*, globalD3DXVec3Length141_ptr);
            using globalD3D_R3ConfirmDevice142_ptr = int32_t (WINAPIV*)(struct _D3DCAPS8*, uint32_t, _D3DFORMAT);
            using globalD3D_R3ConfirmDevice142_clbk = int32_t (WINAPIV*)(struct _D3DCAPS8*, uint32_t, _D3DFORMAT, globalD3D_R3ConfirmDevice142_ptr);
            using globalD3D_R3DeleteDevice143_ptr = int32_t (WINAPIV*)();
            using globalD3D_R3DeleteDevice143_clbk = int32_t (WINAPIV*)(globalD3D_R3DeleteDevice143_ptr);
            using globalD3D_R3InitDevice144_ptr = int32_t (WINAPIV*)(struct IDirect3DDevice8*);
            using globalD3D_R3InitDevice144_clbk = int32_t (WINAPIV*)(struct IDirect3DDevice8*, globalD3D_R3InitDevice144_ptr);
            using globalD3D_R3InvalidateDevice145_ptr = int32_t (WINAPIV*)();
            using globalD3D_R3InvalidateDevice145_clbk = int32_t (WINAPIV*)(globalD3D_R3InvalidateDevice145_ptr);
            using globalD3D_R3MsgProc146_ptr = void (WINAPIV*)(HWND, unsigned int, uint64_t, int64_t);
            using globalD3D_R3MsgProc146_clbk = void (WINAPIV*)(HWND, unsigned int, uint64_t, int64_t, globalD3D_R3MsgProc146_ptr);
            using globalD3D_R3RestoreDevice147_ptr = int32_t (WINAPIV*)();
            using globalD3D_R3RestoreDevice147_clbk = int32_t (WINAPIV*)(globalD3D_R3RestoreDevice147_ptr);
            using globalDDX_Control148_ptr = void (WINAPIV*)(struct CDataExchange*, int, struct CWnd*);
            using globalDDX_Control148_clbk = void (WINAPIV*)(struct CDataExchange*, int, struct CWnd*, globalDDX_Control148_ptr);
            using globalDDX_Text149_ptr = void (WINAPIV*)(struct CDataExchange*, int, int*);
            using globalDDX_Text149_clbk = void (WINAPIV*)(struct CDataExchange*, int, int*, globalDDX_Text149_ptr);
            using globalDDX_Text150_ptr = void (WINAPIV*)(struct CDataExchange*, int, unsigned int*);
            using globalDDX_Text150_clbk = void (WINAPIV*)(struct CDataExchange*, int, unsigned int*, globalDDX_Text150_ptr);
            using globalDE_AllContDamageForceRemove152_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_AllContDamageForceRemove152_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_AllContDamageForceRemove152_ptr);
            using globalDE_AllContHelpForceRemove154_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_AllContHelpForceRemove154_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_AllContHelpForceRemove154_ptr);
            using globalDE_AllContHelpSkillRemove156_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_AllContHelpSkillRemove156_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_AllContHelpSkillRemove156_ptr);
            using globalDE_AttHPtoDstFP158_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_AttHPtoDstFP158_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_AttHPtoDstFP158_ptr);
            using globalDE_BattleMode_RecallCommonPlayer160_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_BattleMode_RecallCommonPlayer160_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_BattleMode_RecallCommonPlayer160_ptr);
            using globalDE_ContDamageTimeInc162_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_ContDamageTimeInc162_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_ContDamageTimeInc162_ptr);
            using globalDE_ContHelpTimeInc164_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_ContHelpTimeInc164_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_ContHelpTimeInc164_ptr);
            using globalDE_ConvertMonsterTarget166_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_ConvertMonsterTarget166_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_ConvertMonsterTarget166_ptr);
            using globalDE_ConvertTargetDest168_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_ConvertTargetDest168_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_ConvertTargetDest168_ptr);
            using globalDE_DamStun170_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_DamStun170_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_DamStun170_ptr);
            using globalDE_DetectTrap172_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_DetectTrap172_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_DetectTrap172_ptr);
            using globalDE_FPDec174_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_FPDec174_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_FPDec174_ptr);
            using globalDE_HPInc176_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_HPInc176_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_HPInc176_ptr);
            using globalDE_IncHPCircleParty178_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_IncHPCircleParty178_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_IncHPCircleParty178_ptr);
            using globalDE_IncreaseDP180_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_IncreaseDP180_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_IncreaseDP180_ptr);
            using globalDE_LateContDamageRemove182_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_LateContDamageRemove182_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_LateContDamageRemove182_ptr);
            using globalDE_LateContHelpForceRemove184_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_LateContHelpForceRemove184_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_LateContHelpForceRemove184_ptr);
            using globalDE_LateContHelpSkillRemove186_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_LateContHelpSkillRemove186_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_LateContHelpSkillRemove186_ptr);
            using globalDE_LayTrap188_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_LayTrap188_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_LayTrap188_ptr);
            using globalDE_MakeGuardTower190_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_MakeGuardTower190_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_MakeGuardTower190_ptr);
            using globalDE_MakePortalReturnBindPositionPartyMember192_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_MakePortalReturnBindPositionPartyMember192_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_MakePortalReturnBindPositionPartyMember192_ptr);
            using globalDE_MakeZeroAnimusRecallTimeOnce194_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_MakeZeroAnimusRecallTimeOnce194_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_MakeZeroAnimusRecallTimeOnce194_ptr);
            using globalDE_OthersContHelpSFRemove196_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_OthersContHelpSFRemove196_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_OthersContHelpSFRemove196_ptr);
            using globalDE_OverHealing198_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_OverHealing198_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_OverHealing198_ptr);
            using globalDE_Potion_AllContHelpSkillRemove_Once200_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_AllContHelpSkillRemove_Once200_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_AllContHelpSkillRemove_Once200_ptr);
            using globalDE_Potion_Buf_Extend202_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_Buf_Extend202_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_Buf_Extend202_ptr);
            using globalDE_Potion_Chaos_Dec_Time204_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_Chaos_Dec_Time204_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_Chaos_Dec_Time204_ptr);
            using globalDE_Potion_Chaos_Inc_Time206_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_Chaos_Inc_Time206_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_Chaos_Inc_Time206_ptr);
            using globalDE_Potion_CharReName208_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_CharReName208_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_CharReName208_ptr);
            using globalDE_Potion_Class_Refine210_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_Class_Refine210_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_Class_Refine210_ptr);
            using globalDE_Potion_Cont_Damage_Remove212_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_Cont_Damage_Remove212_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_Cont_Damage_Remove212_ptr);
            using globalDE_Potion_DecHalfSFContDam214_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_DecHalfSFContDam214_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_DecHalfSFContDam214_ptr);
            using globalDE_Potion_Exp_Increase_Absolute216_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_Exp_Increase_Absolute216_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_Exp_Increase_Absolute216_ptr);
            using globalDE_Potion_Exp_Increase_Percentage218_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_Exp_Increase_Percentage218_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_Exp_Increase_Percentage218_ptr);
            using globalDE_Potion_FP_In_Value220_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_FP_In_Value220_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_FP_In_Value220_ptr);
            using globalDE_Potion_Gold_Point222_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_Gold_Point222_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_Gold_Point222_ptr);
            using globalDE_Potion_HFP_Full_Recover224_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_HFP_Full_Recover224_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_HFP_Full_Recover224_ptr);
            using globalDE_Potion_HP_In_Value226_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_HP_In_Value226_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_HP_In_Value226_ptr);
            using globalDE_Potion_Race_Debuff_Clear_One228_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_Race_Debuff_Clear_One228_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_Race_Debuff_Clear_One228_ptr);
            using globalDE_Potion_Race_Debuff_Clear_Two230_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_Race_Debuff_Clear_Two230_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_Race_Debuff_Clear_Two230_ptr);
            using globalDE_Potion_RemoveAfterEffect232_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_RemoveAfterEffect232_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_RemoveAfterEffect232_ptr);
            using globalDE_Potion_RemoveAllContinousEffect234_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_RemoveAllContinousEffect234_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_RemoveAllContinousEffect234_ptr);
            using globalDE_Potion_Revival_Die_Position236_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_Revival_Die_Position236_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_Revival_Die_Position236_ptr);
            using globalDE_Potion_SP_In_Value238_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_SP_In_Value238_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_SP_In_Value238_ptr);
            using globalDE_Potion_Trunk_Extend240_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Potion_Trunk_Extend240_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Potion_Trunk_Extend240_ptr);
            using globalDE_Quick_Revival_Die_Position242_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Quick_Revival_Die_Position242_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Quick_Revival_Die_Position242_ptr);
            using globalDE_RecallCommonPlayer244_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_RecallCommonPlayer244_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_RecallCommonPlayer244_ptr);
            using globalDE_RecallPartyMember246_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_RecallPartyMember246_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_RecallPartyMember246_ptr);
            using globalDE_Recall_After_Stone248_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Recall_After_Stone248_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Recall_After_Stone248_ptr);
            using globalDE_RecoverAllReturnStateAnimusHPFull250_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_RecoverAllReturnStateAnimusHPFull250_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_RecoverAllReturnStateAnimusHPFull250_ptr);
            using globalDE_Recovery252_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Recovery252_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Recovery252_ptr);
            using globalDE_ReleaseMonsterTarget254_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_ReleaseMonsterTarget254_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_ReleaseMonsterTarget254_ptr);
            using globalDE_RemoveAllContHelp256_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_RemoveAllContHelp256_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_RemoveAllContHelp256_ptr);
            using globalDE_ReturnBindPosition258_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_ReturnBindPosition258_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_ReturnBindPosition258_ptr);
            using globalDE_SPDec260_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_SPDec260_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_SPDec260_ptr);
            using globalDE_STInc262_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_STInc262_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_STInc262_ptr);
            using globalDE_SelfDestruction264_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_SelfDestruction264_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_SelfDestruction264_ptr);
            using globalDE_SkillContHelpTimeInc266_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_SkillContHelpTimeInc266_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_SkillContHelpTimeInc266_ptr);
            using globalDE_Stun268_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Stun268_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Stun268_ptr);
            using globalDE_TeleportCommonPlayer270_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_TeleportCommonPlayer270_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_TeleportCommonPlayer270_ptr);
            using globalDE_Teleport_After_Stone272_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_Teleport_After_Stone272_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_Teleport_After_Stone272_ptr);
            using globalDE_TransDestHP274_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_TransDestHP274_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_TransDestHP274_ptr);
            using globalDE_TransMonsterHP276_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_TransMonsterHP276_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_TransMonsterHP276_ptr);
            using globalDE_ViewWeakPoint278_ptr = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*);
            using globalDE_ViewWeakPoint278_clbk = bool (WINAPIV*)(struct CCharacter*, struct CCharacter*, float, char*, globalDE_ViewWeakPoint278_ptr);
            using globalDTradeEqualPerson280_ptr = bool (WINAPIV*)(struct CPlayer*, struct CPlayer**);
            using globalDTradeEqualPerson280_clbk = bool (WINAPIV*)(struct CPlayer*, struct CPlayer**, globalDTradeEqualPerson280_ptr);
            using globalDXUtil_ConvertAnsiStringToGeneric282_ptr = void (WINAPIV*)(char*, char*, int);
            using globalDXUtil_ConvertAnsiStringToGeneric282_clbk = void (WINAPIV*)(char*, char*, int, globalDXUtil_ConvertAnsiStringToGeneric282_ptr);
            using globalDXUtil_ConvertAnsiStringToWide284_ptr = void (WINAPIV*)(wchar_t*, char*, int);
            using globalDXUtil_ConvertAnsiStringToWide284_clbk = void (WINAPIV*)(wchar_t*, char*, int, globalDXUtil_ConvertAnsiStringToWide284_ptr);
            using globalDXUtil_ConvertGenericStringToAnsi286_ptr = void (WINAPIV*)(char*, char*, int);
            using globalDXUtil_ConvertGenericStringToAnsi286_clbk = void (WINAPIV*)(char*, char*, int, globalDXUtil_ConvertGenericStringToAnsi286_ptr);
            using globalDXUtil_ConvertGenericStringToWide288_ptr = void (WINAPIV*)(wchar_t*, char*, int);
            using globalDXUtil_ConvertGenericStringToWide288_clbk = void (WINAPIV*)(wchar_t*, char*, int, globalDXUtil_ConvertGenericStringToWide288_ptr);
            using globalDXUtil_ConvertWideStringToAnsi290_ptr = void (WINAPIV*)(char*, wchar_t*, int);
            using globalDXUtil_ConvertWideStringToAnsi290_clbk = void (WINAPIV*)(char*, wchar_t*, int, globalDXUtil_ConvertWideStringToAnsi290_ptr);
            using globalDXUtil_ConvertWideStringToGeneric292_ptr = void (WINAPIV*)(char*, wchar_t*, int);
            using globalDXUtil_ConvertWideStringToGeneric292_clbk = void (WINAPIV*)(char*, wchar_t*, int, globalDXUtil_ConvertWideStringToGeneric292_ptr);
            using globalDXUtil_FindMediaFile294_ptr = HRESULT (WINAPIV*)(char*, char*);
            using globalDXUtil_FindMediaFile294_clbk = HRESULT (WINAPIV*)(char*, char*, globalDXUtil_FindMediaFile294_ptr);
            using globalDXUtil_GetDXSDKMediaPath296_ptr = char* (WINAPIV*)();
            using globalDXUtil_GetDXSDKMediaPath296_clbk = char* (WINAPIV*)(globalDXUtil_GetDXSDKMediaPath296_ptr);
            using globalDXUtil_ReadBoolRegKey298_ptr = HRESULT (WINAPIV*)(struct HKEY__*, char*, int*, int);
            using globalDXUtil_ReadBoolRegKey298_clbk = HRESULT (WINAPIV*)(struct HKEY__*, char*, int*, int, globalDXUtil_ReadBoolRegKey298_ptr);
            using globalDXUtil_ReadGuidRegKey300_ptr = HRESULT (WINAPIV*)(struct HKEY__*, char*, struct _GUID*, struct _GUID*);
            using globalDXUtil_ReadGuidRegKey300_clbk = HRESULT (WINAPIV*)(struct HKEY__*, char*, struct _GUID*, struct _GUID*, globalDXUtil_ReadGuidRegKey300_ptr);
            using globalDXUtil_ReadIntRegKey302_ptr = HRESULT (WINAPIV*)(struct HKEY__*, char*, unsigned int*, unsigned int);
            using globalDXUtil_ReadIntRegKey302_clbk = HRESULT (WINAPIV*)(struct HKEY__*, char*, unsigned int*, unsigned int, globalDXUtil_ReadIntRegKey302_ptr);
            using globalDXUtil_ReadStringRegKey304_ptr = HRESULT (WINAPIV*)(struct HKEY__*, char*, char*, unsigned int, char*);
            using globalDXUtil_ReadStringRegKey304_clbk = HRESULT (WINAPIV*)(struct HKEY__*, char*, char*, unsigned int, char*, globalDXUtil_ReadStringRegKey304_ptr);
            using globalDXUtil_Timer306_ptr = float (WINAPIV*)(TIMER_COMMAND);
            using globalDXUtil_Timer306_clbk = float (WINAPIV*)(TIMER_COMMAND, globalDXUtil_Timer306_ptr);
            using globalDXUtil_Trace308_ptr = void (WINAPIV*)(char*);
            using globalDXUtil_Trace308_clbk = void (WINAPIV*)(char*, globalDXUtil_Trace308_ptr);
            using globalDXUtil_WriteBoolRegKey310_ptr = HRESULT (WINAPIV*)(struct HKEY__*, char*, int);
            using globalDXUtil_WriteBoolRegKey310_clbk = HRESULT (WINAPIV*)(struct HKEY__*, char*, int, globalDXUtil_WriteBoolRegKey310_ptr);
            using globalDXUtil_WriteGuidRegKey312_ptr = HRESULT (WINAPIV*)(struct HKEY__*, char*, struct _GUID);
            using globalDXUtil_WriteGuidRegKey312_clbk = HRESULT (WINAPIV*)(struct HKEY__*, char*, struct _GUID, globalDXUtil_WriteGuidRegKey312_ptr);
            using globalDXUtil_WriteIntRegKey314_ptr = HRESULT (WINAPIV*)(struct HKEY__*, char*, unsigned int);
            using globalDXUtil_WriteIntRegKey314_clbk = HRESULT (WINAPIV*)(struct HKEY__*, char*, unsigned int, globalDXUtil_WriteIntRegKey314_ptr);
            using globalDXUtil_WriteStringRegKey316_ptr = HRESULT (WINAPIV*)(struct HKEY__*, char*, char*);
            using globalDXUtil_WriteStringRegKey316_clbk = HRESULT (WINAPIV*)(struct HKEY__*, char*, char*, globalDXUtil_WriteStringRegKey316_ptr);
            using globalDeCryptString318_ptr = void (WINAPIV*)(char*, int, char, uint16_t);
            using globalDeCryptString318_clbk = void (WINAPIV*)(char*, int, char, uint16_t, globalDeCryptString318_ptr);
            using globalDeCrypt_Move320_ptr = void (WINAPIV*)(char*, int, char, uint16_t);
            using globalDeCrypt_Move320_clbk = void (WINAPIV*)(char*, int, char, uint16_t, globalDeCrypt_Move320_ptr);
            using globalDebugDrawIndexedPrimitiveTLTex1321_ptr = void (WINAPIV*)(int, int, uint16_t*, void*);
            using globalDebugDrawIndexedPrimitiveTLTex1321_clbk = void (WINAPIV*)(int, int, uint16_t*, void*, globalDebugDrawIndexedPrimitiveTLTex1321_ptr);
            using globalDebugDrawIndexedPrimitiveUPTex1322_ptr = void (WINAPIV*)(int, int, uint16_t*, void*);
            using globalDebugDrawIndexedPrimitiveUPTex1322_clbk = void (WINAPIV*)(int, int, uint16_t*, void*, globalDebugDrawIndexedPrimitiveUPTex1322_ptr);
            using globalDebugPushEntityNum323_ptr = void (WINAPIV*)(uint32_t);
            using globalDebugPushEntityNum323_clbk = void (WINAPIV*)(uint32_t, globalDebugPushEntityNum323_ptr);
            using globalDebugPushMagicNum324_ptr = void (WINAPIV*)(uint32_t);
            using globalDebugPushMagicNum324_clbk = void (WINAPIV*)(uint32_t, globalDebugPushMagicNum324_ptr);
            using globalDetailTextureOffStage2325_ptr = void (WINAPIV*)();
            using globalDetailTextureOffStage2325_clbk = void (WINAPIV*)(globalDetailTextureOffStage2325_ptr);
            using globalDetailTextureOnStage2326_ptr = void (WINAPIV*)(struct _R3MATERIAL*);
            using globalDetailTextureOnStage2326_clbk = void (WINAPIV*)(struct _R3MATERIAL*, globalDetailTextureOnStage2326_ptr);
            using globalDfree327_ptr = void (WINAPIV*)(void*);
            using globalDfree327_clbk = void (WINAPIV*)(void*, globalDfree327_ptr);
            using globalDisplayANSICodePageStrOutputDebug329_ptr = void (WINAPIV*)();
            using globalDisplayANSICodePageStrOutputDebug329_clbk = void (WINAPIV*)(globalDisplayANSICodePageStrOutputDebug329_ptr);
            using globalDisplayItemUpgInfo331_ptr = char* (WINAPIV*)(int, unsigned int);
            using globalDisplayItemUpgInfo331_clbk = char* (WINAPIV*)(int, unsigned int, globalDisplayItemUpgInfo331_ptr);
            using globalDmalloc332_ptr = void* (WINAPIV*)(int);
            using globalDmalloc332_clbk = void* (WINAPIV*)(int, globalDmalloc332_ptr);
            using globalDotProduct333_ptr = float (WINAPIV*)(float*, float*);
            using globalDotProduct333_clbk = float (WINAPIV*)(float*, float*, globalDotProduct333_ptr);
            using globalDraw2DLine334_ptr = void (WINAPIV*)(float*, float*, uint32_t);
            using globalDraw2DLine334_clbk = void (WINAPIV*)(float*, float*, uint32_t, globalDraw2DLine334_ptr);
            using globalDraw2DLineList335_ptr = void (WINAPIV*)(float**, uint32_t, uint32_t);
            using globalDraw2DLineList335_clbk = void (WINAPIV*)(float**, uint32_t, uint32_t, globalDraw2DLineList335_ptr);
            using globalDraw2DRectangle336_ptr = void (WINAPIV*)(uint32_t, int32_t, int32_t, int32_t, uint32_t);
            using globalDraw2DRectangle336_clbk = void (WINAPIV*)(uint32_t, int32_t, int32_t, int32_t, uint32_t, globalDraw2DRectangle336_ptr);
            using globalDraw2DSprite337_ptr = void (WINAPIV*)(_D3DR3TLVERTEX_TEX1*, int, void*);
            using globalDraw2DSprite337_clbk = void (WINAPIV*)(_D3DR3TLVERTEX_TEX1*, int, void*, globalDraw2DSprite337_ptr);
            using globalDraw2DSprite338_ptr = void (WINAPIV*)(float, float, float, float, float*, float*, void*, uint32_t);
            using globalDraw2DSprite338_clbk = void (WINAPIV*)(float, float, float, float, float*, float*, void*, uint32_t, globalDraw2DSprite338_ptr);
            using globalDraw2DSprite339_ptr = void (WINAPIV*)(float, float, float, float, int, uint32_t);
            using globalDraw2DSprite339_clbk = void (WINAPIV*)(float, float, float, float, int, uint32_t, globalDraw2DSprite339_ptr);
            using globalDraw2DSprite340_ptr = void (WINAPIV*)(float, float, float, float, void*, uint32_t);
            using globalDraw2DSprite340_clbk = void (WINAPIV*)(float, float, float, float, void*, uint32_t, globalDraw2DSprite340_ptr);
            using globalDraw2DSprite3D341_ptr = void (WINAPIV*)(float*, float, float, float*, float*, void*, uint32_t);
            using globalDraw2DSprite3D341_clbk = void (WINAPIV*)(float*, float, float, float*, float*, void*, uint32_t, globalDraw2DSprite3D341_ptr);
            using globalDraw2DSprite3D342_ptr = void (WINAPIV*)(float*, float, float, void*, uint32_t);
            using globalDraw2DSprite3D342_clbk = void (WINAPIV*)(float*, float, float, void*, uint32_t, globalDraw2DSprite3D342_ptr);
            using globalDraw2DSpriteRot343_ptr = void (WINAPIV*)(float, float, float, float, void*, float*, float*, void*, uint32_t);
            using globalDraw2DSpriteRot343_clbk = void (WINAPIV*)(float, float, float, float, void*, float*, float*, void*, uint32_t, globalDraw2DSpriteRot343_ptr);
            using globalDraw2DSpriteRot344_ptr = void (WINAPIV*)(float, float, float, float, float, void*, uint32_t);
            using globalDraw2DSpriteRot344_clbk = void (WINAPIV*)(float, float, float, float, float, void*, uint32_t, globalDraw2DSpriteRot344_ptr);
            using globalDraw2DSpriteRot3D345_ptr = void (WINAPIV*)(float*, float, float, float, float*, float*, void*, uint32_t);
            using globalDraw2DSpriteRot3D345_clbk = void (WINAPIV*)(float*, float, float, float, float*, float*, void*, uint32_t, globalDraw2DSpriteRot3D345_ptr);
            using globalDraw2DSpriteRot3D346_ptr = void (WINAPIV*)(float*, float, float, float, void*, uint32_t);
            using globalDraw2DSpriteRot3D346_clbk = void (WINAPIV*)(float*, float, float, float, void*, uint32_t, globalDraw2DSpriteRot3D346_ptr);
            using globalDraw2DSpriteSub347_ptr = void (WINAPIV*)(float, float, float, float, int, uint32_t);
            using globalDraw2DSpriteSub347_clbk = void (WINAPIV*)(float, float, float, float, int, uint32_t, globalDraw2DSpriteSub347_ptr);
            using globalDraw2DTexture348_ptr = void (WINAPIV*)(uint32_t, int32_t, void*, int32_t, uint32_t, void*);
            using globalDraw2DTexture348_clbk = void (WINAPIV*)(uint32_t, int32_t, void*, int32_t, uint32_t, void*, globalDraw2DTexture348_ptr);
            using globalDraw3DSprite349_ptr = void (WINAPIV*)(float*, float**, float, void*);
            using globalDraw3DSprite349_clbk = void (WINAPIV*)(float*, float**, float, void*, globalDraw3DSprite349_ptr);
            using globalDrawAlphaStack350_ptr = void (WINAPIV*)(struct CBsp*, float*);
            using globalDrawAlphaStack350_clbk = void (WINAPIV*)(struct CBsp*, float*, globalDrawAlphaStack350_ptr);
            using globalDrawBlurRect351_ptr = void (WINAPIV*)(uint32_t, float, float, void*);
            using globalDrawBlurRect351_clbk = void (WINAPIV*)(uint32_t, float, float, void*, globalDrawBlurRect351_ptr);
            using globalDrawBlurVBuffer352_ptr = void (WINAPIV*)(uint32_t);
            using globalDrawBlurVBuffer352_clbk = void (WINAPIV*)(uint32_t, globalDrawBlurVBuffer352_ptr);
            using globalDrawCParticle353_ptr = void (WINAPIV*)(struct CParticle*, struct CEntity*, float**, uint32_t);
            using globalDrawCParticle353_clbk = void (WINAPIV*)(struct CParticle*, struct CEntity*, float**, uint32_t, globalDrawCParticle353_ptr);
            using globalDrawEtcPrint354_ptr = void (WINAPIV*)();
            using globalDrawEtcPrint354_clbk = void (WINAPIV*)(globalDrawEtcPrint354_ptr);
            using globalDrawFadeSKy355_ptr = int64_t (WINAPIV*)();
            using globalDrawFadeSKy355_clbk = int64_t (WINAPIV*)(globalDrawFadeSKy355_ptr);
            using globalDrawFadeScreen356_ptr = int64_t (WINAPIV*)();
            using globalDrawFadeScreen356_clbk = int64_t (WINAPIV*)(globalDrawFadeScreen356_ptr);
            using globalDrawFadeTex357_ptr = int64_t (WINAPIV*)();
            using globalDrawFadeTex357_clbk = int64_t (WINAPIV*)(globalDrawFadeTex357_ptr);
            using globalDrawFullScreenLava358_ptr = void (WINAPIV*)(uint32_t, uint32_t, void*, uint32_t, float, float);
            using globalDrawFullScreenLava358_clbk = void (WINAPIV*)(uint32_t, uint32_t, void*, uint32_t, float, float, globalDrawFullScreenLava358_ptr);
            using globalDrawIndexedPrimitiveTLTex1359_ptr = void (WINAPIV*)(int, int, uint16_t*, void*);
            using globalDrawIndexedPrimitiveTLTex1359_clbk = void (WINAPIV*)(int, int, uint16_t*, void*, globalDrawIndexedPrimitiveTLTex1359_ptr);
            using globalDrawIndexedPrimitiveUPTex1360_ptr = void (WINAPIV*)(int, int, uint16_t*, void*);
            using globalDrawIndexedPrimitiveUPTex1360_clbk = void (WINAPIV*)(int, int, uint16_t*, void*, globalDrawIndexedPrimitiveUPTex1360_ptr);
            using globalDrawIndexedTLVertex361_ptr = void (WINAPIV*)(void*, int, int, uint32_t, uint16_t*, void*);
            using globalDrawIndexedTLVertex361_clbk = void (WINAPIV*)(void*, int, int, uint32_t, uint16_t*, void*, globalDrawIndexedTLVertex361_ptr);
            using globalDrawIndexedTex1VertexUP362_ptr = void (WINAPIV*)(void*, int, int, uint32_t, uint16_t*, void*);
            using globalDrawIndexedTex1VertexUP362_clbk = void (WINAPIV*)(void*, int, int, uint32_t, uint16_t*, void*, globalDrawIndexedTex1VertexUP362_ptr);
            using globalDrawLensFlare363_ptr = void (WINAPIV*)(struct CBsp*);
            using globalDrawLensFlare363_clbk = void (WINAPIV*)(struct CBsp*, globalDrawLensFlare363_ptr);
            using globalDrawLightMapGroup364_ptr = void (WINAPIV*)(struct CVertexBuffer*, struct _BSP_MAT_GROUP*);
            using globalDrawLightMapGroup364_clbk = void (WINAPIV*)(struct CVertexBuffer*, struct _BSP_MAT_GROUP*, globalDrawLightMapGroup364_ptr);
            using globalDrawLogo365_ptr = void (WINAPIV*)();
            using globalDrawLogo365_clbk = void (WINAPIV*)(globalDrawLogo365_ptr);
            using globalDrawOneMatGroup366_ptr = void (WINAPIV*)(struct CVertexBuffer*, struct CIndexBuffer*, int, int, int, int);
            using globalDrawOneMatGroup366_clbk = void (WINAPIV*)(struct CVertexBuffer*, struct CIndexBuffer*, int, int, int, int, globalDrawOneMatGroup366_ptr);
            using globalDrawOneMatGroup367_ptr = void (WINAPIV*)(struct CVertexBuffer*, struct _BSP_MAT_GROUP*);
            using globalDrawOneMatGroup367_clbk = void (WINAPIV*)(struct CVertexBuffer*, struct _BSP_MAT_GROUP*, globalDrawOneMatGroup367_ptr);
            using globalDrawParticlePointSprite368_ptr = void (WINAPIV*)(struct CParticle*);
            using globalDrawParticlePointSprite368_clbk = void (WINAPIV*)(struct CParticle*, globalDrawParticlePointSprite368_ptr);
            using globalDrawParticlePolygon369_ptr = void (WINAPIV*)(struct CParticle*, struct CEntity*, float**, uint32_t);
            using globalDrawParticlePolygon369_clbk = void (WINAPIV*)(struct CParticle*, struct CEntity*, float**, uint32_t, globalDrawParticlePolygon369_ptr);
            using globalDrawPrimitiveTLTex1370_ptr = void (WINAPIV*)(int, void*);
            using globalDrawPrimitiveTLTex1370_clbk = void (WINAPIV*)(int, void*, globalDrawPrimitiveTLTex1370_ptr);
            using globalDrawPrimitiveUPLine371_ptr = void (WINAPIV*)(int, void*);
            using globalDrawPrimitiveUPLine371_clbk = void (WINAPIV*)(int, void*, globalDrawPrimitiveUPLine371_ptr);
            using globalDrawPrimitiveUPPoint372_ptr = void (WINAPIV*)(int, void*);
            using globalDrawPrimitiveUPPoint372_clbk = void (WINAPIV*)(int, void*, globalDrawPrimitiveUPPoint372_ptr);
            using globalDrawPrimitiveUPPoly373_ptr = void (WINAPIV*)(int, void*);
            using globalDrawPrimitiveUPPoly373_clbk = void (WINAPIV*)(int, void*, globalDrawPrimitiveUPPoly373_ptr);
            using globalDrawPrimitiveUPTLLine374_ptr = void (WINAPIV*)(int, void*);
            using globalDrawPrimitiveUPTLLine374_clbk = void (WINAPIV*)(int, void*, globalDrawPrimitiveUPTLLine374_ptr);
            using globalDrawPrimitiveUPTex1375_ptr = void (WINAPIV*)(int, void*);
            using globalDrawPrimitiveUPTex1375_clbk = void (WINAPIV*)(int, void*, globalDrawPrimitiveUPTex1375_ptr);
            using globalDrawPrimitiveUPTex1376_ptr = void (WINAPIV*)(void*, int, uint32_t, void*, uint32_t);
            using globalDrawPrimitiveUPTex1376_clbk = void (WINAPIV*)(void*, int, uint32_t, void*, uint32_t, globalDrawPrimitiveUPTex1376_ptr);
            using globalDrawPrimitiveUPTex1Strip377_ptr = void (WINAPIV*)(int, void*);
            using globalDrawPrimitiveUPTex1Strip377_clbk = void (WINAPIV*)(int, void*, globalDrawPrimitiveUPTex1Strip377_ptr);
            using globalDrawPrimitiveUPTex2378_ptr = void (WINAPIV*)(int, void*);
            using globalDrawPrimitiveUPTex2378_clbk = void (WINAPIV*)(int, void*, globalDrawPrimitiveUPTex2378_ptr);
            using globalDrawR3Hangul3DA379_ptr = void (WINAPIV*)(float*, char*, uint32_t, uint32_t, float);
            using globalDrawR3Hangul3DA379_clbk = void (WINAPIV*)(float*, char*, uint32_t, uint32_t, float, globalDrawR3Hangul3DA379_ptr);
            using globalDrawR3Hangul3DW380_ptr = void (WINAPIV*)(float*, wchar_t*, uint32_t, uint32_t, float);
            using globalDrawR3Hangul3DW380_clbk = void (WINAPIV*)(float*, wchar_t*, uint32_t, uint32_t, float, globalDrawR3Hangul3DW380_ptr);
            using globalDrawR3HangulA381_ptr = void (WINAPIV*)(int32_t, int32_t, char*, uint32_t, float**, uint32_t, float);
            using globalDrawR3HangulA381_clbk = void (WINAPIV*)(int32_t, int32_t, char*, uint32_t, float**, uint32_t, float, globalDrawR3HangulA381_ptr);
            using globalDrawR3HangulA382_ptr = void (WINAPIV*)(int32_t, int32_t, char*, uint32_t, uint32_t, float);
            using globalDrawR3HangulA382_clbk = void (WINAPIV*)(int32_t, int32_t, char*, uint32_t, uint32_t, float, globalDrawR3HangulA382_ptr);
            using globalDrawR3HangulW383_ptr = void (WINAPIV*)(int32_t, int32_t, wchar_t*, uint32_t, float**, uint32_t, float);
            using globalDrawR3HangulW383_clbk = void (WINAPIV*)(int32_t, int32_t, wchar_t*, uint32_t, float**, uint32_t, float, globalDrawR3HangulW383_ptr);
            using globalDrawR3HangulW384_ptr = void (WINAPIV*)(int32_t, int32_t, wchar_t*, uint32_t, uint32_t, float);
            using globalDrawR3HangulW384_clbk = void (WINAPIV*)(int32_t, int32_t, wchar_t*, uint32_t, uint32_t, float, globalDrawR3HangulW384_ptr);
            using globalDrawRect385_ptr = void (WINAPIV*)(float, float, float, float, float*, float*, void*, uint32_t);
            using globalDrawRect385_clbk = void (WINAPIV*)(float, float, float, float, float*, float*, void*, uint32_t, globalDrawRect385_ptr);
            using globalDrawReflectionOneMatGroup386_ptr = void (WINAPIV*)(struct CVertexBuffer*, struct _BSP_MAT_GROUP*);
            using globalDrawReflectionOneMatGroup386_clbk = void (WINAPIV*)(struct CVertexBuffer*, struct _BSP_MAT_GROUP*, globalDrawReflectionOneMatGroup386_ptr);
            using globalDrawShadow387_ptr = void (WINAPIV*)(struct _BSP_MAT_GROUP*);
            using globalDrawShadow387_clbk = void (WINAPIV*)(struct _BSP_MAT_GROUP*, globalDrawShadow387_ptr);
            using globalDrawSpectialParticle388_ptr = void (WINAPIV*)(struct CParticle*, struct CEntity*, float**, uint32_t);
            using globalDrawSpectialParticle388_clbk = void (WINAPIV*)(struct CParticle*, struct CEntity*, float**, uint32_t, globalDrawSpectialParticle388_ptr);
            using globalDrawSpectialParticle1389_ptr = void (WINAPIV*)(struct CParticle*, struct CEntity*, float**, uint32_t);
            using globalDrawSpectialParticle1389_clbk = void (WINAPIV*)(struct CParticle*, struct CEntity*, float**, uint32_t, globalDrawSpectialParticle1389_ptr);
            using globalDrawStripOneMatGroup390_ptr = void (WINAPIV*)(struct _BSP_MAT_GROUP*);
            using globalDrawStripOneMatGroup390_clbk = void (WINAPIV*)(struct _BSP_MAT_GROUP*, globalDrawStripOneMatGroup390_ptr);
            using globalDrawTLVertex391_ptr = void (WINAPIV*)(int, int, uint32_t, void**);
            using globalDrawTLVertex391_clbk = void (WINAPIV*)(int, int, uint32_t, void**, globalDrawTLVertex391_ptr);
            using globalDrawTLVertex392_ptr = void (WINAPIV*)(void*, int, uint32_t, void*, uint32_t);
            using globalDrawTLVertex392_clbk = void (WINAPIV*)(void*, int, uint32_t, void*, uint32_t, globalDrawTLVertex392_ptr);
            using globalDrawTestBox393_ptr = void (WINAPIV*)(float, float, float, uint32_t);
            using globalDrawTestBox393_clbk = void (WINAPIV*)(float, float, float, uint32_t, globalDrawTestBox393_ptr);
            using globalEnCryptString395_ptr = void (WINAPIV*)(char*, int, char, uint16_t);
            using globalEnCryptString395_clbk = void (WINAPIV*)(char*, int, char, uint16_t, globalEnCryptString395_ptr);
            using globalEnCrypt_Move397_ptr = void (WINAPIV*)(char*, int, char, uint16_t);
            using globalEnCrypt_Move397_clbk = void (WINAPIV*)(char*, int, char, uint16_t, globalEnCrypt_Move397_ptr);
            using globalError398_ptr = void (WINAPIV*)(char*, char*);
            using globalError398_clbk = void (WINAPIV*)(char*, char*, globalError398_ptr);
            using globalErrorButRun399_ptr = void (WINAPIV*)(char*, char*);
            using globalErrorButRun399_clbk = void (WINAPIV*)(char*, char*, globalErrorButRun399_ptr);
            using globalExtractVertex400_ptr = void (WINAPIV*)(uint16_t, int, float**, void*, float*, float);
            using globalExtractVertex400_clbk = void (WINAPIV*)(uint16_t, int, float**, void*, float*, float, globalExtractVertex400_ptr);
            using globalF402_ptr = unsigned int (WINAPIV*)(unsigned int, unsigned int, unsigned int);
            using globalF402_clbk = unsigned int (WINAPIV*)(unsigned int, unsigned int, unsigned int, globalF402_ptr);
            using globalF2DW403_ptr = uint32_t (WINAPIV*)(float);
            using globalF2DW403_clbk = uint32_t (WINAPIV*)(float, globalF2DW403_ptr);
            using globalFastBBoShasiToFrameBuffer404_ptr = void (WINAPIV*)(struct CLevel*, uint32_t);
            using globalFastBBoShasiToFrameBuffer404_clbk = void (WINAPIV*)(struct CLevel*, uint32_t, globalFastBBoShasiToFrameBuffer404_ptr);
            using globalFastCmp405_ptr = int64_t (WINAPIV*)(uint32_t*, uint32_t*, uint32_t);
            using globalFastCmp405_clbk = int64_t (WINAPIV*)(uint32_t*, uint32_t*, uint32_t, globalFastCmp405_ptr);
            using globalFatalError406_ptr = void (WINAPIV*)(char*, char*);
            using globalFatalError406_clbk = void (WINAPIV*)(char*, char*, globalFatalError406_ptr);
            using globalFindAllFile408_ptr = int (WINAPIV*)(char*, char**, int);
            using globalFindAllFile408_clbk = int (WINAPIV*)(char*, char**, int, globalFindAllFile408_ptr);
            using globalFindEmptyAnimus410_ptr = struct CAnimus* (WINAPIV*)(struct CAnimus*, int);
            using globalFindEmptyAnimus410_clbk = struct CAnimus* (WINAPIV*)(struct CAnimus*, int, globalFindEmptyAnimus410_ptr);
            using globalFindEmptyNPC412_ptr = struct CMerchant* (WINAPIV*)(struct CMerchant*, int);
            using globalFindEmptyNPC412_clbk = struct CMerchant* (WINAPIV*)(struct CMerchant*, int, globalFindEmptyNPC412_ptr);
            using globalFindEmptyParkingUnit414_ptr = struct CParkingUnit* (WINAPIV*)(struct CParkingUnit*, int);
            using globalFindEmptyParkingUnit414_clbk = struct CParkingUnit* (WINAPIV*)(struct CParkingUnit*, int, globalFindEmptyParkingUnit414_ptr);
            using globalFixTalikItemIndex416_ptr = int (WINAPIV*)(char);
            using globalFixTalikItemIndex416_clbk = int (WINAPIV*)(char, globalFixTalikItemIndex416_ptr);
            using globalFloatToShort418_ptr = void (WINAPIV*)(float*, int16_t*, int);
            using globalFloatToShort418_clbk = void (WINAPIV*)(float*, int16_t*, int, globalFloatToShort418_ptr);
            using globalForce32BitRendering419_ptr = void (WINAPIV*)();
            using globalForce32BitRendering419_clbk = void (WINAPIV*)(globalForce32BitRendering419_ptr);
            using globalForceFullScreen420_ptr = void (WINAPIV*)();
            using globalForceFullScreen420_clbk = void (WINAPIV*)(globalForceFullScreen420_ptr);
            using globalFramebufferToBMP421_ptr = void (WINAPIV*)(char*);
            using globalFramebufferToBMP421_clbk = void (WINAPIV*)(char*, globalFramebufferToBMP421_ptr);
            using globalFramebufferToJPG422_ptr = void (WINAPIV*)(char*);
            using globalFramebufferToJPG422_clbk = void (WINAPIV*)(char*, globalFramebufferToJPG422_ptr);
            using globalFreePointer423_ptr = void (WINAPIV*)(void*);
            using globalFreePointer423_clbk = void (WINAPIV*)(void*, globalFreePointer423_ptr);
            using globalFtoDW424_ptr = uint32_t (WINAPIV*)(float);
            using globalFtoDW424_clbk = uint32_t (WINAPIV*)(float, globalFtoDW424_ptr);
            using globalFullScreenEffect425_ptr = void (WINAPIV*)();
            using globalFullScreenEffect425_clbk = void (WINAPIV*)(globalFullScreenEffect425_ptr);
            using globalG427_ptr = unsigned int (WINAPIV*)(unsigned int, unsigned int, unsigned int);
            using globalG427_clbk = unsigned int (WINAPIV*)(unsigned int, unsigned int, unsigned int, globalG427_ptr);
            using globalGet1st1024x1024TexRender428_ptr = struct CTextureRender* (WINAPIV*)();
            using globalGet1st1024x1024TexRender428_clbk = struct CTextureRender* (WINAPIV*)(globalGet1st1024x1024TexRender428_ptr);
            using globalGet1st256x256TexRender429_ptr = struct CTextureRender* (WINAPIV*)();
            using globalGet1st256x256TexRender429_clbk = struct CTextureRender* (WINAPIV*)(globalGet1st256x256TexRender429_ptr);
            using globalGet1st512x512TexRender430_ptr = struct CTextureRender* (WINAPIV*)();
            using globalGet1st512x512TexRender430_clbk = struct CTextureRender* (WINAPIV*)(globalGet1st512x512TexRender430_ptr);
            using globalGet2DTo3DTranslation431_ptr = void (WINAPIV*)(float**, float*, float*, float, float, float, float, float);
            using globalGet2DTo3DTranslation431_clbk = void (WINAPIV*)(float**, float*, float*, float, float, float, float, float, globalGet2DTo3DTranslation431_ptr);
            using globalGet2nd256x256TexRender432_ptr = struct CTextureRender* (WINAPIV*)();
            using globalGet2nd256x256TexRender432_clbk = struct CTextureRender* (WINAPIV*)(globalGet2nd256x256TexRender432_ptr);
            using globalGet2nd512x512TexRender433_ptr = struct CTextureRender* (WINAPIV*)();
            using globalGet2nd512x512TexRender433_clbk = struct CTextureRender* (WINAPIV*)(globalGet2nd512x512TexRender433_ptr);
            using globalGet3DSqrt435_ptr = float (WINAPIV*)(float*, float*);
            using globalGet3DSqrt435_clbk = float (WINAPIV*)(float*, float*, globalGet3DSqrt435_ptr);
            using globalGetAddrString437_ptr = void (WINAPIV*)(struct sockaddr_ipx*, char*);
            using globalGetAddrString437_clbk = void (WINAPIV*)(struct sockaddr_ipx*, char*, globalGetAddrString437_ptr);
            using globalGetAllPlayingWaves438_ptr = uint32_t (WINAPIV*)();
            using globalGetAllPlayingWaves438_clbk = uint32_t (WINAPIV*)(globalGetAllPlayingWaves438_ptr);
            using globalGetAngle440_ptr = float (WINAPIV*)(float*, float*);
            using globalGetAngle440_clbk = float (WINAPIV*)(float*, float*, globalGetAngle440_ptr);
            using globalGetAniMatrix441_ptr = void (WINAPIV*)(float**, struct _ANI_OBJECT*, float);
            using globalGetAniMatrix441_clbk = void (WINAPIV*)(float**, struct _ANI_OBJECT*, float, globalGetAniMatrix441_ptr);
            using globalGetAnimusFldFromExp443_ptr = struct _animus_fld* (WINAPIV*)(int, uint64_t);
            using globalGetAnimusFldFromExp443_clbk = struct _animus_fld* (WINAPIV*)(int, uint64_t, globalGetAnimusFldFromExp443_ptr);
            using globalGetAnimusFldFromLv445_ptr = struct _animus_fld* (WINAPIV*)(int, unsigned int);
            using globalGetAnimusFldFromLv445_clbk = struct _animus_fld* (WINAPIV*)(int, unsigned int, globalGetAnimusFldFromLv445_ptr);
            using globalGetAvailableVidMem446_ptr = uint32_t (WINAPIV*)();
            using globalGetAvailableVidMem446_clbk = uint32_t (WINAPIV*)(globalGetAvailableVidMem446_ptr);
            using globalGetBBoxRotate447_ptr = void (WINAPIV*)(float**, float**, float*, float*, float);
            using globalGetBBoxRotate447_clbk = void (WINAPIV*)(float**, float**, float*, float*, float, globalGetBBoxRotate447_ptr);
            using globalGetBezierPoint448_ptr = void (WINAPIV*)(float**, float**, uint32_t, float);
            using globalGetBezierPoint448_clbk = void (WINAPIV*)(float**, float**, uint32_t, float, globalGetBezierPoint448_ptr);
            using globalGetBillboardMatrix449_ptr = void (WINAPIV*)(struct D3DXMATRIX*, float*, float*);
            using globalGetBillboardMatrix449_clbk = void (WINAPIV*)(struct D3DXMATRIX*, float*, float*, globalGetBillboardMatrix449_ptr);
            using globalGetBitAfterDowngrade451_ptr = unsigned int (WINAPIV*)(unsigned int, char);
            using globalGetBitAfterDowngrade451_clbk = unsigned int (WINAPIV*)(unsigned int, char, globalGetBitAfterDowngrade451_ptr);
            using globalGetBitAfterSetLimSocket453_ptr = unsigned int (WINAPIV*)(char);
            using globalGetBitAfterSetLimSocket453_clbk = unsigned int (WINAPIV*)(char, globalGetBitAfterSetLimSocket453_ptr);
            using globalGetBitAfterUpgrade455_ptr = unsigned int (WINAPIV*)(unsigned int, unsigned int, char);
            using globalGetBitAfterUpgrade455_clbk = unsigned int (WINAPIV*)(unsigned int, unsigned int, char, globalGetBitAfterUpgrade455_ptr);
            using globalGetBoldSubLeng456_ptr = int32_t (WINAPIV*)(char*);
            using globalGetBoldSubLeng456_clbk = int32_t (WINAPIV*)(char*, globalGetBoldSubLeng456_ptr);
            using globalGetBumpFactor457_ptr = void (WINAPIV*)(float*);
            using globalGetBumpFactor457_clbk = void (WINAPIV*)(float*, globalGetBumpFactor457_ptr);
            using globalGetCameraPos458_ptr = void (WINAPIV*)(float**);
            using globalGetCameraPos458_clbk = void (WINAPIV*)(float**, globalGetCameraPos458_ptr);
            using globalGetCharFromKey459_ptr = int64_t (WINAPIV*)();
            using globalGetCharFromKey459_clbk = int64_t (WINAPIV*)(globalGetCharFromKey459_ptr);
            using globalGetCheckTimeFromCombineExCheckKey461_ptr = unsigned int (WINAPIV*)(unsigned int);
            using globalGetCheckTimeFromCombineExCheckKey461_clbk = unsigned int (WINAPIV*)(unsigned int, globalGetCheckTimeFromCombineExCheckKey461_ptr);
            using globalGetColorToColorAlpha462_ptr = uint32_t (WINAPIV*)(uint32_t, uint32_t, float);
            using globalGetColorToColorAlpha462_clbk = uint32_t (WINAPIV*)(uint32_t, uint32_t, float, globalGetColorToColorAlpha462_ptr);
            using globalGetConnectTime_AddBySec464_ptr = unsigned int (WINAPIV*)(int);
            using globalGetConnectTime_AddBySec464_clbk = unsigned int (WINAPIV*)(int, globalGetConnectTime_AddBySec464_ptr);
            using globalGetConsoleStateB465_ptr = int64_t (WINAPIV*)(int);
            using globalGetConsoleStateB465_clbk = int64_t (WINAPIV*)(int, globalGetConsoleStateB465_ptr);
            using globalGetContrast466_ptr = void (WINAPIV*)(uint8_t*);
            using globalGetContrast466_clbk = void (WINAPIV*)(uint8_t*, globalGetContrast466_ptr);
            using globalGetCurDay468_ptr = int (WINAPIV*)();
            using globalGetCurDay468_clbk = int (WINAPIV*)(globalGetCurDay468_ptr);
            using globalGetCurHour470_ptr = int (WINAPIV*)();
            using globalGetCurHour470_clbk = int (WINAPIV*)(globalGetCurHour470_ptr);
            using globalGetCurrentDay472_ptr = int (WINAPIV*)();
            using globalGetCurrentDay472_clbk = int (WINAPIV*)(globalGetCurrentDay472_ptr);
            using globalGetCurrentHour474_ptr = int (WINAPIV*)();
            using globalGetCurrentHour474_clbk = int (WINAPIV*)(globalGetCurrentHour474_ptr);
            using globalGetCurrentMin476_ptr = int (WINAPIV*)();
            using globalGetCurrentMin476_clbk = int (WINAPIV*)(globalGetCurrentMin476_ptr);
            using globalGetCurrentMonth478_ptr = int (WINAPIV*)();
            using globalGetCurrentMonth478_clbk = int (WINAPIV*)(globalGetCurrentMonth478_ptr);
            using globalGetCurrentSec480_ptr = int (WINAPIV*)();
            using globalGetCurrentSec480_clbk = int (WINAPIV*)(globalGetCurrentSec480_ptr);
            using globalGetCurrentYear482_ptr = int (WINAPIV*)();
            using globalGetCurrentYear482_clbk = int (WINAPIV*)(globalGetCurrentYear482_ptr);
            using globalGetCurwDay484_ptr = int (WINAPIV*)();
            using globalGetCurwDay484_clbk = int (WINAPIV*)(globalGetCurwDay484_ptr);
            using globalGetD3DTexture485_ptr = struct IDirect3DTexture8* (WINAPIV*)(uint16_t, uint16_t, _D3DFORMAT, uint16_t, uint16_t, _D3DFORMAT, uint8_t*, uint32_t);
            using globalGetD3DTexture485_clbk = struct IDirect3DTexture8* (WINAPIV*)(uint16_t, uint16_t, _D3DFORMAT, uint16_t, uint16_t, _D3DFORMAT, uint8_t*, uint32_t, globalGetD3DTexture485_ptr);
            using globalGetD3DTextureFromBuffer486_ptr = struct IDirect3DTexture8* (WINAPIV*)(uint8_t*, uint32_t, uint32_t);
            using globalGetD3DTextureFromBuffer486_clbk = struct IDirect3DTexture8* (WINAPIV*)(uint8_t*, uint32_t, uint32_t, globalGetD3DTextureFromBuffer486_ptr);
            using globalGetD3dDevice487_ptr = struct IDirect3DDevice8* (WINAPIV*)();
            using globalGetD3dDevice487_clbk = struct IDirect3DDevice8* (WINAPIV*)(globalGetD3dDevice487_ptr);
            using globalGetDDSTexFromBuffer488_ptr = void* (WINAPIV*)(uint16_t, uint16_t, uint32_t, uint8_t*);
            using globalGetDDSTexFromBuffer488_clbk = void* (WINAPIV*)(uint16_t, uint16_t, uint32_t, uint8_t*, globalGetDDSTexFromBuffer488_ptr);
            using globalGetDateStrAfterDay490_ptr = bool (WINAPIV*)(char*, int, uint16_t);
            using globalGetDateStrAfterDay490_clbk = bool (WINAPIV*)(char*, int, uint16_t, globalGetDateStrAfterDay490_ptr);
            using globalGetDateTimeStr492_ptr = bool (WINAPIV*)(char*);
            using globalGetDateTimeStr492_clbk = bool (WINAPIV*)(char*, globalGetDateTimeStr492_ptr);
            using globalGetDefItemUpgSocketNum494_ptr = char (WINAPIV*)(int, int);
            using globalGetDefItemUpgSocketNum494_clbk = char (WINAPIV*)(int, int, globalGetDefItemUpgSocketNum494_ptr);
            using globalGetDensityFromPos495_ptr = float (WINAPIV*)(float*);
            using globalGetDensityFromPos495_clbk = float (WINAPIV*)(float*, globalGetDensityFromPos495_ptr);
            using globalGetDirection497_ptr = void (WINAPIV*)(float**, float**, float**, float);
            using globalGetDirection497_clbk = void (WINAPIV*)(float**, float**, float**, float, globalGetDirection497_ptr);
            using globalGetDist498_ptr = float (WINAPIV*)(float*, float*);
            using globalGetDist498_clbk = float (WINAPIV*)(float*, float*, globalGetDist498_ptr);
            using globalGetDmallocCnt499_ptr = uint32_t (WINAPIV*)();
            using globalGetDmallocCnt499_clbk = uint32_t (WINAPIV*)(globalGetDmallocCnt499_ptr);
            using globalGetDmallocSize500_ptr = int64_t (WINAPIV*)();
            using globalGetDmallocSize500_clbk = int64_t (WINAPIV*)(globalGetDmallocSize500_ptr);
            using globalGetDuration501_ptr = float (WINAPIV*)();
            using globalGetDuration501_clbk = float (WINAPIV*)(globalGetDuration501_ptr);
            using globalGetDynamicLight502_ptr = void (WINAPIV*)(uint32_t, float*, float*, uint32_t*, void**, uint32_t*);
            using globalGetDynamicLight502_clbk = void (WINAPIV*)(uint32_t, float*, float*, uint32_t*, void**, uint32_t*, globalGetDynamicLight502_ptr);
            using globalGetDynamicLightBBox503_ptr = void (WINAPIV*)(uint32_t, float**, float**);
            using globalGetDynamicLightBBox503_clbk = void (WINAPIV*)(uint32_t, float**, float**, globalGetDynamicLightBBox503_ptr);
            using globalGetDynamicLightNum504_ptr = uint32_t (WINAPIV*)();
            using globalGetDynamicLightNum504_clbk = uint32_t (WINAPIV*)(globalGetDynamicLightNum504_ptr);
            using globalGetEXT505_ptr = void (WINAPIV*)(char*, char*);
            using globalGetEXT505_clbk = void (WINAPIV*)(char*, char*, globalGetEXT505_ptr);
            using globalGetEmptyGuildData507_ptr = struct CGuild* (WINAPIV*)(struct CGuild*, int);
            using globalGetEmptyGuildData507_clbk = struct CGuild* (WINAPIV*)(struct CGuild*, int, globalGetEmptyGuildData507_ptr);
            using globalGetEntityAnimationPos508_ptr = void (WINAPIV*)(float*, struct CParticle*);
            using globalGetEntityAnimationPos508_clbk = void (WINAPIV*)(float*, struct CParticle*, globalGetEntityAnimationPos508_ptr);
            using globalGetExcelIndexFromCombineExCheckKey510_ptr = uint16_t (WINAPIV*)(unsigned int);
            using globalGetExcelIndexFromCombineExCheckKey510_clbk = uint16_t (WINAPIV*)(unsigned int, globalGetExcelIndexFromCombineExCheckKey510_ptr);
            using globalGetFPS511_ptr = float (WINAPIV*)();
            using globalGetFPS511_clbk = float (WINAPIV*)(globalGetFPS511_ptr);
            using globalGetFileSize512_ptr = int64_t (WINAPIV*)(char*);
            using globalGetFileSize512_clbk = int64_t (WINAPIV*)(char*, globalGetFileSize512_ptr);
            using globalGetFileSizeAndMergeFile513_ptr = uint32_t (WINAPIV*)(char*);
            using globalGetFileSizeAndMergeFile513_clbk = uint32_t (WINAPIV*)(char*, globalGetFileSizeAndMergeFile513_ptr);
            using globalGetFinalBilloardMatrix514_ptr = void (WINAPIV*)(float**, float**, struct CParticle*, uint32_t);
            using globalGetFinalBilloardMatrix514_clbk = void (WINAPIV*)(float**, float**, struct CParticle*, uint32_t, globalGetFinalBilloardMatrix514_ptr);
            using globalGetFinalPath515_ptr = void (WINAPIV*)(char*, char*);
            using globalGetFinalPath515_clbk = void (WINAPIV*)(char*, char*, globalGetFinalPath515_ptr);
            using globalGetFloatMod516_ptr = float (WINAPIV*)(float, float);
            using globalGetFloatMod516_clbk = float (WINAPIV*)(float, float, globalGetFloatMod516_ptr);
            using globalGetFogColor517_ptr = uint32_t (WINAPIV*)();
            using globalGetFogColor517_clbk = uint32_t (WINAPIV*)(globalGetFogColor517_ptr);
            using globalGetFrustumNormalPlane518_ptr = void (WINAPIV*)(float**);
            using globalGetFrustumNormalPlane518_clbk = void (WINAPIV*)(float**, globalGetFrustumNormalPlane518_ptr);
            using globalGetGlobalMusicVolume519_ptr = float (WINAPIV*)();
            using globalGetGlobalMusicVolume519_clbk = float (WINAPIV*)(globalGetGlobalMusicVolume519_ptr);
            using globalGetGlobalWavVolume520_ptr = float (WINAPIV*)();
            using globalGetGlobalWavVolume520_clbk = float (WINAPIV*)(globalGetGlobalWavVolume520_ptr);
            using globalGetGravity521_ptr = float (WINAPIV*)(float);
            using globalGetGravity521_clbk = float (WINAPIV*)(float, globalGetGravity521_ptr);
            using globalGetGuildDataFromSerial523_ptr = struct CGuild* (WINAPIV*)(struct CGuild*, int, unsigned int);
            using globalGetGuildDataFromSerial523_clbk = struct CGuild* (WINAPIV*)(struct CGuild*, int, unsigned int, globalGetGuildDataFromSerial523_ptr);
            using globalGetGuildPtrFromName525_ptr = struct CGuild* (WINAPIV*)(struct CGuild*, int, char*);
            using globalGetGuildPtrFromName525_clbk = struct CGuild* (WINAPIV*)(struct CGuild*, int, char*, globalGetGuildPtrFromName525_ptr);
            using globalGetHeadMatrix526_ptr = void (WINAPIV*)(struct D3DXMATRIX*, struct R3Camera*, float, int32_t, int32_t);
            using globalGetHeadMatrix526_clbk = void (WINAPIV*)(struct D3DXMATRIX*, struct R3Camera*, float, int32_t, int32_t, globalGetHeadMatrix526_ptr);
            using globalGetIPAddress528_ptr = int (WINAPIV*)(char*);
            using globalGetIPAddress528_clbk = int (WINAPIV*)(char*, globalGetIPAddress528_ptr);
            using globalGetIPAddress530_ptr = int (WINAPIV*)(struct sockaddr_in*);
            using globalGetIPAddress530_clbk = int (WINAPIV*)(struct sockaddr_in*, globalGetIPAddress530_ptr);
            using globalGetIPAddress532_ptr = unsigned int (WINAPIV*)();
            using globalGetIPAddress532_clbk = unsigned int (WINAPIV*)(globalGetIPAddress532_ptr);
            using globalGetInverseTransformVertex533_ptr = void (WINAPIV*)(float*, float*);
            using globalGetInverseTransformVertex533_clbk = void (WINAPIV*)(float*, float*, globalGetInverseTransformVertex533_ptr);
            using globalGetItemDurPoint535_ptr = int (WINAPIV*)(int, int);
            using globalGetItemDurPoint535_clbk = int (WINAPIV*)(int, int, globalGetItemDurPoint535_ptr);
            using globalGetItemEquipCivil537_ptr = char* (WINAPIV*)(int, int);
            using globalGetItemEquipCivil537_clbk = char* (WINAPIV*)(int, int, globalGetItemEquipCivil537_ptr);
            using globalGetItemEquipGrade539_ptr = int (WINAPIV*)(int, char*);
            using globalGetItemEquipGrade539_clbk = int (WINAPIV*)(int, char*, globalGetItemEquipGrade539_ptr);
            using globalGetItemEquipGrade541_ptr = int (WINAPIV*)(int, int);
            using globalGetItemEquipGrade541_clbk = int (WINAPIV*)(int, int, globalGetItemEquipGrade541_ptr);
            using globalGetItemEquipLevel543_ptr = int (WINAPIV*)(int, int);
            using globalGetItemEquipLevel543_clbk = int (WINAPIV*)(int, int, globalGetItemEquipLevel543_ptr);
            using globalGetItemEquipMastery545_ptr = struct _EQUIP_MASTERY_LIM* (WINAPIV*)(int, int, int*);
            using globalGetItemEquipMastery545_clbk = struct _EQUIP_MASTERY_LIM* (WINAPIV*)(int, int, int*, globalGetItemEquipMastery545_ptr);
            using globalGetItemEquipUpLevel547_ptr = int (WINAPIV*)(int, int);
            using globalGetItemEquipUpLevel547_clbk = int (WINAPIV*)(int, int, globalGetItemEquipUpLevel547_ptr);
            using globalGetItemGoldPoint549_ptr = int (WINAPIV*)(int, int, int, char*);
            using globalGetItemGoldPoint549_clbk = int (WINAPIV*)(int, int, int, char*, globalGetItemGoldPoint549_ptr);
            using globalGetItemGrade551_ptr = char (WINAPIV*)(int, int);
            using globalGetItemGrade551_clbk = char (WINAPIV*)(int, int, globalGetItemGrade551_ptr);
            using globalGetItemKillPoint553_ptr = int (WINAPIV*)(int, int, int, char*);
            using globalGetItemKillPoint553_clbk = int (WINAPIV*)(int, int, int, char*, globalGetItemKillPoint553_ptr);
            using globalGetItemKindCode555_ptr = char (WINAPIV*)(int);
            using globalGetItemKindCode555_clbk = char (WINAPIV*)(int, globalGetItemKindCode555_ptr);
            using globalGetItemKorName557_ptr = char* (WINAPIV*)(int, int);
            using globalGetItemKorName557_clbk = char* (WINAPIV*)(int, int, globalGetItemKorName557_ptr);
            using globalGetItemProcPoint559_ptr = int (WINAPIV*)(int, int, int, char*);
            using globalGetItemProcPoint559_clbk = int (WINAPIV*)(int, int, int, char*, globalGetItemProcPoint559_ptr);
            using globalGetItemStdPoint561_ptr = int (WINAPIV*)(int, int, int, char*);
            using globalGetItemStdPoint561_clbk = int (WINAPIV*)(int, int, int, char*, globalGetItemStdPoint561_ptr);
            using globalGetItemStdPrice563_ptr = int (WINAPIV*)(int, int, int, char*);
            using globalGetItemStdPrice563_clbk = int (WINAPIV*)(int, int, int, char*, globalGetItemStdPrice563_ptr);
            using globalGetItemStoragePrice565_ptr = int (WINAPIV*)(int, int, int);
            using globalGetItemStoragePrice565_clbk = int (WINAPIV*)(int, int, int, globalGetItemStoragePrice565_ptr);
            using globalGetItemTableCode567_ptr = int (WINAPIV*)(char*);
            using globalGetItemTableCode567_clbk = int (WINAPIV*)(char*, globalGetItemTableCode567_ptr);
            using globalGetItemUpgLimSocket569_ptr = char (WINAPIV*)(unsigned int);
            using globalGetItemUpgLimSocket569_clbk = char (WINAPIV*)(unsigned int, globalGetItemUpgLimSocket569_ptr);
            using globalGetItemUpgedLv571_ptr = char (WINAPIV*)(unsigned int);
            using globalGetItemUpgedLv571_clbk = char (WINAPIV*)(unsigned int, globalGetItemUpgedLv571_ptr);
            using globalGetJPGDimensions572_ptr = int64_t (WINAPIV*)(char*, unsigned int*, unsigned int*);
            using globalGetJPGDimensions572_clbk = int64_t (WINAPIV*)(char*, unsigned int*, unsigned int*, globalGetJPGDimensions572_ptr);
            using globalGetKorLocalTime574_ptr = unsigned int (WINAPIV*)();
            using globalGetKorLocalTime574_clbk = unsigned int (WINAPIV*)(globalGetKorLocalTime574_ptr);
            using globalGetLastWriteFileTime576_ptr = bool (WINAPIV*)(char*, struct _FILETIME*);
            using globalGetLastWriteFileTime576_clbk = bool (WINAPIV*)(char*, struct _FILETIME*, globalGetLastWriteFileTime576_ptr);
            using globalGetLightMapColor577_ptr = uint32_t (WINAPIV*)(float*, int);
            using globalGetLightMapColor577_clbk = uint32_t (WINAPIV*)(float*, int, globalGetLightMapColor577_ptr);
            using globalGetLightMapSurface578_ptr = void* (WINAPIV*)(int);
            using globalGetLightMapSurface578_clbk = void* (WINAPIV*)(int, globalGetLightMapSurface578_ptr);
            using globalGetLightMapTexSize579_ptr = uint32_t (WINAPIV*)();
            using globalGetLightMapTexSize579_clbk = uint32_t (WINAPIV*)(globalGetLightMapTexSize579_ptr);
            using globalGetLocalDate581_ptr = unsigned int (WINAPIV*)();
            using globalGetLocalDate581_clbk = unsigned int (WINAPIV*)(globalGetLocalDate581_ptr);
            using globalGetLoopTime583_ptr = unsigned int (WINAPIV*)();
            using globalGetLoopTime583_clbk = unsigned int (WINAPIV*)(globalGetLoopTime583_ptr);
            using globalGetMacAddrString585_ptr = void (WINAPIV*)(char*, uint64_t);
            using globalGetMacAddrString585_clbk = void (WINAPIV*)(char*, uint64_t, globalGetMacAddrString585_ptr);
            using globalGetMainMaterial586_ptr = struct _R3MATERIAL* (WINAPIV*)();
            using globalGetMainMaterial586_clbk = struct _R3MATERIAL* (WINAPIV*)(globalGetMainMaterial586_ptr);
            using globalGetMainMaterialNum587_ptr = uint32_t (WINAPIV*)();
            using globalGetMainMaterialNum587_clbk = uint32_t (WINAPIV*)(globalGetMainMaterialNum587_ptr);
            using globalGetMatLightFromColor588_ptr = void (WINAPIV*)(struct _D3DLIGHT8*, struct _D3DMATERIAL8*, uint32_t, float);
            using globalGetMatLightFromColor588_clbk = void (WINAPIV*)(struct _D3DLIGHT8*, struct _D3DMATERIAL8*, uint32_t, float, globalGetMatLightFromColor588_ptr);
            using globalGetMaterialNameNum589_ptr = int64_t (WINAPIV*)(struct _R3MATERIAL*);
            using globalGetMaterialNameNum589_clbk = int64_t (WINAPIV*)(struct _R3MATERIAL*, globalGetMaterialNameNum589_ptr);
            using globalGetMatrixFrom3DSMAXMatrix590_ptr = void (WINAPIV*)(float**);
            using globalGetMatrixFrom3DSMAXMatrix590_clbk = void (WINAPIV*)(float**, globalGetMatrixFrom3DSMAXMatrix590_ptr);
            using globalGetMatrixFromAtoB591_ptr = void (WINAPIV*)(float**, float*, float*);
            using globalGetMatrixFromAtoB591_clbk = void (WINAPIV*)(float**, float*, float*, globalGetMatrixFromAtoB591_ptr);
            using globalGetMatrixFromAtoB2592_ptr = void (WINAPIV*)(float**, float*, float*);
            using globalGetMatrixFromAtoB2592_clbk = void (WINAPIV*)(float**, float*, float*, globalGetMatrixFromAtoB2592_ptr);
            using globalGetMatrixFromVector593_ptr = void (WINAPIV*)(float**, float*, float*);
            using globalGetMatrixFromVector593_clbk = void (WINAPIV*)(float**, float*, float*, globalGetMatrixFromVector593_ptr);
            using globalGetMaxParamFromExp595_ptr = unsigned int (WINAPIV*)(int, uint64_t);
            using globalGetMaxParamFromExp595_clbk = unsigned int (WINAPIV*)(int, uint64_t, globalGetMaxParamFromExp595_ptr);
            using globalGetMaxResKind597_ptr = int (WINAPIV*)();
            using globalGetMaxResKind597_clbk = int (WINAPIV*)(globalGetMaxResKind597_ptr);
            using globalGetMergeFileManager598_ptr = struct CMergeFileManager* (WINAPIV*)();
            using globalGetMergeFileManager598_clbk = struct CMergeFileManager* (WINAPIV*)(globalGetMergeFileManager598_ptr);
            using globalGetMipMapSkipSize599_ptr = int64_t (WINAPIV*)(struct _DDSURFACEDESC2*, uint32_t, uint32_t, uint32_t);
            using globalGetMipMapSkipSize599_clbk = int64_t (WINAPIV*)(struct _DDSURFACEDESC2*, uint32_t, uint32_t, uint32_t, globalGetMipMapSkipSize599_ptr);
            using globalGetMotionBlurLength600_ptr = float (WINAPIV*)();
            using globalGetMotionBlurLength600_clbk = float (WINAPIV*)(globalGetMotionBlurLength600_ptr);
            using globalGetMultiLayerTime601_ptr = float (WINAPIV*)();
            using globalGetMultiLayerTime601_clbk = float (WINAPIV*)(globalGetMultiLayerTime601_ptr);
            using globalGetNextDay603_ptr = int (WINAPIV*)();
            using globalGetNextDay603_clbk = int (WINAPIV*)(globalGetNextDay603_ptr);
            using globalGetNormal604_ptr = void (WINAPIV*)(float*, float*, float*, float*);
            using globalGetNormal604_clbk = void (WINAPIV*)(float*, float*, float*, float*, globalGetNormal604_ptr);
            using globalGetNowDateTime606_ptr = void (WINAPIV*)(char*);
            using globalGetNowDateTime606_clbk = void (WINAPIV*)(char*, globalGetNowDateTime606_ptr);
            using globalGetNowFrame607_ptr = float (WINAPIV*)();
            using globalGetNowFrame607_clbk = float (WINAPIV*)(globalGetNowFrame607_ptr);
            using globalGetNowFreeJmallocSize608_ptr = int64_t (WINAPIV*)();
            using globalGetNowFreeJmallocSize608_clbk = int64_t (WINAPIV*)(globalGetNowFreeJmallocSize608_ptr);
            using globalGetNowHWnd609_ptr = HWND (WINAPIV*)();
            using globalGetNowHWnd609_clbk = HWND (WINAPIV*)(globalGetNowHWnd609_ptr);
            using globalGetNowJmallocSize610_ptr = int64_t (WINAPIV*)();
            using globalGetNowJmallocSize610_clbk = int64_t (WINAPIV*)(globalGetNowJmallocSize610_ptr);
            using globalGetNowPath611_ptr = int64_t (WINAPIV*)(char*);
            using globalGetNowPath611_clbk = int64_t (WINAPIV*)(char*, globalGetNowPath611_ptr);
            using globalGetNowR3D3DTexCnt612_ptr = int64_t (WINAPIV*)();
            using globalGetNowR3D3DTexCnt612_clbk = int64_t (WINAPIV*)(globalGetNowR3D3DTexCnt612_ptr);
            using globalGetNowR3TexCnt613_ptr = int64_t (WINAPIV*)();
            using globalGetNowR3TexCnt613_clbk = int64_t (WINAPIV*)(globalGetNowR3TexCnt613_ptr);
            using globalGetNowTexMemSize614_ptr = uint32_t (WINAPIV*)();
            using globalGetNowTexMemSize614_clbk = uint32_t (WINAPIV*)(globalGetNowTexMemSize614_ptr);
            using globalGetNumAllFile616_ptr = int (WINAPIV*)(char*);
            using globalGetNumAllFile616_clbk = int (WINAPIV*)(char*, globalGetNumAllFile616_ptr);
            using globalGetObjectMatrix617_ptr = void (WINAPIV*)(float**, uint16_t, struct _ANI_OBJECT*, float);
            using globalGetObjectMatrix617_clbk = void (WINAPIV*)(float**, uint16_t, struct _ANI_OBJECT*, float, globalGetObjectMatrix617_ptr);
            using globalGetOldRenderTarget618_ptr = struct IDirect3DSurface8* (WINAPIV*)();
            using globalGetOldRenderTarget618_clbk = struct IDirect3DSurface8* (WINAPIV*)(globalGetOldRenderTarget618_ptr);
            using globalGetOldStencilZ619_ptr = struct IDirect3DSurface8* (WINAPIV*)();
            using globalGetOldStencilZ619_clbk = struct IDirect3DSurface8* (WINAPIV*)(globalGetOldStencilZ619_ptr);
            using globalGetOneNameFromPath620_ptr = uint32_t (WINAPIV*)(char*, char*, uint32_t*);
            using globalGetOneNameFromPath620_clbk = uint32_t (WINAPIV*)(char*, char*, uint32_t*, globalGetOneNameFromPath620_ptr);
            using globalGetOutLineColor621_ptr = uint32_t (WINAPIV*)();
            using globalGetOutLineColor621_clbk = uint32_t (WINAPIV*)(globalGetOutLineColor621_ptr);
            using globalGetOutLineColorFont16622_ptr = uint32_t (WINAPIV*)();
            using globalGetOutLineColorFont16622_clbk = uint32_t (WINAPIV*)(globalGetOutLineColorFont16622_ptr);
            using globalGetOutLineColorFont24623_ptr = uint32_t (WINAPIV*)();
            using globalGetOutLineColorFont24623_clbk = uint32_t (WINAPIV*)(globalGetOutLineColorFont24623_ptr);
            using globalGetPlaneCrossPoint624_ptr = uint32_t (WINAPIV*)(float*, float*, float*, float*, float);
            using globalGetPlaneCrossPoint624_clbk = uint32_t (WINAPIV*)(float*, float*, float*, float*, float, globalGetPlaneCrossPoint624_ptr);
            using globalGetPlaneCrossPoint625_ptr = int64_t (WINAPIV*)(float*, float*, float*, float*, float, float);
            using globalGetPlaneCrossPoint625_clbk = int64_t (WINAPIV*)(float*, float*, float*, float*, float, float, globalGetPlaneCrossPoint625_ptr);
            using globalGetPointCamera626_ptr = void (WINAPIV*)(float**);
            using globalGetPointCamera626_clbk = void (WINAPIV*)(float**, globalGetPointCamera626_ptr);
            using globalGetPosByDistFromATOB627_ptr = void (WINAPIV*)(float**, float*, float*, float);
            using globalGetPosByDistFromATOB627_clbk = void (WINAPIV*)(float**, float*, float*, float, globalGetPosByDistFromATOB627_ptr);
            using globalGetPreParticleList628_ptr = _PRE_PARTICLE_LIST* (WINAPIV*)(int);
            using globalGetPreParticleList628_clbk = _PRE_PARTICLE_LIST* (WINAPIV*)(int, globalGetPreParticleList628_ptr);
            using globalGetPreParticleListNum629_ptr = int64_t (WINAPIV*)();
            using globalGetPreParticleListNum629_clbk = int64_t (WINAPIV*)(globalGetPreParticleListNum629_ptr);
            using globalGetPrevDay631_ptr = int (WINAPIV*)();
            using globalGetPrevDay631_clbk = int (WINAPIV*)(globalGetPrevDay631_ptr);
            using globalGetProjectMatrix632_ptr = void (WINAPIV*)(struct D3DXMATRIX*);
            using globalGetProjectMatrix632_clbk = void (WINAPIV*)(struct D3DXMATRIX*, globalGetProjectMatrix632_ptr);
            using globalGetPtrPlayerFromAccount634_ptr = struct CPlayer* (WINAPIV*)(struct CPlayer*, int, char*);
            using globalGetPtrPlayerFromAccount634_clbk = struct CPlayer* (WINAPIV*)(struct CPlayer*, int, char*, globalGetPtrPlayerFromAccount634_ptr);
            using globalGetPtrPlayerFromAccountSerial636_ptr = struct CPlayer* (WINAPIV*)(struct CPlayer*, int, unsigned int);
            using globalGetPtrPlayerFromAccountSerial636_clbk = struct CPlayer* (WINAPIV*)(struct CPlayer*, int, unsigned int, globalGetPtrPlayerFromAccountSerial636_ptr);
            using globalGetPtrPlayerFromCharSerial638_ptr = struct CPlayer* (WINAPIV*)(int, unsigned int);
            using globalGetPtrPlayerFromCharSerial638_clbk = struct CPlayer* (WINAPIV*)(int, unsigned int, globalGetPtrPlayerFromCharSerial638_ptr);
            using globalGetPtrPlayerFromName640_ptr = struct CPlayer* (WINAPIV*)(struct CPlayer*, int, char*);
            using globalGetPtrPlayerFromName640_clbk = struct CPlayer* (WINAPIV*)(struct CPlayer*, int, char*, globalGetPtrPlayerFromName640_ptr);
            using globalGetPtrPlayerFromSerial642_ptr = struct CPlayer* (WINAPIV*)(struct CPlayer*, int, unsigned int);
            using globalGetPtrPlayerFromSerial642_clbk = struct CPlayer* (WINAPIV*)(struct CPlayer*, int, unsigned int, globalGetPtrPlayerFromSerial642_ptr);
            using globalGetQLen644_ptr = int (WINAPIV*)(float*, float*);
            using globalGetQLen644_clbk = int (WINAPIV*)(float*, float*, globalGetQLen644_ptr);
            using globalGetQuaternionFromVector645_ptr = void (WINAPIV*)(float*, float*);
            using globalGetQuaternionFromVector645_clbk = void (WINAPIV*)(float*, float*, globalGetQuaternionFromVector645_ptr);
            using globalGetQuaternionFromVector646_ptr = void (WINAPIV*)(float*, float*, float*);
            using globalGetQuaternionFromVector646_clbk = void (WINAPIV*)(float*, float*, float*, globalGetQuaternionFromVector646_ptr);
            using globalGetR3TexManageFlag647_ptr = uint32_t (WINAPIV*)();
            using globalGetR3TexManageFlag647_clbk = uint32_t (WINAPIV*)(globalGetR3TexManageFlag647_ptr);
            using globalGetRandOrNum648_ptr = int64_t (WINAPIV*)(FILE*, float*, float*);
            using globalGetRandOrNum648_clbk = int64_t (WINAPIV*)(FILE*, float*, float*, globalGetRandOrNum648_ptr);
            using globalGetReactArea650_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, struct _react_area*, unsigned int, char*, char*);
            using globalGetReactArea650_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, struct _react_area*, unsigned int, char*, char*, globalGetReactArea650_ptr);
            using globalGetReactObject652_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, struct _react_obj*, bool, unsigned int, char*, char*);
            using globalGetReactObject652_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, struct _react_obj*, bool, unsigned int, char*, char*, globalGetReactObject652_ptr);
            using globalGetReflectionState653_ptr = int64_t (WINAPIV*)();
            using globalGetReflectionState653_clbk = int64_t (WINAPIV*)(globalGetReflectionState653_ptr);
            using globalGetRegionIndex655_ptr = int (WINAPIV*)(int, unsigned int, unsigned int, unsigned int, unsigned int);
            using globalGetRegionIndex655_clbk = int (WINAPIV*)(int, unsigned int, unsigned int, unsigned int, unsigned int, globalGetRegionIndex655_ptr);
            using globalGetRegionName657_ptr = char* (WINAPIV*)(int, unsigned int, unsigned int, unsigned int, unsigned int);
            using globalGetRegionName657_clbk = char* (WINAPIV*)(int, unsigned int, unsigned int, unsigned int, unsigned int, globalGetRegionName657_ptr);
            using globalGetRewardItemNumChangeClass659_ptr = int (WINAPIV*)(struct _class_fld*);
            using globalGetRewardItemNumChangeClass659_clbk = int (WINAPIV*)(struct _class_fld*, globalGetRewardItemNumChangeClass659_ptr);
            using globalGetSFLevel661_ptr = int (WINAPIV*)(int, unsigned int);
            using globalGetSFLevel661_clbk = int (WINAPIV*)(int, unsigned int, globalGetSFLevel661_ptr);
            using globalGetShadowRenderTexture662_ptr = struct CTextureRender* (WINAPIV*)();
            using globalGetShadowRenderTexture662_clbk = struct CTextureRender* (WINAPIV*)(globalGetShadowRenderTexture662_ptr);
            using globalGetShadowTexture663_ptr = struct IDirect3DTexture8* (WINAPIV*)();
            using globalGetShadowTexture663_clbk = struct IDirect3DTexture8* (WINAPIV*)(globalGetShadowTexture663_ptr);
            using globalGetSocketName665_ptr = bool (WINAPIV*)(uint64_t, char*);
            using globalGetSocketName665_clbk = bool (WINAPIV*)(uint64_t, char*, globalGetSocketName665_ptr);
            using globalGetSqrt667_ptr = float (WINAPIV*)(float*, float*);
            using globalGetSqrt667_clbk = float (WINAPIV*)(float*, float*, globalGetSqrt667_ptr);
            using globalGetStaffMastery669_ptr = int (WINAPIV*)(unsigned int*);
            using globalGetStaffMastery669_clbk = int (WINAPIV*)(unsigned int*, globalGetStaffMastery669_ptr);
            using globalGetStateFullScreenEffect670_ptr = uint32_t (WINAPIV*)();
            using globalGetStateFullScreenEffect670_clbk = uint32_t (WINAPIV*)(globalGetStateFullScreenEffect670_ptr);
            using globalGetSubDayStr672_ptr = void (WINAPIV*)(int, char*);
            using globalGetSubDayStr672_clbk = void (WINAPIV*)(int, char*, globalGetSubDayStr672_ptr);
            using globalGetSwimU673_ptr = float (WINAPIV*)(float);
            using globalGetSwimU673_clbk = float (WINAPIV*)(float, globalGetSwimU673_ptr);
            using globalGetSwimV674_ptr = float (WINAPIV*)(float);
            using globalGetSwimV674_clbk = float (WINAPIV*)(float, globalGetSwimV674_ptr);
            using globalGetTalikFromSocket676_ptr = char (WINAPIV*)(unsigned int, char);
            using globalGetTalikFromSocket676_clbk = char (WINAPIV*)(unsigned int, char, globalGetTalikFromSocket676_ptr);
            using globalGetTempBuffer677_ptr = void* (WINAPIV*)();
            using globalGetTempBuffer677_clbk = void* (WINAPIV*)(globalGetTempBuffer677_ptr);
            using globalGetTempBufferSize678_ptr = uint32_t (WINAPIV*)();
            using globalGetTempBufferSize678_clbk = uint32_t (WINAPIV*)(globalGetTempBufferSize678_ptr);
            using globalGetTextureMatrix679_ptr = int (WINAPIV*)(struct _R3MATERIAL*, int, struct D3DXMATRIX*, float);
            using globalGetTextureMatrix679_clbk = int (WINAPIV*)(struct _R3MATERIAL*, int, struct D3DXMATRIX*, float, globalGetTextureMatrix679_ptr);
            using globalGetTileAniTextureAddId680_ptr = int64_t (WINAPIV*)(struct _R3MATERIAL*, int, float);
            using globalGetTileAniTextureAddId680_clbk = int64_t (WINAPIV*)(struct _R3MATERIAL*, int, float, globalGetTileAniTextureAddId680_ptr);
            using globalGetTodayStr682_ptr = void (WINAPIV*)(char*);
            using globalGetTodayStr682_clbk = void (WINAPIV*)(char*, globalGetTodayStr682_ptr);
            using globalGetTokenFloat683_ptr = uint32_t (WINAPIV*)(char*, float*);
            using globalGetTokenFloat683_clbk = uint32_t (WINAPIV*)(char*, float*, globalGetTokenFloat683_ptr);
            using globalGetTotalFrame684_ptr = uint32_t (WINAPIV*)();
            using globalGetTotalFrame684_clbk = uint32_t (WINAPIV*)(globalGetTotalFrame684_ptr);
            using globalGetTotalFreeJmallocSize685_ptr = int64_t (WINAPIV*)();
            using globalGetTotalFreeJmallocSize685_clbk = int64_t (WINAPIV*)(globalGetTotalFreeJmallocSize685_ptr);
            using globalGetTotalVertexBufferCnt686_ptr = uint32_t (WINAPIV*)();
            using globalGetTotalVertexBufferCnt686_clbk = uint32_t (WINAPIV*)(globalGetTotalVertexBufferCnt686_ptr);
            using globalGetTotalVertexBufferSize687_ptr = uint32_t (WINAPIV*)();
            using globalGetTotalVertexBufferSize687_clbk = uint32_t (WINAPIV*)(globalGetTotalVertexBufferSize687_ptr);
            using globalGetTransformVertex688_ptr = int64_t (WINAPIV*)(float**, float*);
            using globalGetTransformVertex688_clbk = int64_t (WINAPIV*)(float**, float*, globalGetTransformVertex688_ptr);
            using globalGetUsePcCashType690_ptr = int (WINAPIV*)(char, int);
            using globalGetUsePcCashType690_clbk = int (WINAPIV*)(char, int, globalGetUsePcCashType690_ptr);
            using globalGetVertexFromBVertex691_ptr = void (WINAPIV*)(float*, void*, struct _BSP_READ_M_GROUP*);
            using globalGetVertexFromBVertex691_clbk = void (WINAPIV*)(float*, void*, struct _BSP_READ_M_GROUP*, globalGetVertexFromBVertex691_ptr);
            using globalGetVertexFromFVertex692_ptr = void (WINAPIV*)(float*, void*, struct _BSP_READ_M_GROUP*);
            using globalGetVertexFromFVertex692_clbk = void (WINAPIV*)(float*, void*, struct _BSP_READ_M_GROUP*, globalGetVertexFromFVertex692_ptr);
            using globalGetVertexFromWVertex693_ptr = void (WINAPIV*)(float*, void*, struct _BSP_READ_M_GROUP*);
            using globalGetVertexFromWVertex693_clbk = void (WINAPIV*)(float*, void*, struct _BSP_READ_M_GROUP*, globalGetVertexFromWVertex693_ptr);
            using globalGetViewMatrix694_ptr = void (WINAPIV*)(struct D3DXMATRIX*);
            using globalGetViewMatrix694_clbk = void (WINAPIV*)(struct D3DXMATRIX*, globalGetViewMatrix694_ptr);
            using globalGetViewVector695_ptr = void (WINAPIV*)(float*);
            using globalGetViewVector695_clbk = void (WINAPIV*)(float*, globalGetViewVector695_ptr);
            using globalGetWeaponClass697_ptr = char (WINAPIV*)(int);
            using globalGetWeaponClass697_clbk = char (WINAPIV*)(int, globalGetWeaponClass697_ptr);
            using globalGetWebBrowserRect698_ptr = void (WINAPIV*)(struct tagRECT*);
            using globalGetWebBrowserRect698_clbk = void (WINAPIV*)(struct tagRECT*, globalGetWebBrowserRect698_ptr);
            using globalGetXAngle699_ptr = float (WINAPIV*)(float*, float*);
            using globalGetXAngle699_clbk = float (WINAPIV*)(float*, float*, globalGetXAngle699_ptr);
            using globalGetYAngle700_ptr = float (WINAPIV*)(float*, float*);
            using globalGetYAngle700_clbk = float (WINAPIV*)(float*, float*, globalGetYAngle700_ptr);
            using globalGetYAngle701_ptr = int (WINAPIV*)(float*, float*, float*);
            using globalGetYAngle701_clbk = int (WINAPIV*)(float*, float*, float*, globalGetYAngle701_ptr);
            using globalGetYAngle703_ptr = float (WINAPIV*)(float*, float*);
            using globalGetYAngle703_clbk = float (WINAPIV*)(float*, float*, globalGetYAngle703_ptr);
            using globalGetYBillboardMatrix704_ptr = void (WINAPIV*)(struct D3DXMATRIX*, int32_t, struct D3DXVECTOR3*);
            using globalGetYBillboardMatrix704_clbk = void (WINAPIV*)(struct D3DXMATRIX*, int32_t, struct D3DXVECTOR3*, globalGetYBillboardMatrix704_ptr);
            using globalGetYBillboardMatrix705_ptr = void (WINAPIV*)(struct D3DXMATRIX*, float*, float*);
            using globalGetYBillboardMatrix705_clbk = void (WINAPIV*)(struct D3DXMATRIX*, float*, float*, globalGetYBillboardMatrix705_ptr);
            using globalGetZBillboardMatrix706_ptr = void (WINAPIV*)(struct D3DXMATRIX*, float*, float*);
            using globalGetZBillboardMatrix706_clbk = void (WINAPIV*)(struct D3DXMATRIX*, float*, float*, globalGetZBillboardMatrix706_ptr);
            using globalGet_CashEvent_Name708_ptr = void (WINAPIV*)(char, char*);
            using globalGet_CashEvent_Name708_clbk = void (WINAPIV*)(char, char*, globalGet_CashEvent_Name708_ptr);
            using globalH710_ptr = unsigned int (WINAPIV*)(unsigned int, unsigned int, unsigned int);
            using globalH710_clbk = unsigned int (WINAPIV*)(unsigned int, unsigned int, unsigned int, globalH710_ptr);
            using globalHtoA712_ptr = void (WINAPIV*)(char*, char*, int);
            using globalHtoA712_clbk = void (WINAPIV*)(char*, char*, int, globalHtoA712_ptr);
            using globalHtoB714_ptr = char (WINAPIV*)(char);
            using globalHtoB714_clbk = char (WINAPIV*)(char, globalHtoB714_ptr);
            using globalI716_ptr = unsigned int (WINAPIV*)(unsigned int, unsigned int, unsigned int);
            using globalI716_clbk = unsigned int (WINAPIV*)(unsigned int, unsigned int, unsigned int, globalI716_ptr);
            using globalIM_LoadWave717_ptr = uint32_t (WINAPIV*)(char*, uint32_t);
            using globalIM_LoadWave717_clbk = uint32_t (WINAPIV*)(char*, uint32_t, globalIM_LoadWave717_ptr);
            using globalIM_PlayWave718_ptr = void (WINAPIV*)(uint32_t, float, float);
            using globalIM_PlayWave718_clbk = void (WINAPIV*)(uint32_t, float, float, globalIM_PlayWave718_ptr);
            using globalIM_ReleaseAllWaves719_ptr = void (WINAPIV*)();
            using globalIM_ReleaseAllWaves719_clbk = void (WINAPIV*)(globalIM_ReleaseAllWaves719_ptr);
            using globalIM_ReleaseWave720_ptr = void (WINAPIV*)(uint32_t);
            using globalIM_ReleaseWave720_clbk = void (WINAPIV*)(uint32_t, globalIM_ReleaseWave720_ptr);
            using globalIM_SetLoopCntWave721_ptr = void (WINAPIV*)(uint32_t, uint32_t);
            using globalIM_SetLoopCntWave721_clbk = void (WINAPIV*)(uint32_t, uint32_t, globalIM_SetLoopCntWave721_ptr);
            using globalIM_SetWaveVolumeAndPan722_ptr = void (WINAPIV*)(uint32_t, float, float);
            using globalIM_SetWaveVolumeAndPan722_clbk = void (WINAPIV*)(uint32_t, float, float, globalIM_SetWaveVolumeAndPan722_ptr);
            using globalIM_StopWave723_ptr = void (WINAPIV*)(uint32_t);
            using globalIM_StopWave723_clbk = void (WINAPIV*)(uint32_t, globalIM_StopWave723_ptr);
            using globalIPConvertingStringToByte725_ptr = bool (WINAPIV*)(char*, char*);
            using globalIPConvertingStringToByte725_clbk = bool (WINAPIV*)(char*, char*, globalIPConvertingStringToByte725_ptr);
            using globalIndexFromPImgThunkData726_ptr = unsigned int (WINAPIV*)(struct _IMAGE_THUNK_DATA64*, struct _IMAGE_THUNK_DATA64*);
            using globalIndexFromPImgThunkData726_clbk = unsigned int (WINAPIV*)(struct _IMAGE_THUNK_DATA64*, struct _IMAGE_THUNK_DATA64*, globalIndexFromPImgThunkData726_ptr);
            using globalInitBlurShader727_ptr = int64_t (WINAPIV*)();
            using globalInitBlurShader727_clbk = int64_t (WINAPIV*)(globalInitBlurShader727_ptr);
            using globalInitCheatCommand729_ptr = void (WINAPIV*)(struct CHEAT_COMMAND*, char*);
            using globalInitCheatCommand729_clbk = void (WINAPIV*)(struct CHEAT_COMMAND*, char*, globalInitCheatCommand729_ptr);
            using globalInitConsole730_ptr = void (WINAPIV*)();
            using globalInitConsole730_clbk = void (WINAPIV*)(globalInitConsole730_ptr);
            using globalInitCore731_ptr = void (WINAPIV*)();
            using globalInitCore731_clbk = void (WINAPIV*)(globalInitCore731_ptr);
            using globalInitFullScreenEffect732_ptr = void (WINAPIV*)();
            using globalInitFullScreenEffect732_clbk = void (WINAPIV*)(globalInitFullScreenEffect732_ptr);
            using globalInitFunctionKey733_ptr = void (WINAPIV*)(char*);
            using globalInitFunctionKey733_clbk = void (WINAPIV*)(char*, globalInitFunctionKey733_ptr);
            using globalInitJmalloc734_ptr = int64_t (WINAPIV*)(int);
            using globalInitJmalloc734_clbk = int64_t (WINAPIV*)(int, globalInitJmalloc734_ptr);
            using globalInitMasteryFormula736_ptr = void (WINAPIV*)(struct CRecordData*, struct CRecordData*);
            using globalInitMasteryFormula736_clbk = void (WINAPIV*)(struct CRecordData*, struct CRecordData*, globalInitMasteryFormula736_ptr);
            using globalInitR3Engine737_ptr = void (WINAPIV*)(int);
            using globalInitR3Engine737_clbk = void (WINAPIV*)(int, globalInitR3Engine737_ptr);
            using globalInitR3Particle738_ptr = void (WINAPIV*)();
            using globalInitR3Particle738_clbk = void (WINAPIV*)(globalInitR3Particle738_ptr);
            using globalInitR3SoundSystem739_ptr = int64_t (WINAPIV*)(char*);
            using globalInitR3SoundSystem739_clbk = int64_t (WINAPIV*)(char*, globalInitR3SoundSystem739_ptr);
            using globalInitR3Text740_ptr = void (WINAPIV*)();
            using globalInitR3Text740_clbk = void (WINAPIV*)(globalInitR3Text740_ptr);
            using globalInitSpriteManager741_ptr = void (WINAPIV*)();
            using globalInitSpriteManager741_clbk = void (WINAPIV*)(globalInitSpriteManager741_ptr);
            using globalInitWebBrowser742_ptr = void (WINAPIV*)(int32_t);
            using globalInitWebBrowser742_clbk = void (WINAPIV*)(int32_t, globalInitWebBrowser742_ptr);
            using globalInsertConsoleStringQ743_ptr = void (WINAPIV*)(char*);
            using globalInsertConsoleStringQ743_clbk = void (WINAPIV*)(char*, globalInsertConsoleStringQ743_ptr);
            using globalInsertDynamicLight744_ptr = int64_t (WINAPIV*)(float*, float, uint32_t, void*, int, uint32_t);
            using globalInsertDynamicLight744_clbk = int64_t (WINAPIV*)(float*, float, uint32_t, void*, int, uint32_t, globalInsertDynamicLight744_ptr);
            using globalInterpolatedNoise_1745_ptr = float (WINAPIV*)(float);
            using globalInterpolatedNoise_1745_clbk = float (WINAPIV*)(float, globalInterpolatedNoise_1745_ptr);
            using globalInterpolatedNoise_1746_ptr = float (WINAPIV*)(float, float);
            using globalInterpolatedNoise_1746_clbk = float (WINAPIV*)(float, float, globalInterpolatedNoise_1746_ptr);
            using globalIsAbrItem748_ptr = int (WINAPIV*)(int, int);
            using globalIsAbrItem748_clbk = int (WINAPIV*)(int, int, globalIsAbrItem748_ptr);
            using globalIsAddAbleTalikToItem750_ptr = bool (WINAPIV*)(char, uint16_t, unsigned int, uint16_t, int*);
            using globalIsAddAbleTalikToItem750_clbk = bool (WINAPIV*)(char, uint16_t, unsigned int, uint16_t, int*, globalIsAddAbleTalikToItem750_ptr);
            using globalIsAniTex751_ptr = int64_t (WINAPIV*)(char*);
            using globalIsAniTex751_clbk = int64_t (WINAPIV*)(char*, globalIsAniTex751_ptr);
            using globalIsBBoxInFrustum752_ptr = int64_t (WINAPIV*)(float*, float*);
            using globalIsBBoxInFrustum752_clbk = int64_t (WINAPIV*)(float*, float*, globalIsBBoxInFrustum752_ptr);
            using globalIsBBoxInFrustum753_ptr = int64_t (WINAPIV*)(int16_t*, int16_t*);
            using globalIsBBoxInFrustum753_clbk = int64_t (WINAPIV*)(int16_t*, int16_t*, globalIsBBoxInFrustum753_ptr);
            using globalIsBeNearStore755_ptr = struct CItemStore* (WINAPIV*)(struct CPlayer*, int);
            using globalIsBeNearStore755_clbk = struct CItemStore* (WINAPIV*)(struct CPlayer*, int, globalIsBeNearStore755_ptr);
            using globalIsBothRayAABB756_ptr = int64_t (WINAPIV*)(float*, float*, float*, float*);
            using globalIsBothRayAABB756_clbk = int64_t (WINAPIV*)(float*, float*, float*, float*, globalIsBothRayAABB756_ptr);
            using globalIsBothRayAABB757_ptr = int (WINAPIV*)(int16_t*, int16_t*, float*, float*);
            using globalIsBothRayAABB757_clbk = int (WINAPIV*)(int16_t*, int16_t*, float*, float*, globalIsBothRayAABB757_ptr);
            using globalIsCashItem759_ptr = int (WINAPIV*)(char, unsigned int);
            using globalIsCashItem759_clbk = int (WINAPIV*)(char, unsigned int, globalIsCashItem759_ptr);
            using globalIsCollisionBBox760_ptr = int64_t (WINAPIV*)(float*, float*, float*, float*);
            using globalIsCollisionBBox760_clbk = int64_t (WINAPIV*)(float*, float*, float*, float*, globalIsCollisionBBox760_ptr);
            using globalIsCollisionBBox761_ptr = int64_t (WINAPIV*)(int16_t*, int16_t*, float*, float*);
            using globalIsCollisionBBox761_clbk = int64_t (WINAPIV*)(int16_t*, int16_t*, float*, float*, globalIsCollisionBBox761_ptr);
            using globalIsCollisionBBox762_ptr = int64_t (WINAPIV*)(int16_t*, int16_t*, int16_t*, int16_t*);
            using globalIsCollisionBBox762_clbk = int64_t (WINAPIV*)(int16_t*, int16_t*, int16_t*, int16_t*, globalIsCollisionBBox762_ptr);
            using globalIsCollisionBBoxPoint763_ptr = int64_t (WINAPIV*)(float*, float*, float*);
            using globalIsCollisionBBoxPoint763_clbk = int64_t (WINAPIV*)(float*, float*, float*, globalIsCollisionBBoxPoint763_ptr);
            using globalIsCollisionBBoxPoint764_ptr = int64_t (WINAPIV*)(int16_t*, int16_t*, float*);
            using globalIsCollisionBBoxPoint764_clbk = int64_t (WINAPIV*)(int16_t*, int16_t*, float*, globalIsCollisionBBoxPoint764_ptr);
            using globalIsCollisionBBoxToFace765_ptr = int64_t (WINAPIV*)(float**, float*, float*, float*);
            using globalIsCollisionBBoxToFace765_clbk = int64_t (WINAPIV*)(float**, float*, float*, float*, globalIsCollisionBBoxToFace765_ptr);
            using globalIsDayChanged767_ptr = bool (WINAPIV*)(int*);
            using globalIsDayChanged767_clbk = bool (WINAPIV*)(int*, globalIsDayChanged767_ptr);
            using globalIsEnableBBoShasiShader768_ptr = int64_t (WINAPIV*)();
            using globalIsEnableBBoShasiShader768_clbk = int64_t (WINAPIV*)(globalIsEnableBBoShasiShader768_ptr);
            using globalIsEnableShader769_ptr = int64_t (WINAPIV*)(uint32_t);
            using globalIsEnableShader769_clbk = int64_t (WINAPIV*)(uint32_t, globalIsEnableShader769_ptr);
            using globalIsExchangeItem771_ptr = int (WINAPIV*)(int, int);
            using globalIsExchangeItem771_clbk = int (WINAPIV*)(int, int, globalIsExchangeItem771_ptr);
            using globalIsExistDarkHoleOpenGate773_ptr = bool (WINAPIV*)();
            using globalIsExistDarkHoleOpenGate773_clbk = bool (WINAPIV*)(globalIsExistDarkHoleOpenGate773_ptr);
            using globalIsExistFile774_ptr = int64_t (WINAPIV*)(char*);
            using globalIsExistFile774_clbk = int64_t (WINAPIV*)(char*, globalIsExistFile774_ptr);
            using globalIsExistFileAndMergeFile775_ptr = int64_t (WINAPIV*)(char*);
            using globalIsExistFileAndMergeFile775_clbk = int64_t (WINAPIV*)(char*, globalIsExistFileAndMergeFile775_ptr);
            using globalIsExistFromSoundSpt776_ptr = int64_t (WINAPIV*)(uint32_t);
            using globalIsExistFromSoundSpt776_clbk = int64_t (WINAPIV*)(uint32_t, globalIsExistFromSoundSpt776_ptr);
            using globalIsExistItem778_ptr = int (WINAPIV*)(int, int);
            using globalIsExistItem778_clbk = int (WINAPIV*)(int, int, globalIsExistItem778_ptr);
            using globalIsFadeIn779_ptr = int64_t (WINAPIV*)();
            using globalIsFadeIn779_clbk = int64_t (WINAPIV*)(globalIsFadeIn779_ptr);
            using globalIsFadeOut780_ptr = int64_t (WINAPIV*)();
            using globalIsFadeOut780_clbk = int64_t (WINAPIV*)(globalIsFadeOut780_ptr);
            using globalIsFading781_ptr = int64_t (WINAPIV*)();
            using globalIsFading781_clbk = int64_t (WINAPIV*)(globalIsFading781_ptr);
            using globalIsFarDistance782_ptr = int64_t (WINAPIV*)(struct _BSP_LEAF*);
            using globalIsFarDistance782_clbk = int64_t (WINAPIV*)(struct _BSP_LEAF*, globalIsFarDistance782_ptr);
            using globalIsGroundableItem784_ptr = int (WINAPIV*)(int, int);
            using globalIsGroundableItem784_clbk = int (WINAPIV*)(int, int, globalIsGroundableItem784_ptr);
            using globalIsInitCore785_ptr = int64_t (WINAPIV*)();
            using globalIsInitCore785_clbk = int64_t (WINAPIV*)(globalIsInitCore785_ptr);
            using globalIsInitR3Engine786_ptr = int64_t (WINAPIV*)();
            using globalIsInitR3Engine786_clbk = int64_t (WINAPIV*)(globalIsInitR3Engine786_ptr);
            using globalIsItemCombineExKind788_ptr = int (WINAPIV*)(int);
            using globalIsItemCombineExKind788_clbk = int (WINAPIV*)(int, globalIsItemCombineExKind788_ptr);
            using globalIsItemEquipCivil790_ptr = int (WINAPIV*)(int, int, char);
            using globalIsItemEquipCivil790_clbk = int (WINAPIV*)(int, int, char, globalIsItemEquipCivil790_ptr);
            using globalIsItemSerialNum792_ptr = int (WINAPIV*)(int);
            using globalIsItemSerialNum792_clbk = int (WINAPIV*)(int, globalIsItemSerialNum792_ptr);
            using globalIsLoadedMaterial793_ptr = int64_t (WINAPIV*)();
            using globalIsLoadedMaterial793_clbk = int64_t (WINAPIV*)(globalIsLoadedMaterial793_ptr);
            using globalIsLoadedRTCamera794_ptr = int64_t (WINAPIV*)();
            using globalIsLoadedRTCamera794_clbk = int64_t (WINAPIV*)(globalIsLoadedRTCamera794_ptr);
            using globalIsLoadedRTMovie795_ptr = int64_t (WINAPIV*)();
            using globalIsLoadedRTMovie795_clbk = int64_t (WINAPIV*)(globalIsLoadedRTMovie795_ptr);
            using globalIsMagicLight796_ptr = int64_t (WINAPIV*)(uint32_t);
            using globalIsMagicLight796_clbk = int64_t (WINAPIV*)(uint32_t, globalIsMagicLight796_ptr);
            using globalIsNormalAccountUsable798_ptr = int (WINAPIV*)(int, int);
            using globalIsNormalAccountUsable798_clbk = int (WINAPIV*)(int, int, globalIsNormalAccountUsable798_ptr);
            using globalIsOneBackCollision799_ptr = int64_t (WINAPIV*)();
            using globalIsOneBackCollision799_clbk = int64_t (WINAPIV*)(globalIsOneBackCollision799_ptr);
            using globalIsOtherInvalidObjNear801_ptr = char (WINAPIV*)(struct CGameObject*, float*, struct CTrap*, struct _TrapItem_fld*);
            using globalIsOtherInvalidObjNear801_clbk = char (WINAPIV*)(struct CGameObject*, float*, struct CTrap*, struct _TrapItem_fld*, globalIsOtherInvalidObjNear801_ptr);
            using globalIsOtherTowerNear803_ptr = bool (WINAPIV*)(struct CGameObject*, float*, struct CGuardTower*);
            using globalIsOtherTowerNear803_clbk = bool (WINAPIV*)(struct CGameObject*, float*, struct CGuardTower*, globalIsOtherTowerNear803_ptr);
            using globalIsOverLapItem805_ptr = int (WINAPIV*)(int);
            using globalIsOverLapItem805_clbk = int (WINAPIV*)(int, globalIsOverLapItem805_ptr);
            using globalIsParticle806_ptr = int64_t (WINAPIV*)(char*);
            using globalIsParticle806_clbk = int64_t (WINAPIV*)(char*, globalIsParticle806_ptr);
            using globalIsPlayMP3807_ptr = int64_t (WINAPIV*)();
            using globalIsPlayMP3807_clbk = int64_t (WINAPIV*)(globalIsPlayMP3807_ptr);
            using globalIsProtectItem809_ptr = int (WINAPIV*)(int);
            using globalIsProtectItem809_clbk = int (WINAPIV*)(int, globalIsProtectItem809_ptr);
            using globalIsRTMoviePlaying810_ptr = int64_t (WINAPIV*)();
            using globalIsRTMoviePlaying810_clbk = int64_t (WINAPIV*)(globalIsRTMoviePlaying810_ptr);
            using globalIsRayAABB811_ptr = int64_t (WINAPIV*)(float*, float*, float*, float*, float**);
            using globalIsRayAABB811_clbk = int64_t (WINAPIV*)(float*, float*, float*, float*, float**, globalIsRayAABB811_ptr);
            using globalIsRayAABB812_ptr = int64_t (WINAPIV*)(float**, int16_t*, float*, float*, float**);
            using globalIsRayAABB812_clbk = int64_t (WINAPIV*)(float**, int16_t*, float*, float*, float**, globalIsRayAABB812_ptr);
            using globalIsRenderTargetFrameBuffer813_ptr = int64_t (WINAPIV*)();
            using globalIsRenderTargetFrameBuffer813_clbk = int64_t (WINAPIV*)(globalIsRenderTargetFrameBuffer813_ptr);
            using globalIsRepairableItem815_ptr = int (WINAPIV*)(int, int);
            using globalIsRepairableItem815_clbk = int (WINAPIV*)(int, int, globalIsRepairableItem815_ptr);
            using globalIsRightIndexedUP816_ptr = int64_t (WINAPIV*)(int, uint16_t*, int);
            using globalIsRightIndexedUP816_clbk = int64_t (WINAPIV*)(int, uint16_t*, int, globalIsRightIndexedUP816_ptr);
            using globalIsSQLValidString818_ptr = bool (WINAPIV*)(char*);
            using globalIsSQLValidString818_clbk = bool (WINAPIV*)(char*, globalIsSQLValidString818_ptr);
            using globalIsSaveItem820_ptr = int (WINAPIV*)(int);
            using globalIsSaveItem820_clbk = int (WINAPIV*)(int, globalIsSaveItem820_ptr);
            using globalIsSellItem822_ptr = int (WINAPIV*)(int, int);
            using globalIsSellItem822_clbk = int (WINAPIV*)(int, int, globalIsSellItem822_ptr);
            using globalIsServerMode823_ptr = int64_t (WINAPIV*)();
            using globalIsServerMode823_clbk = int64_t (WINAPIV*)(globalIsServerMode823_ptr);
            using globalIsStorageCodeWithItemKind825_ptr = int (WINAPIV*)(int, int);
            using globalIsStorageCodeWithItemKind825_clbk = int (WINAPIV*)(int, int, globalIsStorageCodeWithItemKind825_ptr);
            using globalIsStorageRange827_ptr = int (WINAPIV*)(char, char);
            using globalIsStorageRange827_clbk = int (WINAPIV*)(char, char, globalIsStorageRange827_ptr);
            using globalIsTalikAboutTol829_ptr = int (WINAPIV*)(int);
            using globalIsTalikAboutTol829_clbk = int (WINAPIV*)(int, globalIsTalikAboutTol829_ptr);
            using globalIsTargeting831_ptr = bool (WINAPIV*)(struct CGameObject*);
            using globalIsTargeting831_clbk = bool (WINAPIV*)(struct CGameObject*, globalIsTargeting831_ptr);
            using globalIsTextureFormatOk832_ptr = int64_t (WINAPIV*)(_D3DFORMAT, _D3DFORMAT);
            using globalIsTextureFormatOk832_clbk = int64_t (WINAPIV*)(_D3DFORMAT, _D3DFORMAT, globalIsTextureFormatOk832_ptr);
            using globalIsTimeItem834_ptr = int (WINAPIV*)(char, unsigned int);
            using globalIsTimeItem834_clbk = int (WINAPIV*)(char, unsigned int, globalIsTimeItem834_ptr);
            using globalIsTrunkIOAble836_ptr = int (WINAPIV*)(int, int);
            using globalIsTrunkIOAble836_clbk = int (WINAPIV*)(int, int, globalIsTrunkIOAble836_ptr);
            using globalIsUsableTempEffectAtStoneState838_ptr = bool (WINAPIV*)(int);
            using globalIsUsableTempEffectAtStoneState838_clbk = bool (WINAPIV*)(int, globalIsUsableTempEffectAtStoneState838_ptr);
            using globalIsWebBrowserMode839_ptr = int64_t (WINAPIV*)();
            using globalIsWebBrowserMode839_clbk = int64_t (WINAPIV*)(globalIsWebBrowserMode839_ptr);
            using globalJmalloc840_ptr = uint8_t* (WINAPIV*)(int);
            using globalJmalloc840_clbk = uint8_t* (WINAPIV*)(int, globalJmalloc840_ptr);
            using globalJpegFileToRGB841_ptr = uint8_t* (WINAPIV*)(char*, unsigned int*, unsigned int*);
            using globalJpegFileToRGB841_clbk = uint8_t* (WINAPIV*)(char*, unsigned int*, unsigned int*, globalJpegFileToRGB841_ptr);
            using globalLightMappingTex1842_ptr = void (WINAPIV*)(struct _BSP_MAT_GROUP*);
            using globalLightMappingTex1842_clbk = void (WINAPIV*)(struct _BSP_MAT_GROUP*, globalLightMappingTex1842_ptr);
            using globalLinearInterpolate843_ptr = float (WINAPIV*)(float, float, float);
            using globalLinearInterpolate843_clbk = float (WINAPIV*)(float, float, float, globalLinearInterpolate843_ptr);
            using globalLoadAndCreateShader844_ptr = int32_t (WINAPIV*)(char*, uint32_t*, uint32_t, int, uint32_t*);
            using globalLoadAndCreateShader844_clbk = int32_t (WINAPIV*)(char*, uint32_t*, uint32_t, int, uint32_t*, globalLoadAndCreateShader844_ptr);
            using globalLoadBmp845_ptr = uint8_t* (WINAPIV*)(char*, int*, int*);
            using globalLoadBmp845_clbk = uint8_t* (WINAPIV*)(char*, int*, int*, globalLoadBmp845_ptr);
            using globalLoadCreateShader846_ptr = int32_t (WINAPIV*)(char*, uint32_t*, uint32_t, int, uint32_t*);
            using globalLoadCreateShader846_clbk = int32_t (WINAPIV*)(char*, uint32_t*, uint32_t, int, uint32_t*, globalLoadCreateShader846_ptr);
            using globalLoadIndependenceR3M847_ptr = struct _R3MATERIAL* (WINAPIV*)(char*);
            using globalLoadIndependenceR3M847_clbk = struct _R3MATERIAL* (WINAPIV*)(char*, globalLoadIndependenceR3M847_ptr);
            using globalLoadLightMap848_ptr = void (WINAPIV*)(char*);
            using globalLoadLightMap848_clbk = void (WINAPIV*)(char*, globalLoadLightMap848_ptr);
            using globalLoadMainMaterial849_ptr = struct _R3MATERIAL* (WINAPIV*)(char*);
            using globalLoadMainMaterial849_clbk = struct _R3MATERIAL* (WINAPIV*)(char*, globalLoadMainMaterial849_ptr);
            using globalLoadMainR3M850_ptr = struct _R3MATERIAL* (WINAPIV*)(char*);
            using globalLoadMainR3M850_clbk = struct _R3MATERIAL* (WINAPIV*)(char*, globalLoadMainR3M850_ptr);
            using globalLoadMasteryLimFile852_ptr = bool (WINAPIV*)(char*);
            using globalLoadMasteryLimFile852_clbk = bool (WINAPIV*)(char*, globalLoadMasteryLimFile852_ptr);
            using globalLoadR3MP3853_ptr = int64_t (WINAPIV*)(char*, uint32_t);
            using globalLoadR3MP3853_clbk = int64_t (WINAPIV*)(char*, uint32_t, globalLoadR3MP3853_ptr);
            using globalLoadR3T854_ptr = void (WINAPIV*)(R3Texture*);
            using globalLoadR3T854_clbk = void (WINAPIV*)(R3Texture*, globalLoadR3T854_ptr);
            using globalLoadR3TLightMap855_ptr = _LIGHTMAP** (WINAPIV*)(R3Texture*, _D3DFORMAT);
            using globalLoadR3TLightMap855_clbk = _LIGHTMAP** (WINAPIV*)(R3Texture*, _D3DFORMAT, globalLoadR3TLightMap855_ptr);
            using globalLoadR3X856_ptr = void (WINAPIV*)(char*);
            using globalLoadR3X856_clbk = void (WINAPIV*)(char*, globalLoadR3X856_ptr);
            using globalLoadRegionData858_ptr = bool (WINAPIV*)(int, char**, char*);
            using globalLoadRegionData858_clbk = bool (WINAPIV*)(int, char**, char*, globalLoadRegionData858_ptr);
            using globalLoadStreamR3MP3859_ptr = int64_t (WINAPIV*)(char*, uint32_t);
            using globalLoadStreamR3MP3859_clbk = int64_t (WINAPIV*)(char*, uint32_t, globalLoadStreamR3MP3859_ptr);
            using globalLoadSubMaterial860_ptr = struct _R3MATERIAL* (WINAPIV*)(char*);
            using globalLoadSubMaterial860_clbk = struct _R3MATERIAL* (WINAPIV*)(char*, globalLoadSubMaterial860_ptr);
            using globalLoadSubR3M862_ptr = struct _R3MATERIAL* (WINAPIV*)(char*);
            using globalLoadSubR3M862_clbk = struct _R3MATERIAL* (WINAPIV*)(char*, globalLoadSubR3M862_ptr);
            using globalLoadVertexShaderList863_ptr = void (WINAPIV*)();
            using globalLoadVertexShaderList863_clbk = void (WINAPIV*)(globalLoadVertexShaderList863_ptr);
            using globalLoadWaveList864_ptr = void (WINAPIV*)(char*);
            using globalLoadWaveList864_clbk = void (WINAPIV*)(char*, globalLoadWaveList864_ptr);
            using globalLuaScripAlert866_ptr = int (WINAPIV*)(lua_State*);
            using globalLuaScripAlert866_clbk = int (WINAPIV*)(lua_State*, globalLuaScripAlert866_ptr);
            using globalM2W868_ptr = bool (WINAPIV*)(char*, char*, unsigned int);
            using globalM2W868_clbk = bool (WINAPIV*)(char*, char*, unsigned int, globalM2W868_ptr);
            using globalMakeBinaryStr870_ptr = void (WINAPIV*)(char*, uint64_t, char*, uint64_t);
            using globalMakeBinaryStr870_clbk = void (WINAPIV*)(char*, uint64_t, char*, uint64_t, globalMakeBinaryStr870_ptr);
            using globalMakeDwordAlignedBuf871_ptr = uint8_t* (WINAPIV*)(uint8_t*, unsigned int, unsigned int, unsigned int*);
            using globalMakeDwordAlignedBuf871_clbk = uint8_t* (WINAPIV*)(uint8_t*, unsigned int, unsigned int, unsigned int*, globalMakeDwordAlignedBuf871_ptr);
            using globalMakeGrayScale872_ptr = int64_t (WINAPIV*)(uint8_t*, unsigned int, unsigned int);
            using globalMakeGrayScale872_clbk = int64_t (WINAPIV*)(uint8_t*, unsigned int, unsigned int, globalMakeGrayScale872_ptr);
            using globalMakeLoot874_ptr = struct _STORAGE_LIST::_db_con* (WINAPIV*)(char, uint16_t);
            using globalMakeLoot874_clbk = struct _STORAGE_LIST::_db_con* (WINAPIV*)(char, uint16_t, globalMakeLoot874_ptr);
            using globalMakeMipMap875_ptr = void (WINAPIV*)(uint16_t, uint16_t, uint16_t*, uint8_t*);
            using globalMakeMipMap875_clbk = void (WINAPIV*)(uint16_t, uint16_t, uint16_t*, uint8_t*, globalMakeMipMap875_ptr);
            using globalMakeMipMap876_ptr = void (WINAPIV*)(uint16_t, uint16_t, uint16_t*, uint16_t*);
            using globalMakeMipMap876_clbk = void (WINAPIV*)(uint16_t, uint16_t, uint16_t*, uint16_t*, globalMakeMipMap876_ptr);
            using globalMakeUV877_ptr = void (WINAPIV*)(struct _D3DR3VERTEX_TEX1*, int, void*, struct _R3MATERIAL*, int);
            using globalMakeUV877_clbk = void (WINAPIV*)(struct _D3DR3VERTEX_TEX1*, int, void*, struct _R3MATERIAL*, int, globalMakeUV877_ptr);
            using globalMakeUV878_ptr = void (WINAPIV*)(struct _D3DR3VERTEX_TEX2*, int, void*, void*, struct _R3MATERIAL*, int, float);
            using globalMakeUV878_clbk = void (WINAPIV*)(struct _D3DR3VERTEX_TEX2*, int, void*, void*, struct _R3MATERIAL*, int, float, globalMakeUV878_ptr);
            using globalMakeUVExt879_ptr = void (WINAPIV*)(struct _D3DR3VERTEX_TEX2*, int, void*, void*, struct _R3MATERIAL*, int, float);
            using globalMakeUVExt879_clbk = void (WINAPIV*)(struct _D3DR3VERTEX_TEX2*, int, void*, void*, struct _R3MATERIAL*, int, float, globalMakeUVExt879_ptr);
            using globalMatrixCopy880_ptr = void (WINAPIV*)(float**, float**);
            using globalMatrixCopy880_clbk = void (WINAPIV*)(float**, float**, globalMatrixCopy880_ptr);
            using globalMatrixFromQuaternion881_ptr = void (WINAPIV*)(float**, float, float, float, float);
            using globalMatrixFromQuaternion881_clbk = void (WINAPIV*)(float**, float, float, float, float, globalMatrixFromQuaternion881_ptr);
            using globalMatrixIdentity882_ptr = void (WINAPIV*)(float**);
            using globalMatrixIdentity882_clbk = void (WINAPIV*)(float**, globalMatrixIdentity882_ptr);
            using globalMatrixInvert883_ptr = int64_t (WINAPIV*)(float**, float**);
            using globalMatrixInvert883_clbk = int64_t (WINAPIV*)(float**, float**, globalMatrixInvert883_ptr);
            using globalMatrixMultiply884_ptr = void (WINAPIV*)(float**, float**, float**);
            using globalMatrixMultiply884_clbk = void (WINAPIV*)(float**, float**, float**, globalMatrixMultiply884_ptr);
            using globalMatrixRotate885_ptr = void (WINAPIV*)(float**, float, float, float);
            using globalMatrixRotate885_clbk = void (WINAPIV*)(float**, float, float, float, globalMatrixRotate885_ptr);
            using globalMatrixRotateX886_ptr = void (WINAPIV*)(float**, float);
            using globalMatrixRotateX886_clbk = void (WINAPIV*)(float**, float, globalMatrixRotateX886_ptr);
            using globalMatrixRotateY887_ptr = void (WINAPIV*)(float**, float);
            using globalMatrixRotateY887_clbk = void (WINAPIV*)(float**, float, globalMatrixRotateY887_ptr);
            using globalMatrixRotateZ888_ptr = void (WINAPIV*)(float**, float);
            using globalMatrixRotateZ888_clbk = void (WINAPIV*)(float**, float, globalMatrixRotateZ888_ptr);
            using globalMatrixScale889_ptr = void (WINAPIV*)(float**, float, float, float);
            using globalMatrixScale889_clbk = void (WINAPIV*)(float**, float, float, float, globalMatrixScale889_ptr);
            using globalMaxFixFloatToInt890_ptr = int64_t (WINAPIV*)(float);
            using globalMaxFixFloatToInt890_clbk = int64_t (WINAPIV*)(float, globalMaxFixFloatToInt890_ptr);
            using globalMinFixFloatToInt891_ptr = int64_t (WINAPIV*)(float);
            using globalMinFixFloatToInt891_clbk = int64_t (WINAPIV*)(float, globalMinFixFloatToInt891_ptr);
            using globalMultiTexOff892_ptr = void (WINAPIV*)();
            using globalMultiTexOff892_clbk = void (WINAPIV*)(globalMultiTexOff892_ptr);
            using globalMultiTexOn893_ptr = void (WINAPIV*)();
            using globalMultiTexOn893_clbk = void (WINAPIV*)(globalMultiTexOn893_ptr);
            using globalMyCrtDebugReportHook895_ptr = int (WINAPIV*)(int, char*, int*);
            using globalMyCrtDebugReportHook895_clbk = int (WINAPIV*)(int, char*, int*, globalMyCrtDebugReportHook895_ptr);
            using globalMyMessageBox897_ptr = void (WINAPIV*)(char*, char*);
            using globalMyMessageBox897_clbk = void (WINAPIV*)(char*, char*, globalMyMessageBox897_ptr);
            using globalNetTrace899_ptr = void (WINAPIV*)(char*);
            using globalNetTrace899_clbk = void (WINAPIV*)(char*, globalNetTrace899_ptr);
            using globalNoise900_ptr = float (WINAPIV*)(int32_t, int32_t);
            using globalNoise900_clbk = float (WINAPIV*)(int32_t, int32_t, globalNoise900_ptr);
            using globalNoise1901_ptr = float (WINAPIV*)(int32_t);
            using globalNoise1901_clbk = float (WINAPIV*)(int32_t, globalNoise1901_ptr);
            using globalNormalize903_ptr = void (WINAPIV*)(float*);
            using globalNormalize903_clbk = void (WINAPIV*)(float*, globalNormalize903_ptr);
            using globalOnLoop_GuildSystem905_ptr = void (WINAPIV*)(bool);
            using globalOnLoop_GuildSystem905_clbk = void (WINAPIV*)(bool, globalOnLoop_GuildSystem905_ptr);
            using globalOnLoop_VoteSystem907_ptr = void (WINAPIV*)();
            using globalOnLoop_VoteSystem907_clbk = void (WINAPIV*)(globalOnLoop_VoteSystem907_ptr);
            using globalOutputDebugLog909_ptr = void (WINAPIV*)(char*);
            using globalOutputDebugLog909_clbk = void (WINAPIV*)(char*, globalOutputDebugLog909_ptr);
            using globalPFromRva910_ptr = HINSTANCE__** (WINAPIV*)(unsigned int);
            using globalPFromRva910_clbk = HINSTANCE__** (WINAPIV*)(unsigned int, globalPFromRva910_ptr);
            using globalPFromRva911_ptr = struct ImgDelayDescr* (WINAPIV*)(unsigned int);
            using globalPFromRva911_clbk = struct ImgDelayDescr* (WINAPIV*)(unsigned int, globalPFromRva911_ptr);
            using globalPFromRva912_ptr = struct _IMAGE_IMPORT_BY_NAME* (WINAPIV*)(unsigned int);
            using globalPFromRva912_clbk = struct _IMAGE_IMPORT_BY_NAME* (WINAPIV*)(unsigned int, globalPFromRva912_ptr);
            using globalPFromRva913_ptr = struct _IMAGE_THUNK_DATA64* (WINAPIV*)(unsigned int);
            using globalPFromRva913_clbk = struct _IMAGE_THUNK_DATA64* (WINAPIV*)(unsigned int, globalPFromRva913_ptr);
            using globalPFromRva914_ptr = struct _IMAGE_THUNK_DATA64* (WINAPIV*)(unsigned int);
            using globalPFromRva914_clbk = struct _IMAGE_THUNK_DATA64* (WINAPIV*)(unsigned int, globalPFromRva914_ptr);
            using globalPFromRva915_ret = int64_t (WINAPIV**)();
            using globalPFromRva915_ptr = globalPFromRva915_ret (WINAPIV*)(unsigned int);
            using globalPFromRva915_clbk = globalPFromRva915_ret (WINAPIV*)(unsigned int, globalPFromRva915_ptr);
            using globalPFromRva916_ptr = char* (WINAPIV*)(unsigned int);
            using globalPFromRva916_clbk = char* (WINAPIV*)(unsigned int, globalPFromRva916_ptr);
            using globalParsingCommandA918_ptr = int (WINAPIV*)(char*, int, char**, int);
            using globalParsingCommandA918_clbk = int (WINAPIV*)(char*, int, char**, int, globalParsingCommandA918_ptr);
            using globalParsingCommandW920_ptr = int (WINAPIV*)(char*, int, char**, int);
            using globalParsingCommandW920_clbk = int (WINAPIV*)(char*, int, char**, int, globalParsingCommandW920_ptr);
            using globalPerlinNoise_1D921_ptr = float (WINAPIV*)(float, float, uint32_t);
            using globalPerlinNoise_1D921_clbk = float (WINAPIV*)(float, float, uint32_t, globalPerlinNoise_1D921_ptr);
            using globalPerlinNoise_2D922_ptr = float (WINAPIV*)(float, float, float, uint32_t);
            using globalPerlinNoise_2D922_clbk = float (WINAPIV*)(float, float, float, uint32_t, globalPerlinNoise_2D922_ptr);
            using globalPixelFromFramebuffer923_ptr = uint32_t (WINAPIV*)(int16_t, int16_t);
            using globalPixelFromFramebuffer923_clbk = uint32_t (WINAPIV*)(int16_t, int16_t, globalPixelFromFramebuffer923_ptr);
            using globalPlayR3MP3924_ptr = void (WINAPIV*)();
            using globalPlayR3MP3924_clbk = void (WINAPIV*)(globalPlayR3MP3924_ptr);
            using globalPlayStreamR3MP3925_ptr = void (WINAPIV*)();
            using globalPlayStreamR3MP3925_clbk = void (WINAPIV*)(globalPlayStreamR3MP3925_ptr);
            using globalPlayWave926_ptr = void (WINAPIV*)(uint32_t, uint32_t, float, float);
            using globalPlayWave926_clbk = void (WINAPIV*)(uint32_t, uint32_t, float, float, globalPlayWave926_ptr);
            using globalPopViewPortArea927_ptr = void (WINAPIV*)();
            using globalPopViewPortArea927_clbk = void (WINAPIV*)(globalPopViewPortArea927_ptr);
            using globalPowInterpolate928_ptr = float (WINAPIV*)(float, float, float);
            using globalPowInterpolate928_clbk = float (WINAPIV*)(float, float, float, globalPowInterpolate928_ptr);
            using globalPreRenderOneLayer929_ptr = void (WINAPIV*)(struct CVertexBuffer*, struct _BSP_MAT_GROUP*);
            using globalPreRenderOneLayer929_clbk = void (WINAPIV*)(struct CVertexBuffer*, struct _BSP_MAT_GROUP*, globalPreRenderOneLayer929_ptr);
            using globalPreRenderSetting930_ptr = void (WINAPIV*)(int, struct CVertexBuffer*, struct _BSP_MAT_GROUP*);
            using globalPreRenderSetting930_clbk = void (WINAPIV*)(int, struct CVertexBuffer*, struct _BSP_MAT_GROUP*, globalPreRenderSetting930_ptr);
            using globalPrepareAllShadow931_ptr = void (WINAPIV*)();
            using globalPrepareAllShadow931_clbk = void (WINAPIV*)(globalPrepareAllShadow931_ptr);
            using globalProcessCheatCommand933_ptr = bool (WINAPIV*)(struct CPlayer*, char*);
            using globalProcessCheatCommand933_clbk = bool (WINAPIV*)(struct CPlayer*, char*, globalProcessCheatCommand933_ptr);
            using globalProgressConsole934_ptr = void (WINAPIV*)(struct CLevel*);
            using globalProgressConsole934_clbk = void (WINAPIV*)(struct CLevel*, globalProgressConsole934_ptr);
            using globalProgressFunctionKey935_ptr = void (WINAPIV*)();
            using globalProgressFunctionKey935_clbk = void (WINAPIV*)(globalProgressFunctionKey935_ptr);
            using globalPushViewPortArea936_ptr = void (WINAPIV*)();
            using globalPushViewPortArea936_clbk = void (WINAPIV*)(globalPushViewPortArea936_ptr);
            using globalPutMessage937_ptr = void (WINAPIV*)(char*, char*);
            using globalPutMessage937_clbk = void (WINAPIV*)(char*, char*, globalPutMessage937_ptr);
            using globalQuaternionFromRotation938_ptr = void (WINAPIV*)(float*, float*, float);
            using globalQuaternionFromRotation938_clbk = void (WINAPIV*)(float*, float*, float, globalQuaternionFromRotation938_ptr);
            using globalQuaternionSlerp939_ptr = void (WINAPIV*)(float*, float*, float*, float*, float, float, float, float, float, float, float, float, float);
            using globalQuaternionSlerp939_clbk = void (WINAPIV*)(float*, float*, float*, float*, float, float, float, float, float, float, float, float, float, globalQuaternionSlerp939_ptr);
            using globalR3BeginScene940_ptr = int64_t (WINAPIV*)();
            using globalR3BeginScene940_clbk = int64_t (WINAPIV*)(globalR3BeginScene940_ptr);
            using globalR3CalcStrIndexPitInWidthA941_ptr = int64_t (WINAPIV*)(char*, int, int, uint32_t);
            using globalR3CalcStrIndexPitInWidthA941_clbk = int64_t (WINAPIV*)(char*, int, int, uint32_t, globalR3CalcStrIndexPitInWidthA941_ptr);
            using globalR3CalcStrIndexPitInWidthW942_ptr = int64_t (WINAPIV*)(wchar_t*, int, int, uint32_t);
            using globalR3CalcStrIndexPitInWidthW942_clbk = int64_t (WINAPIV*)(wchar_t*, int, int, uint32_t, globalR3CalcStrIndexPitInWidthW942_ptr);
            using globalR3CalcStrPixelSizeA943_ptr = int64_t (WINAPIV*)(char*, struct tagSIZE*, int, uint32_t);
            using globalR3CalcStrPixelSizeA943_clbk = int64_t (WINAPIV*)(char*, struct tagSIZE*, int, uint32_t, globalR3CalcStrPixelSizeA943_ptr);
            using globalR3CalcStrPixelSizeW944_ptr = int64_t (WINAPIV*)(wchar_t*, struct tagSIZE*, int, uint32_t);
            using globalR3CalcStrPixelSizeW944_clbk = int64_t (WINAPIV*)(wchar_t*, struct tagSIZE*, int, uint32_t, globalR3CalcStrPixelSizeW944_ptr);
            using globalR3CalculateTime945_ptr = void (WINAPIV*)();
            using globalR3CalculateTime945_clbk = void (WINAPIV*)(globalR3CalculateTime945_ptr);
            using globalR3ClearFrameBuffer946_ptr = void (WINAPIV*)();
            using globalR3ClearFrameBuffer946_clbk = void (WINAPIV*)(globalR3ClearFrameBuffer946_ptr);
            using globalR3ConfirmDevice947_ptr = int32_t (WINAPIV*)(struct _D3DCAPS8*, uint32_t, _D3DFORMAT);
            using globalR3ConfirmDevice947_clbk = int32_t (WINAPIV*)(struct _D3DCAPS8*, uint32_t, _D3DFORMAT, globalR3ConfirmDevice947_ptr);
            using globalR3DeleteDevice948_ptr = int32_t (WINAPIV*)();
            using globalR3DeleteDevice948_clbk = int32_t (WINAPIV*)(globalR3DeleteDevice948_ptr);
            using globalR3Draw2DLine949_ptr = void (WINAPIV*)(float*, float*, uint32_t);
            using globalR3Draw2DLine949_clbk = void (WINAPIV*)(float*, float*, uint32_t, globalR3Draw2DLine949_ptr);
            using globalR3Draw2DLineList950_ptr = void (WINAPIV*)(float**, uint32_t, uint32_t);
            using globalR3Draw2DLineList950_clbk = void (WINAPIV*)(float**, uint32_t, uint32_t, globalR3Draw2DLineList950_ptr);
            using globalR3DrawLine951_ptr = void (WINAPIV*)(float*, float*, uint32_t);
            using globalR3DrawLine951_clbk = void (WINAPIV*)(float*, float*, uint32_t, globalR3DrawLine951_ptr);
            using globalR3EndScene952_ptr = void (WINAPIV*)();
            using globalR3EndScene952_clbk = void (WINAPIV*)(globalR3EndScene952_ptr);
            using globalR3EnvironmentQuake953_ptr = void (WINAPIV*)(float, float);
            using globalR3EnvironmentQuake953_clbk = void (WINAPIV*)(float, float, globalR3EnvironmentQuake953_ptr);
            using globalR3EnvironmentShake954_ptr = void (WINAPIV*)(float, float);
            using globalR3EnvironmentShake954_clbk = void (WINAPIV*)(float, float, globalR3EnvironmentShake954_ptr);
            using globalR3EnvironmentShakeOff955_ptr = void (WINAPIV*)();
            using globalR3EnvironmentShakeOff955_clbk = void (WINAPIV*)(globalR3EnvironmentShakeOff955_ptr);
            using globalR3EnvironmentShakeState956_ptr = int64_t (WINAPIV*)();
            using globalR3EnvironmentShakeState956_clbk = int64_t (WINAPIV*)(globalR3EnvironmentShakeState956_ptr);
            using globalR3FlyMove957_ptr = void (WINAPIV*)(float, float*);
            using globalR3FlyMove957_clbk = void (WINAPIV*)(float, float*, globalR3FlyMove957_ptr);
            using globalR3FlyMoveSetPos958_ptr = void (WINAPIV*)(float*);
            using globalR3FlyMoveSetPos958_clbk = void (WINAPIV*)(float*, globalR3FlyMoveSetPos958_ptr);
            using globalR3GetLoopTime959_ptr = float (WINAPIV*)();
            using globalR3GetLoopTime959_clbk = float (WINAPIV*)(globalR3GetLoopTime959_ptr);
            using globalR3GetPreAniTextureId960_ptr = void (WINAPIV*)(char*, char*, int32_t*, int32_t*);
            using globalR3GetPreAniTextureId960_clbk = void (WINAPIV*)(char*, char*, int32_t*, int32_t*, globalR3GetPreAniTextureId960_ptr);
            using globalR3GetPreTextureId961_ptr = int64_t (WINAPIV*)(char*);
            using globalR3GetPreTextureId961_clbk = int64_t (WINAPIV*)(char*, globalR3GetPreTextureId961_ptr);
            using globalR3GetQuakeMatrix962_ptr = void (WINAPIV*)(float**);
            using globalR3GetQuakeMatrix962_clbk = void (WINAPIV*)(float**, globalR3GetQuakeMatrix962_ptr);
            using globalR3GetQuakeVector963_ptr = void (WINAPIV*)(float*);
            using globalR3GetQuakeVector963_clbk = void (WINAPIV*)(float*, globalR3GetQuakeVector963_ptr);
            using globalR3GetShakeVector964_ptr = void (WINAPIV*)(float*);
            using globalR3GetShakeVector964_clbk = void (WINAPIV*)(float*, globalR3GetShakeVector964_ptr);
            using globalR3GetSurface965_ptr = struct IDirect3DTexture8* (WINAPIV*)(int);
            using globalR3GetSurface965_clbk = struct IDirect3DTexture8* (WINAPIV*)(int, globalR3GetSurface965_ptr);
            using globalR3GetTexInfoR3T966_ptr = R3Texture* (WINAPIV*)(char*, uint32_t);
            using globalR3GetTexInfoR3T966_clbk = R3Texture* (WINAPIV*)(char*, uint32_t, globalR3GetTexInfoR3T966_ptr);
            using globalR3GetTexName967_ptr = char* (WINAPIV*)(int);
            using globalR3GetTexName967_clbk = char* (WINAPIV*)(int, globalR3GetTexName967_ptr);
            using globalR3GetTime968_ptr = float (WINAPIV*)();
            using globalR3GetTime968_clbk = float (WINAPIV*)(globalR3GetTime968_ptr);
            using globalR3GetToggle15fps969_ptr = int32_t (WINAPIV*)();
            using globalR3GetToggle15fps969_clbk = int32_t (WINAPIV*)(globalR3GetToggle15fps969_ptr);
            using globalR3GetToggle30fps970_ptr = int32_t (WINAPIV*)();
            using globalR3GetToggle30fps970_clbk = int32_t (WINAPIV*)(globalR3GetToggle30fps970_ptr);
            using globalR3GetToggle7fps971_ptr = int32_t (WINAPIV*)();
            using globalR3GetToggle7fps971_clbk = int32_t (WINAPIV*)(globalR3GetToggle7fps971_ptr);
            using globalR3GetViewPort972_ptr = void (WINAPIV*)(int32_t*, int32_t*, int32_t*, int32_t*);
            using globalR3GetViewPort972_clbk = void (WINAPIV*)(int32_t*, int32_t*, int32_t*, int32_t*, globalR3GetViewPort972_ptr);
            using globalR3InitDevice973_ptr = int32_t (WINAPIV*)(struct IDirect3DDevice8*, int, int);
            using globalR3InitDevice973_clbk = int32_t (WINAPIV*)(struct IDirect3DDevice8*, int, int, globalR3InitDevice973_ptr);
            using globalR3InvalidateDevice974_ptr = int32_t (WINAPIV*)();
            using globalR3InvalidateDevice974_clbk = int32_t (WINAPIV*)(globalR3InvalidateDevice974_ptr);
            using globalR3LoadDDS975_ptr = struct IDirect3DTexture8* (WINAPIV*)(char*, uint32_t, uint32_t, uint32_t);
            using globalR3LoadDDS975_clbk = struct IDirect3DTexture8* (WINAPIV*)(char*, uint32_t, uint32_t, uint32_t, globalR3LoadDDS975_ptr);
            using globalR3LoadDDSAndTextureMem976_ptr = struct IDirect3DTexture8* (WINAPIV*)(char*, uint32_t);
            using globalR3LoadDDSAndTextureMem976_clbk = struct IDirect3DTexture8* (WINAPIV*)(char*, uint32_t, globalR3LoadDDSAndTextureMem976_ptr);
            using globalR3LoadDDSFromFP977_ptr = struct IDirect3DTexture8* (WINAPIV*)(FILE*, size_t, uint32_t, uint32_t, uint32_t);
            using globalR3LoadDDSFromFP977_clbk = struct IDirect3DTexture8* (WINAPIV*)(FILE*, size_t, uint32_t, uint32_t, uint32_t, globalR3LoadDDSFromFP977_ptr);
            using globalR3LoadTextTexture978_ptr = void (WINAPIV*)();
            using globalR3LoadTextTexture978_clbk = void (WINAPIV*)(globalR3LoadTextTexture978_ptr);
            using globalR3LoadTextureMem979_ptr = void (WINAPIV*)(int);
            using globalR3LoadTextureMem979_clbk = void (WINAPIV*)(int, globalR3LoadTextureMem979_ptr);
            using globalR3MouseInput980_ptr = void (WINAPIV*)();
            using globalR3MouseInput980_clbk = void (WINAPIV*)(globalR3MouseInput980_ptr);
            using globalR3MoveGetViewMatrix981_ptr = struct D3DXMATRIX* (WINAPIV*)();
            using globalR3MoveGetViewMatrix981_clbk = struct D3DXMATRIX* (WINAPIV*)(globalR3MoveGetViewMatrix981_ptr);
            using globalR3MsgProc982_ptr = void (WINAPIV*)(HWND, unsigned int, uint64_t, int64_t);
            using globalR3MsgProc982_clbk = void (WINAPIV*)(HWND, unsigned int, uint64_t, int64_t, globalR3MsgProc982_ptr);
            using globalR3ReleaseAllTextures983_ptr = void (WINAPIV*)();
            using globalR3ReleaseAllTextures983_clbk = void (WINAPIV*)(globalR3ReleaseAllTextures983_ptr);
            using globalR3ReleasePreTextures984_ptr = void (WINAPIV*)();
            using globalR3ReleasePreTextures984_clbk = void (WINAPIV*)(globalR3ReleasePreTextures984_ptr);
            using globalR3ReleaseTextTexture985_ptr = void (WINAPIV*)();
            using globalR3ReleaseTextTexture985_clbk = void (WINAPIV*)(globalR3ReleaseTextTexture985_ptr);
            using globalR3ReleaseTextureMem986_ptr = void (WINAPIV*)(int);
            using globalR3ReleaseTextureMem986_clbk = void (WINAPIV*)(int, globalR3ReleaseTextureMem986_ptr);
            using globalR3RestoreAllTextures987_ptr = void (WINAPIV*)();
            using globalR3RestoreAllTextures987_clbk = void (WINAPIV*)(globalR3RestoreAllTextures987_ptr);
            using globalR3RestoreDevice988_ptr = int32_t (WINAPIV*)();
            using globalR3RestoreDevice988_clbk = int32_t (WINAPIV*)(globalR3RestoreDevice988_ptr);
            using globalR3SetCameraMatrix989_ptr = void (WINAPIV*)(float*, float**);
            using globalR3SetCameraMatrix989_clbk = void (WINAPIV*)(float*, float**, globalR3SetCameraMatrix989_ptr);
            using globalR3SetLoopTime990_ptr = void (WINAPIV*)(float);
            using globalR3SetLoopTime990_clbk = void (WINAPIV*)(float, globalR3SetLoopTime990_ptr);
            using globalR3SetMinFPS991_ptr = void (WINAPIV*)(float);
            using globalR3SetMinFPS991_clbk = void (WINAPIV*)(float, globalR3SetMinFPS991_ptr);
            using globalR3SetTime992_ptr = void (WINAPIV*)(float);
            using globalR3SetTime992_clbk = void (WINAPIV*)(float, globalR3SetTime992_ptr);
            using globalR3SetViewPort993_ptr = void (WINAPIV*)(int32_t, int32_t, int32_t, int32_t);
            using globalR3SetViewPort993_clbk = void (WINAPIV*)(int32_t, int32_t, int32_t, int32_t, globalR3SetViewPort993_ptr);
            using globalRGBFromDWORDAligned994_ptr = uint8_t* (WINAPIV*)(uint8_t*, unsigned int, unsigned int, unsigned int);
            using globalRGBFromDWORDAligned994_clbk = uint8_t* (WINAPIV*)(uint8_t*, unsigned int, unsigned int, unsigned int, globalRGBFromDWORDAligned994_ptr);
            using globalRGBToJpegFile995_ptr = int64_t (WINAPIV*)(char*, uint8_t*, unsigned int, unsigned int, int, int);
            using globalRGBToJpegFile995_clbk = int64_t (WINAPIV*)(char*, uint8_t*, unsigned int, unsigned int, int, int, globalRGBToJpegFile995_ptr);
            using globalRTMoiveGetCameraMatrix996_ptr = void (WINAPIV*)(float**);
            using globalRTMoiveGetCameraMatrix996_clbk = void (WINAPIV*)(float**, globalRTMoiveGetCameraMatrix996_ptr);
            using globalRTMoiveGetCameraPos997_ptr = void (WINAPIV*)(float*);
            using globalRTMoiveGetCameraPos997_clbk = void (WINAPIV*)(float*, globalRTMoiveGetCameraPos997_ptr);
            using globalRTMovieAddState998_ptr = void (WINAPIV*)(uint32_t);
            using globalRTMovieAddState998_clbk = void (WINAPIV*)(uint32_t, globalRTMovieAddState998_ptr);
            using globalRTMovieCreate999_ptr = void (WINAPIV*)(char*, struct CLevel*);
            using globalRTMovieCreate999_clbk = void (WINAPIV*)(char*, struct CLevel*, globalRTMovieCreate999_ptr);
            using globalRTMovieFrameMove1000_ptr = void (WINAPIV*)();
            using globalRTMovieFrameMove1000_clbk = void (WINAPIV*)(globalRTMovieFrameMove1000_ptr);
            using globalRTMovieGetState1001_ptr = uint32_t (WINAPIV*)();
            using globalRTMovieGetState1001_clbk = uint32_t (WINAPIV*)(globalRTMovieGetState1001_ptr);
            using globalRTMoviePause1002_ptr = void (WINAPIV*)(int);
            using globalRTMoviePause1002_clbk = void (WINAPIV*)(int, globalRTMoviePause1002_ptr);
            using globalRTMovieRelease1003_ptr = void (WINAPIV*)();
            using globalRTMovieRelease1003_clbk = void (WINAPIV*)(globalRTMovieRelease1003_ptr);
            using globalRTMovieRender1004_ptr = void (WINAPIV*)();
            using globalRTMovieRender1004_clbk = void (WINAPIV*)(globalRTMovieRender1004_ptr);
            using globalRTMovieSetState1005_ptr = void (WINAPIV*)(uint32_t);
            using globalRTMovieSetState1005_clbk = void (WINAPIV*)(uint32_t, globalRTMovieSetState1005_ptr);
            using globalRTMovieSkipShadowState1006_ptr = void (WINAPIV*)(int);
            using globalRTMovieSkipShadowState1006_clbk = void (WINAPIV*)(int, globalRTMovieSkipShadowState1006_ptr);
            using globalRTMovieStartPlay1007_ptr = void (WINAPIV*)(int);
            using globalRTMovieStartPlay1007_clbk = void (WINAPIV*)(int, globalRTMovieStartPlay1007_ptr);
            using globalRTMovieSubState1008_ptr = void (WINAPIV*)(uint32_t);
            using globalRTMovieSubState1008_clbk = void (WINAPIV*)(uint32_t, globalRTMovieSubState1008_ptr);
            using globalReAlloc1009_ptr = void* (WINAPIV*)(void*, int, int);
            using globalReAlloc1009_clbk = void* (WINAPIV*)(void*, int, int, globalReAlloc1009_ptr);
            using globalReLoadMaterial1010_ptr = void (WINAPIV*)(char*, struct _R3MATERIAL*);
            using globalReLoadMaterial1010_clbk = void (WINAPIV*)(char*, struct _R3MATERIAL*, globalReLoadMaterial1010_ptr);
            using globalReMoveCamera1011_ptr = void (WINAPIV*)(_MOVE_CAMERA*);
            using globalReMoveCamera1011_clbk = void (WINAPIV*)(_MOVE_CAMERA*, globalReMoveCamera1011_ptr);
            using globalReleaesR3MP31012_ptr = void (WINAPIV*)();
            using globalReleaesR3MP31012_clbk = void (WINAPIV*)(globalReleaesR3MP31012_ptr);
            using globalReleaesStreamR3MP31013_ptr = void (WINAPIV*)();
            using globalReleaesStreamR3MP31013_clbk = void (WINAPIV*)(globalReleaesStreamR3MP31013_ptr);
            using globalReleaseAllSpriteTexMem1014_ptr = void (WINAPIV*)();
            using globalReleaseAllSpriteTexMem1014_clbk = void (WINAPIV*)(globalReleaseAllSpriteTexMem1014_ptr);
            using globalReleaseBlurShader1015_ptr = void (WINAPIV*)();
            using globalReleaseBlurShader1015_clbk = void (WINAPIV*)(globalReleaseBlurShader1015_ptr);
            using globalReleaseBlurVBuffer1016_ptr = void (WINAPIV*)();
            using globalReleaseBlurVBuffer1016_clbk = void (WINAPIV*)(globalReleaseBlurVBuffer1016_ptr);
            using globalReleaseConsole1017_ptr = void (WINAPIV*)();
            using globalReleaseConsole1017_clbk = void (WINAPIV*)(globalReleaseConsole1017_ptr);
            using globalReleaseCore1018_ptr = void (WINAPIV*)();
            using globalReleaseCore1018_clbk = void (WINAPIV*)(globalReleaseCore1018_ptr);
            using globalReleaseFullScreenEffect1019_ptr = void (WINAPIV*)();
            using globalReleaseFullScreenEffect1019_clbk = void (WINAPIV*)(globalReleaseFullScreenEffect1019_ptr);
            using globalReleaseFunctionKey1020_ptr = void (WINAPIV*)();
            using globalReleaseFunctionKey1020_clbk = void (WINAPIV*)(globalReleaseFunctionKey1020_ptr);
            using globalReleaseJmalloc1021_ptr = void (WINAPIV*)();
            using globalReleaseJmalloc1021_clbk = void (WINAPIV*)(globalReleaseJmalloc1021_ptr);
            using globalReleaseLightMap1022_ptr = void (WINAPIV*)();
            using globalReleaseLightMap1022_clbk = void (WINAPIV*)(globalReleaseLightMap1022_ptr);
            using globalReleaseMainMaterial1023_ptr = void (WINAPIV*)();
            using globalReleaseMainMaterial1023_clbk = void (WINAPIV*)(globalReleaseMainMaterial1023_ptr);
            using globalReleaseR3Engine1024_ptr = void (WINAPIV*)();
            using globalReleaseR3Engine1024_clbk = void (WINAPIV*)(globalReleaseR3Engine1024_ptr);
            using globalReleaseR3Particle1025_ptr = void (WINAPIV*)();
            using globalReleaseR3Particle1025_clbk = void (WINAPIV*)(globalReleaseR3Particle1025_ptr);
            using globalReleaseR3SoundSystem1026_ptr = void (WINAPIV*)();
            using globalReleaseR3SoundSystem1026_clbk = void (WINAPIV*)(globalReleaseR3SoundSystem1026_ptr);
            using globalReleaseR3Text1027_ptr = void (WINAPIV*)();
            using globalReleaseR3Text1027_clbk = void (WINAPIV*)(globalReleaseR3Text1027_ptr);
            using globalReleaseSpriteManager1028_ptr = void (WINAPIV*)(CSprite*);
            using globalReleaseSpriteManager1028_clbk = void (WINAPIV*)(CSprite*, globalReleaseSpriteManager1028_ptr);
            using globalReleaseSpriteManager1029_ptr = void (WINAPIV*)();
            using globalReleaseSpriteManager1029_clbk = void (WINAPIV*)(globalReleaseSpriteManager1029_ptr);
            using globalReleaseSubMaterial1030_ptr = void (WINAPIV*)(struct _R3MATERIAL*);
            using globalReleaseSubMaterial1030_clbk = void (WINAPIV*)(struct _R3MATERIAL*, globalReleaseSubMaterial1030_ptr);
            using globalReleaseSystemTexture1031_ptr = void (WINAPIV*)();
            using globalReleaseSystemTexture1031_clbk = void (WINAPIV*)(globalReleaseSystemTexture1031_ptr);
            using globalReleaseVertexShaderList1032_ptr = void (WINAPIV*)();
            using globalReleaseVertexShaderList1032_clbk = void (WINAPIV*)(globalReleaseVertexShaderList1032_ptr);
            using globalReleaseWaveList1033_ptr = void (WINAPIV*)();
            using globalReleaseWaveList1033_clbk = void (WINAPIV*)(globalReleaseWaveList1033_ptr);
            using globalReleaseWebBrowser1034_ptr = void (WINAPIV*)();
            using globalReleaseWebBrowser1034_clbk = void (WINAPIV*)(globalReleaseWebBrowser1034_ptr);
            using globalResetTexMemSize1035_ptr = void (WINAPIV*)();
            using globalResetTexMemSize1035_clbk = void (WINAPIV*)(globalResetTexMemSize1035_ptr);
            using globalResetTotalVertexBufferInfo1036_ptr = void (WINAPIV*)();
            using globalResetTotalVertexBufferInfo1036_clbk = void (WINAPIV*)(globalResetTotalVertexBufferInfo1036_ptr);
            using globalResetVertexBufferCache1037_ptr = void (WINAPIV*)();
            using globalResetVertexBufferCache1037_clbk = void (WINAPIV*)(globalResetVertexBufferCache1037_ptr);
            using globalRestoreAllSpriteTexMem1038_ptr = void (WINAPIV*)();
            using globalRestoreAllSpriteTexMem1038_clbk = void (WINAPIV*)(globalRestoreAllSpriteTexMem1038_ptr);
            using globalRestoreSpriteManager1039_ptr = void (WINAPIV*)(struct CSprite*);
            using globalRestoreSpriteManager1039_clbk = void (WINAPIV*)(struct CSprite*, globalRestoreSpriteManager1039_ptr);
            using globalRestoreSystemTexture1040_ptr = void (WINAPIV*)();
            using globalRestoreSystemTexture1040_clbk = void (WINAPIV*)(globalRestoreSystemTexture1040_ptr);
            using globalRijndael_VC60Workaround1041_ptr = void (WINAPIV*)();
            using globalRijndael_VC60Workaround1041_clbk = void (WINAPIV*)(globalRijndael_VC60Workaround1041_ptr);
            using globalRotateLeftBits1043_ptr = unsigned int (WINAPIV*)(unsigned int, unsigned int);
            using globalRotateLeftBits1043_clbk = unsigned int (WINAPIV*)(unsigned int, unsigned int, globalRotateLeftBits1043_ptr);
            using globalRound11045_ptr = void (WINAPIV*)(unsigned int*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);
            using globalRound11045_clbk = void (WINAPIV*)(unsigned int*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, globalRound11045_ptr);
            using globalRound21047_ptr = void (WINAPIV*)(unsigned int*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);
            using globalRound21047_clbk = void (WINAPIV*)(unsigned int*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, globalRound21047_ptr);
            using globalRound31049_ptr = void (WINAPIV*)(unsigned int*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);
            using globalRound31049_clbk = void (WINAPIV*)(unsigned int*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, globalRound31049_ptr);
            using globalRound41051_ptr = void (WINAPIV*)(unsigned int*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);
            using globalRound41051_clbk = void (WINAPIV*)(unsigned int*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, globalRound41051_ptr);
            using globalSaveBMP1052_ptr = void (WINAPIV*)(char*, int64_t, int, int, uint8_t*);
            using globalSaveBMP1052_clbk = void (WINAPIV*)(char*, int64_t, int, int, uint8_t*, globalSaveBMP1052_ptr);
            using globalSaveJPG1053_ptr = void (WINAPIV*)(char*, int, int, int, uint8_t*);
            using globalSaveJPG1053_clbk = void (WINAPIV*)(char*, int, int, int, uint8_t*, globalSaveJPG1053_ptr);
            using globalScanCodeToVKCode1054_ptr = int64_t (WINAPIV*)(int);
            using globalScanCodeToVKCode1054_clbk = int64_t (WINAPIV*)(int, globalScanCodeToVKCode1054_ptr);
            using globalSearchAvatorWithCMS1056_ptr = struct CUserDB* (WINAPIV*)(struct CUserDB*, int, char*);
            using globalSearchAvatorWithCMS1056_clbk = struct CUserDB* (WINAPIV*)(struct CUserDB*, int, char*, globalSearchAvatorWithCMS1056_ptr);
            using globalSearchAvatorWithName1058_ptr = struct CUserDB* (WINAPIV*)(struct CUserDB*, int, char*);
            using globalSearchAvatorWithName1058_clbk = struct CUserDB* (WINAPIV*)(struct CUserDB*, int, char*, globalSearchAvatorWithName1058_ptr);
            using globalSearchEmptyMonster1060_ptr = struct CMonster* (WINAPIV*)(bool);
            using globalSearchEmptyMonster1060_clbk = struct CMonster* (WINAPIV*)(bool, globalSearchEmptyMonster1060_ptr);
            using globalSearchJobCommandFn1062_ret = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalSearchJobCommandFn1062_ptr = globalSearchJobCommandFn1062_ret (WINAPIV*)(char*);
            using globalSearchJobCommandFn1062_clbk = globalSearchJobCommandFn1062_ret (WINAPIV*)(char*, globalSearchJobCommandFn1062_ptr);
            using globalSearchMissionCommandFn1064_ret = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalSearchMissionCommandFn1064_ptr = globalSearchMissionCommandFn1064_ret (WINAPIV*)(char*);
            using globalSearchMissionCommandFn1064_clbk = globalSearchMissionCommandFn1064_ret (WINAPIV*)(char*, globalSearchMissionCommandFn1064_ptr);
            using globalSearchQuestCommandFn1066_ret = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalSearchQuestCommandFn1066_ptr = globalSearchQuestCommandFn1066_ret (WINAPIV*)(char*);
            using globalSearchQuestCommandFn1066_clbk = globalSearchQuestCommandFn1066_ret (WINAPIV*)(char*, globalSearchQuestCommandFn1066_ptr);
            using globalSendLoop1068_ptr = unsigned int (WINAPIV*)(void*);
            using globalSendLoop1068_clbk = unsigned int (WINAPIV*)(void*, globalSendLoop1068_ptr);
            using globalSendMsg_EconomyDataToWeb1070_ptr = void (WINAPIV*)();
            using globalSendMsg_EconomyDataToWeb1070_clbk = void (WINAPIV*)(globalSendMsg_EconomyDataToWeb1070_ptr);
            using globalSerarchEmptyDarkHole1072_ptr = struct CDarkHole* (WINAPIV*)();
            using globalSerarchEmptyDarkHole1072_clbk = struct CDarkHole* (WINAPIV*)(globalSerarchEmptyDarkHole1072_ptr);
            using globalServerProgramExit1074_ptr = void (WINAPIV*)(char*, bool);
            using globalServerProgramExit1074_clbk = void (WINAPIV*)(char*, bool, globalServerProgramExit1074_ptr);
            using globalSetConsoleStateB1075_ptr = void (WINAPIV*)(int, int);
            using globalSetConsoleStateB1075_clbk = void (WINAPIV*)(int, int, globalSetConsoleStateB1075_ptr);
            using globalSetContrast1076_ptr = void (WINAPIV*)(float*);
            using globalSetContrast1076_clbk = void (WINAPIV*)(float*, globalSetContrast1076_ptr);
            using globalSetContrast1077_ptr = void (WINAPIV*)(uint8_t*);
            using globalSetContrast1077_clbk = void (WINAPIV*)(uint8_t*, globalSetContrast1077_ptr);
            using globalSetDDSTexNameDebug1078_ptr = void (WINAPIV*)(char*);
            using globalSetDDSTexNameDebug1078_clbk = void (WINAPIV*)(char*, globalSetDDSTexNameDebug1078_ptr);
            using globalSetDDSTexSizeDebug1079_ptr = void (WINAPIV*)(uint32_t);
            using globalSetDDSTexSizeDebug1079_clbk = void (WINAPIV*)(uint32_t, globalSetDDSTexSizeDebug1079_ptr);
            using globalSetDefaultFlags1080_ptr = void (WINAPIV*)();
            using globalSetDefaultFlags1080_clbk = void (WINAPIV*)(globalSetDefaultFlags1080_ptr);
            using globalSetDefaultFov1081_ptr = void (WINAPIV*)();
            using globalSetDefaultFov1081_clbk = void (WINAPIV*)(globalSetDefaultFov1081_ptr);
            using globalSetDetailTexVS1082_ptr = void (WINAPIV*)(struct D3DXMATRIX*);
            using globalSetDetailTexVS1082_clbk = void (WINAPIV*)(struct D3DXMATRIX*, globalSetDetailTexVS1082_ptr);
            using globalSetDynamicLight1083_ptr = void (WINAPIV*)(float*, float, uint32_t, void*, int, uint32_t);
            using globalSetDynamicLight1083_clbk = void (WINAPIV*)(float*, float, uint32_t, void*, int, uint32_t, globalSetDynamicLight1083_ptr);
            using globalSetErrorButRunMessageProc1084_ptr = void (WINAPIV*)(void (WINAPIV*)(char*));
            using globalSetErrorButRunMessageProc1084_clbk = void (WINAPIV*)(void (WINAPIV*)(char*), globalSetErrorButRunMessageProc1084_ptr);
            using globalSetErrorMessageProc1085_ptr = void (WINAPIV*)(void (WINAPIV*)(char*));
            using globalSetErrorMessageProc1085_clbk = void (WINAPIV*)(void (WINAPIV*)(char*), globalSetErrorMessageProc1085_ptr);
            using globalSetFadeFactor1086_ptr = void (WINAPIV*)(uint32_t, float, void*);
            using globalSetFadeFactor1086_clbk = void (WINAPIV*)(uint32_t, float, void*, globalSetFadeFactor1086_ptr);
            using globalSetFadeIn1087_ptr = void (WINAPIV*)(uint32_t, float, float);
            using globalSetFadeIn1087_clbk = void (WINAPIV*)(uint32_t, float, float, globalSetFadeIn1087_ptr);
            using globalSetFadeOut1088_ptr = void (WINAPIV*)(uint32_t, float, float);
            using globalSetFadeOut1088_clbk = void (WINAPIV*)(uint32_t, float, float, globalSetFadeOut1088_ptr);
            using globalSetFadeSky1089_ptr = void (WINAPIV*)(uint32_t, float);
            using globalSetFadeSky1089_clbk = void (WINAPIV*)(uint32_t, float, globalSetFadeSky1089_ptr);
            using globalSetFadeTex1090_ptr = void (WINAPIV*)(uint32_t, float, void*);
            using globalSetFadeTex1090_clbk = void (WINAPIV*)(uint32_t, float, void*, globalSetFadeTex1090_ptr);
            using globalSetFov1091_ptr = void (WINAPIV*)(float);
            using globalSetFov1091_clbk = void (WINAPIV*)(float, globalSetFov1091_ptr);
            using globalSetFreePointer1092_ptr = void (WINAPIV*)();
            using globalSetFreePointer1092_clbk = void (WINAPIV*)(globalSetFreePointer1092_ptr);
            using globalSetFrustumNormalPlane1093_ptr = void (WINAPIV*)();
            using globalSetFrustumNormalPlane1093_clbk = void (WINAPIV*)(globalSetFrustumNormalPlane1093_ptr);
            using globalSetGamma1094_ptr = void (WINAPIV*)(float, int);
            using globalSetGamma1094_clbk = void (WINAPIV*)(float, int, globalSetGamma1094_ptr);
            using globalSetGlobalMusicVolume1095_ptr = int64_t (WINAPIV*)(float);
            using globalSetGlobalMusicVolume1095_clbk = int64_t (WINAPIV*)(float, globalSetGlobalMusicVolume1095_ptr);
            using globalSetGlobalWavVolume1096_ptr = int64_t (WINAPIV*)(float);
            using globalSetGlobalWavVolume1096_clbk = int64_t (WINAPIV*)(float, globalSetGlobalWavVolume1096_ptr);
            using globalSetGrassVS1097_ptr = void (WINAPIV*)(float, float*, float, uint32_t);
            using globalSetGrassVS1097_clbk = void (WINAPIV*)(float, float*, float, uint32_t, globalSetGrassVS1097_ptr);
            using globalSetLightMap1098_ptr = void (WINAPIV*)(int32_t);
            using globalSetLightMap1098_clbk = void (WINAPIV*)(int32_t, globalSetLightMap1098_ptr);
            using globalSetLitGrassVS1099_ptr = void (WINAPIV*)(float, float*, float, uint32_t, float*);
            using globalSetLitGrassVS1099_clbk = void (WINAPIV*)(float, float*, float, uint32_t, float*, globalSetLitGrassVS1099_ptr);
            using globalSetMainLight1100_ptr = void (WINAPIV*)(float*);
            using globalSetMainLight1100_clbk = void (WINAPIV*)(float*, globalSetMainLight1100_ptr);
            using globalSetMatAlphaColor1101_ptr = void (WINAPIV*)(uint32_t);
            using globalSetMatAlphaColor1101_clbk = void (WINAPIV*)(uint32_t, globalSetMatAlphaColor1101_ptr);
            using globalSetMergeFileManager1102_ptr = void (WINAPIV*)(struct CMergeFileManager*);
            using globalSetMergeFileManager1102_clbk = void (WINAPIV*)(struct CMergeFileManager*, globalSetMergeFileManager1102_ptr);
            using globalSetMotionBlurLength1103_ptr = void (WINAPIV*)(float);
            using globalSetMotionBlurLength1103_clbk = void (WINAPIV*)(float, globalSetMotionBlurLength1103_ptr);
            using globalSetMultiLayerCamera1104_ptr = void (WINAPIV*)(float*);
            using globalSetMultiLayerCamera1104_clbk = void (WINAPIV*)(float*, globalSetMultiLayerCamera1104_ptr);
            using globalSetMultiLayerTime1105_ptr = void (WINAPIV*)(float);
            using globalSetMultiLayerTime1105_clbk = void (WINAPIV*)(float, globalSetMultiLayerTime1105_ptr);
            using globalSetNoLodTextere1106_ptr = void (WINAPIV*)();
            using globalSetNoLodTextere1106_clbk = void (WINAPIV*)(globalSetNoLodTextere1106_ptr);
            using globalSetNowR3D3DTexCnt1107_ptr = void (WINAPIV*)(int);
            using globalSetNowR3D3DTexCnt1107_clbk = void (WINAPIV*)(int, globalSetNowR3D3DTexCnt1107_ptr);
            using globalSetNowR3TexCnt1108_ptr = void (WINAPIV*)(int);
            using globalSetNowR3TexCnt1108_clbk = void (WINAPIV*)(int, globalSetNowR3TexCnt1108_ptr);
            using globalSetOpStack1109_ptr = void (WINAPIV*)(int);
            using globalSetOpStack1109_clbk = void (WINAPIV*)(int, globalSetOpStack1109_ptr);
            using globalSetOutLineColor1110_ptr = void (WINAPIV*)(uint32_t);
            using globalSetOutLineColor1110_clbk = void (WINAPIV*)(uint32_t, globalSetOutLineColor1110_ptr);
            using globalSetOutLineColorFont161111_ptr = void (WINAPIV*)(uint32_t);
            using globalSetOutLineColorFont161111_clbk = void (WINAPIV*)(uint32_t, globalSetOutLineColorFont161111_ptr);
            using globalSetOutLineColorFont241112_ptr = void (WINAPIV*)(uint32_t);
            using globalSetOutLineColorFont241112_clbk = void (WINAPIV*)(uint32_t, globalSetOutLineColorFont241112_ptr);
            using globalSetPlayMusicState1113_ptr = void (WINAPIV*)(int);
            using globalSetPlayMusicState1113_clbk = void (WINAPIV*)(int, globalSetPlayMusicState1113_ptr);
            using globalSetPlayWaveState1114_ptr = void (WINAPIV*)(int);
            using globalSetPlayWaveState1114_clbk = void (WINAPIV*)(int, globalSetPlayWaveState1114_ptr);
            using globalSetProjectShadow1115_ptr = void (WINAPIV*)(float*, void*, float, uint32_t, float, float);
            using globalSetProjectShadow1115_clbk = void (WINAPIV*)(float*, void*, float, uint32_t, float, float, globalSetProjectShadow1115_ptr);
            using globalSetR3D3DTexture1116_ptr = void (WINAPIV*)(uint32_t, uint32_t);
            using globalSetR3D3DTexture1116_clbk = void (WINAPIV*)(uint32_t, uint32_t, globalSetR3D3DTexture1116_ptr);
            using globalSetR3TexManageFlag1117_ptr = void (WINAPIV*)(uint32_t);
            using globalSetR3TexManageFlag1117_clbk = void (WINAPIV*)(uint32_t, globalSetR3TexManageFlag1117_ptr);
            using globalSetR3TextFont1118_ptr = void (WINAPIV*)(char*, uint32_t, uint32_t, uint32_t);
            using globalSetR3TextFont1118_clbk = void (WINAPIV*)(char*, uint32_t, uint32_t, uint32_t, globalSetR3TextFont1118_ptr);
            using globalSetReLoadState1119_ptr = void (WINAPIV*)(int);
            using globalSetReLoadState1119_clbk = void (WINAPIV*)(int, globalSetReLoadState1119_ptr);
            using globalSetReflectionState1120_ptr = void (WINAPIV*)(int);
            using globalSetReflectionState1120_clbk = void (WINAPIV*)(int, globalSetReflectionState1120_ptr);
            using globalSetReflectionVS1121_ptr = void (WINAPIV*)();
            using globalSetReflectionVS1121_clbk = void (WINAPIV*)(globalSetReflectionVS1121_ptr);
            using globalSetSkipOneBboShasi11122_ptr = void (WINAPIV*)(int);
            using globalSetSkipOneBboShasi11122_clbk = void (WINAPIV*)(int, globalSetSkipOneBboShasi11122_ptr);
            using globalSetSkyVS1123_ptr = int64_t (WINAPIV*)();
            using globalSetSkyVS1123_clbk = int64_t (WINAPIV*)(globalSetSkyVS1123_ptr);
            using globalSetStateFullScreenEffect1124_ptr = void (WINAPIV*)(uint32_t);
            using globalSetStateFullScreenEffect1124_clbk = void (WINAPIV*)(uint32_t, globalSetStateFullScreenEffect1124_ptr);
            using globalSetTextureRenderTargetFrameBuffer1125_ptr = void (WINAPIV*)(int);
            using globalSetTextureRenderTargetFrameBuffer1125_clbk = void (WINAPIV*)(int, globalSetTextureRenderTargetFrameBuffer1125_ptr);
            using globalSetTimerRate1126_ptr = void (WINAPIV*)(float);
            using globalSetTimerRate1126_clbk = void (WINAPIV*)(float, globalSetTimerRate1126_ptr);
            using globalSetTransformClipInfo1127_ptr = void (WINAPIV*)(float, float, float, float);
            using globalSetTransformClipInfo1127_clbk = void (WINAPIV*)(float, float, float, float, globalSetTransformClipInfo1127_ptr);
            using globalSetVPIPTex11128_ptr = void (WINAPIV*)(void*, void*);
            using globalSetVPIPTex11128_clbk = void (WINAPIV*)(void*, void*, globalSetVPIPTex11128_ptr);
            using globalSetVPIPTex1IndexPrimitive1129_ptr = void (WINAPIV*)(void*, void*);
            using globalSetVPIPTex1IndexPrimitive1129_clbk = void (WINAPIV*)(void*, void*, globalSetVPIPTex1IndexPrimitive1129_ptr);
            using globalSetVPIPTex1IndexPrimitiveTL1130_ptr = void (WINAPIV*)(void*, void*);
            using globalSetVPIPTex1IndexPrimitiveTL1130_clbk = void (WINAPIV*)(void*, void*, globalSetVPIPTex1IndexPrimitiveTL1130_ptr);
            using globalSetVPIPTex21131_ptr = void (WINAPIV*)(void*, void*);
            using globalSetVPIPTex21131_clbk = void (WINAPIV*)(void*, void*, globalSetVPIPTex21131_ptr);
            using globalSetViewPortArea1132_ptr = void (WINAPIV*)(int32_t, int32_t, int32_t, int32_t);
            using globalSetViewPortArea1132_clbk = void (WINAPIV*)(int32_t, int32_t, int32_t, int32_t, globalSetViewPortArea1132_ptr);
            using globalSetVolumeMP31133_ptr = int64_t (WINAPIV*)(float);
            using globalSetVolumeMP31133_clbk = int64_t (WINAPIV*)(float, globalSetVolumeMP31133_ptr);
            using globalSetVolumeStreamMP31134_ptr = int64_t (WINAPIV*)(float);
            using globalSetVolumeStreamMP31134_clbk = int64_t (WINAPIV*)(float, globalSetVolumeStreamMP31134_ptr);
            using globalSetWarningMessageProc1135_ptr = void (WINAPIV*)(void (WINAPIV*)(char*));
            using globalSetWarningMessageProc1135_clbk = void (WINAPIV*)(void (WINAPIV*)(char*), globalSetWarningMessageProc1135_ptr);
            using globalSetWaveVolAndPan1136_ptr = void (WINAPIV*)(uint32_t, float, float);
            using globalSetWaveVolAndPan1136_clbk = void (WINAPIV*)(uint32_t, float, float, globalSetWaveVolAndPan1136_ptr);
            using globalSetWorldViewMatrixVS1137_ptr = void (WINAPIV*)(float**);
            using globalSetWorldViewMatrixVS1137_clbk = void (WINAPIV*)(float**, globalSetWorldViewMatrixVS1137_ptr);
            using globalShadowBeginScene1138_ptr = void (WINAPIV*)();
            using globalShadowBeginScene1138_clbk = void (WINAPIV*)(globalShadowBeginScene1138_ptr);
            using globalShadowEndScene1139_ptr = void (WINAPIV*)();
            using globalShadowEndScene1139_clbk = void (WINAPIV*)(globalShadowEndScene1139_ptr);
            using globalShortToFloat1141_ptr = void (WINAPIV*)(int16_t*, float*, int);
            using globalShortToFloat1141_clbk = void (WINAPIV*)(int16_t*, float*, int, globalShortToFloat1141_ptr);
            using globalSmoothedNoise11142_ptr = float (WINAPIV*)(int32_t);
            using globalSmoothedNoise11142_clbk = float (WINAPIV*)(int32_t, globalSmoothedNoise11142_ptr);
            using globalSmoothedNoise11143_ptr = float (WINAPIV*)(int32_t, int32_t);
            using globalSmoothedNoise11143_clbk = float (WINAPIV*)(int32_t, int32_t, globalSmoothedNoise11143_ptr);
            using globalSplitString1145_ptr = uint64_t (WINAPIV*)(char*, char*, struct std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >*);
            using globalSplitString1145_clbk = uint64_t (WINAPIV*)(char*, char*, struct std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >*, globalSplitString1145_ptr);
            using globalStopR3MP31146_ptr = void (WINAPIV*)();
            using globalStopR3MP31146_clbk = void (WINAPIV*)(globalStopR3MP31146_ptr);
            using globalStopStreamR3MP31147_ptr = void (WINAPIV*)();
            using globalStopStreamR3MP31147_clbk = void (WINAPIV*)(globalStopStreamR3MP31147_ptr);
            using globalStopWave1148_ptr = void (WINAPIV*)(uint32_t);
            using globalStopWave1148_clbk = void (WINAPIV*)(uint32_t, globalStopWave1148_ptr);
            using globalStripEXT1149_ptr = void (WINAPIV*)(char*);
            using globalStripEXT1149_clbk = void (WINAPIV*)(char*, globalStripEXT1149_ptr);
            using globalStripFinalPath1150_ptr = void (WINAPIV*)(char*);
            using globalStripFinalPath1150_clbk = void (WINAPIV*)(char*, globalStripFinalPath1150_ptr);
            using globalStripName1151_ptr = void (WINAPIV*)(char*);
            using globalStripName1151_clbk = void (WINAPIV*)(char*, globalStripName1151_ptr);
            using globalStripPath1152_ptr = void (WINAPIV*)(char*);
            using globalStripPath1152_clbk = void (WINAPIV*)(char*, globalStripPath1152_ptr);
            using globalTestAllGroup1153_ptr = void (WINAPIV*)(void*, void*, int, int);
            using globalTestAllGroup1153_clbk = void (WINAPIV*)(void*, void*, int, int, globalTestAllGroup1153_ptr);
            using globalTestWriteFile1154_ptr = void (WINAPIV*)(char*, char*);
            using globalTestWriteFile1154_clbk = void (WINAPIV*)(char*, char*, globalTestWriteFile1154_ptr);
            using globalTextureCopy1155_ptr = void (WINAPIV*)(struct CTextureRender*, void*);
            using globalTextureCopy1155_clbk = void (WINAPIV*)(struct CTextureRender*, void*, globalTextureCopy1155_ptr);
            using globalTextureSplatting1156_ptr = void (WINAPIV*)(struct _BSP_MAT_GROUP*, int);
            using globalTextureSplatting1156_clbk = void (WINAPIV*)(struct _BSP_MAT_GROUP*, int, globalTextureSplatting1156_ptr);
            using globalTransformVertex1157_ptr = int64_t (WINAPIV*)(float*, float**, float*);
            using globalTransformVertex1157_clbk = int64_t (WINAPIV*)(float*, float**, float*, globalTransformVertex1157_ptr);
            using globalTransformVertex1158_ptr = int64_t (WINAPIV*)(float*, float**, float*, float*);
            using globalTransformVertex1158_clbk = int64_t (WINAPIV*)(float*, float**, float*, float*, globalTransformVertex1158_ptr);
            using globalUnLightMappingTex11159_ptr = void (WINAPIV*)();
            using globalUnLightMappingTex11159_clbk = void (WINAPIV*)(globalUnLightMappingTex11159_ptr);
            using globalUnSetDynamicLight1160_ptr = void (WINAPIV*)();
            using globalUnSetDynamicLight1160_clbk = void (WINAPIV*)(globalUnSetDynamicLight1160_ptr);
            using globalUnSetMatAlphaColor1161_ptr = void (WINAPIV*)();
            using globalUnSetMatAlphaColor1161_clbk = void (WINAPIV*)(globalUnSetMatAlphaColor1161_ptr);
            using globalUnSetProjectedShadow1162_ptr = void (WINAPIV*)();
            using globalUnSetProjectedShadow1162_clbk = void (WINAPIV*)(globalUnSetProjectedShadow1162_ptr);
            using globalUnTextureSplatting1163_ptr = void (WINAPIV*)();
            using globalUnTextureSplatting1163_clbk = void (WINAPIV*)(globalUnTextureSplatting1163_ptr);
            using globalUpdateStreamMP31164_ptr = void (WINAPIV*)();
            using globalUpdateStreamMP31164_clbk = void (WINAPIV*)(globalUpdateStreamMP31164_ptr);
            using globalVector3fTransform1165_ptr = void (WINAPIV*)(float*, float*, float**);
            using globalVector3fTransform1165_clbk = void (WINAPIV*)(float*, float*, float**, globalVector3fTransform1165_ptr);
            using globalVertFlipBuf1166_ptr = int64_t (WINAPIV*)(uint8_t*, unsigned int, unsigned int);
            using globalVertFlipBuf1166_clbk = int64_t (WINAPIV*)(uint8_t*, unsigned int, unsigned int, globalVertFlipBuf1166_ptr);
            using globalW2M1168_ptr = bool (WINAPIV*)(char*, char*, unsigned int);
            using globalW2M1168_clbk = bool (WINAPIV*)(char*, char*, unsigned int, globalW2M1168_ptr);
            using globalWCHARTOMULTI1170_ptr = bool (WINAPIV*)(wchar_t*, char*, unsigned int);
            using globalWCHARTOMULTI1170_clbk = bool (WINAPIV*)(wchar_t*, char*, unsigned int, globalWCHARTOMULTI1170_ptr);
            using globalWarning1171_ptr = void (WINAPIV*)(char*, char*);
            using globalWarning1171_clbk = void (WINAPIV*)(char*, char*, globalWarning1171_ptr);
            using globalWndProc1172_ptr = int64_t (WINAPIV*)(HWND, unsigned int, uint64_t, int64_t);
            using globalWndProc1172_clbk = int64_t (WINAPIV*)(HWND, unsigned int, uint64_t, int64_t, globalWndProc1172_ptr);
            using globalWriteCheatLog1174_ptr = void (WINAPIV*)(char*, struct CPlayer*);
            using globalWriteCheatLog1174_clbk = void (WINAPIV*)(char*, struct CPlayer*, globalWriteCheatLog1174_ptr);
            using globalWriteLogFileLong1176_ptr = bool (WINAPIV*)(char*, char*);
            using globalWriteLogFileLong1176_clbk = bool (WINAPIV*)(char*, char*, globalWriteLogFileLong1176_ptr);
            using globalWriteServerStartHistory1178_ptr = void (WINAPIV*)(char*);
            using globalWriteServerStartHistory1178_clbk = void (WINAPIV*)(char*, globalWriteServerStartHistory1178_ptr);
            using globalWriteTableData1180_ptr = bool (WINAPIV*)(int, struct CRecordData*, bool, char*);
            using globalWriteTableData1180_clbk = bool (WINAPIV*)(int, struct CRecordData*, bool, char*, globalWriteTableData1180_ptr);
            using globalWriteTableDataPart1182_ptr = bool (WINAPIV*)(int, struct CRecordData*, char*);
            using globalWriteTableDataPart1182_clbk = bool (WINAPIV*)(int, struct CRecordData*, char*, globalWriteTableDataPart1182_ptr);
            using global_AfxInitManaged1184_ptr = int (WINAPIV*)();
            using global_AfxInitManaged1184_clbk = int (WINAPIV*)(global_AfxInitManaged1184_ptr);
            using global_CalcPayExgRatePerRace1186_ptr = int (WINAPIV*)(float*, int);
            using global_CalcPayExgRatePerRace1186_clbk = int (WINAPIV*)(float*, int, global_CalcPayExgRatePerRace1186_ptr);
            using global_CcrFG_rs_CloseUserContext1187_ptr = void (WINAPIV*)(void**);
            using global_CcrFG_rs_CloseUserContext1187_clbk = void (WINAPIV*)(void**, global_CcrFG_rs_CloseUserContext1187_ptr);
            using global_CcrFG_rs_CreateUserContext1188_ptr = void* (WINAPIV*)(uint32_t, uint8_t*, uint32_t, uint8_t*, uint32_t, uint32_t, void*);
            using global_CcrFG_rs_CreateUserContext1188_clbk = void* (WINAPIV*)(uint32_t, uint8_t*, uint32_t, uint8_t*, uint32_t, uint32_t, void*, global_CcrFG_rs_CreateUserContext1188_ptr);
            using global_CcrFG_rs_DecryptPacket1189_ptr = int (WINAPIV*)(void*, uint8_t*, int);
            using global_CcrFG_rs_DecryptPacket1189_clbk = int (WINAPIV*)(void*, uint8_t*, int, global_CcrFG_rs_DecryptPacket1189_ptr);
            using global_CcrFG_rs_EncryptPacket1190_ptr = int (WINAPIV*)(void*, uint8_t*, int);
            using global_CcrFG_rs_EncryptPacket1190_clbk = int (WINAPIV*)(void*, uint8_t*, int, global_CcrFG_rs_EncryptPacket1190_ptr);
            using global_CcrFG_rs_GetLastError1191_ptr = uint32_t (WINAPIV*)();
            using global_CcrFG_rs_GetLastError1191_clbk = uint32_t (WINAPIV*)(global_CcrFG_rs_GetLastError1191_ptr);
            using global_CcrFG_rs_Initialize1192_ptr = int (WINAPIV*)(int (WINAPIV*)(int32_t, void*, void*, int, void*), uint8_t*, uint32_t);
            using global_CcrFG_rs_Initialize1192_clbk = int (WINAPIV*)(int (WINAPIV*)(int32_t, void*, void*, int, void*), uint8_t*, uint32_t, global_CcrFG_rs_Initialize1192_ptr);
            using global_CcrFG_rs_Uninitialize1193_ptr = void (WINAPIV*)();
            using global_CcrFG_rs_Uninitialize1193_clbk = void (WINAPIV*)(global_CcrFG_rs_Uninitialize1193_ptr);
            using global_CheckCumulativeSF1195_ptr = int (WINAPIV*)(char, unsigned int, int*, int*, char**);
            using global_CheckCumulativeSF1195_clbk = int (WINAPIV*)(char, unsigned int, int*, int*, char**, global_CheckCumulativeSF1195_ptr);
            using global_CheckDestMonsterLimitLv1197_ptr = bool (WINAPIV*)(int, int, char);
            using global_CheckDestMonsterLimitLv1197_clbk = bool (WINAPIV*)(int, int, char, global_CheckDestMonsterLimitLv1197_ptr);
            using global_CheckPotionData1199_ptr = bool (WINAPIV*)(struct _CheckPotion_fld::_CheckEffectCode*, struct CPlayer*);
            using global_CheckPotionData1199_clbk = bool (WINAPIV*)(struct _CheckPotion_fld::_CheckEffectCode*, struct CPlayer*, global_CheckPotionData1199_ptr);
            using global_CheckSameItem1201_ptr = bool (WINAPIV*)(char*, char*, char*, bool);
            using global_CheckSameItem1201_clbk = bool (WINAPIV*)(char*, char*, char*, bool, global_CheckSameItem1201_ptr);
            using global_Check_SF_UseType1203_ptr = int (WINAPIV*)(struct _base_fld*, int);
            using global_Check_SF_UseType1203_clbk = int (WINAPIV*)(struct _base_fld*, int, global_Check_SF_UseType1203_ptr);
            using global_CreateLootingNovusItem1205_ptr = void (WINAPIV*)(char*, char*, struct LuaParam3, struct LuaParam3);
            using global_CreateLootingNovusItem1205_clbk = void (WINAPIV*)(char*, char*, struct LuaParam3, struct LuaParam3, global_CreateLootingNovusItem1205_ptr);
            using global_CreateMon1207_ptr = struct CMonster* (WINAPIV*)(char*, char*, float, float, float);
            using global_CreateMon1207_clbk = struct CMonster* (WINAPIV*)(char*, char*, float, float, float, global_CreateMon1207_ptr);
            using global_DbgOut1209_ptr = HRESULT (WINAPIV*)(char*, unsigned int, HRESULT, char*);
            using global_DbgOut1209_clbk = HRESULT (WINAPIV*)(char*, unsigned int, HRESULT, char*, global_DbgOut1209_ptr);
            using global_FailItemShortBuffer1212_ptr = bool (WINAPIV*)(int*, char, struct _ItemCombine_exp_fld::_material*, struct _STORAGE_LIST::_db_con**);
            using global_FailItemShortBuffer1212_clbk = bool (WINAPIV*)(int*, char, struct _ItemCombine_exp_fld::_material*, struct _STORAGE_LIST::_db_con**, global_FailItemShortBuffer1212_ptr);
            using global_GetLuaEventMgr1214_ptr = struct CLuaEventMgr* (WINAPIV*)();
            using global_GetLuaEventMgr1214_clbk = struct CLuaEventMgr* (WINAPIV*)(global_GetLuaEventMgr1214_ptr);
            using global_GetMonsterContTime1216_ptr = uint16_t (WINAPIV*)(char, char);
            using global_GetMonsterContTime1216_clbk = uint16_t (WINAPIV*)(char, char, global_GetMonsterContTime1216_ptr);
            using global_GetTempEffectValue1218_ptr = bool (WINAPIV*)(struct _skill_fld*, int, float*);
            using global_GetTempEffectValue1218_clbk = bool (WINAPIV*)(struct _skill_fld*, int, float*, global_GetTempEffectValue1218_ptr);
            using global_GetTransTBL1220_ptr = struct _trand_tbl* (WINAPIV*)(int);
            using global_GetTransTBL1220_clbk = struct _trand_tbl* (WINAPIV*)(int, global_GetTransTBL1220_ptr);
            using global_IsXmasSnowEffect1222_ptr = bool (WINAPIV*)(struct _sf_continous*);
            using global_IsXmasSnowEffect1222_clbk = bool (WINAPIV*)(struct _sf_continous*, global_IsXmasSnowEffect1222_ptr);
            using global_KickReason1224_ptr = char* (WINAPIV*)(char);
            using global_KickReason1224_clbk = char* (WINAPIV*)(char, global_KickReason1224_ptr);
            using global_Pow_int1226_ptr = long double (WINAPIV*)(long double, int);
            using global_Pow_int1226_clbk = long double (WINAPIV*)(long double, int, global_Pow_int1226_ptr);
            using global_Pow_int1228_ptr = float (WINAPIV*)(float, int);
            using global_Pow_int1228_clbk = float (WINAPIV*)(float, int, global_Pow_int1228_ptr);
            using global_RTC_AllocaFailure1229_ptr = void (WINAPIV*)(void*, struct _RTC_ALLOCA_NODE*, int);
            using global_RTC_AllocaFailure1229_clbk = void (WINAPIV*)(void*, struct _RTC_ALLOCA_NODE*, int, global_RTC_AllocaFailure1229_ptr);
            using global_RTC_Failure1230_ptr = void (WINAPIV*)(void*, int);
            using global_RTC_Failure1230_clbk = void (WINAPIV*)(void*, int, global_RTC_Failure1230_ptr);
            using global_RTC_GetErrorFunc1231_ret = int (WINAPIV*)(int, char*, int, char*, char*);
            using global_RTC_GetErrorFunc1231_ptr = global_RTC_GetErrorFunc1231_ret (WINAPIV*)(void*);
            using global_RTC_GetErrorFunc1231_clbk = global_RTC_GetErrorFunc1231_ret (WINAPIV*)(void*, global_RTC_GetErrorFunc1231_ptr);
            using global_RTC_GetErrorFuncW1232_ret = int (WINAPIV*)(int, wchar_t*, int, wchar_t*, wchar_t*);
            using global_RTC_GetErrorFuncW1232_ptr = global_RTC_GetErrorFuncW1232_ret (WINAPIV*)(void*);
            using global_RTC_GetErrorFuncW1232_clbk = global_RTC_GetErrorFuncW1232_ret (WINAPIV*)(void*, global_RTC_GetErrorFuncW1232_ptr);
            using global_RTC_GetSrcLine1233_ptr = int (WINAPIV*)(char*, wchar_t*, unsigned int, int*, wchar_t*, unsigned int);
            using global_RTC_GetSrcLine1233_clbk = int (WINAPIV*)(char*, wchar_t*, unsigned int, int*, wchar_t*, unsigned int, global_RTC_GetSrcLine1233_ptr);
            using global_RTC_StackFailure1234_ptr = void (WINAPIV*)(void*, char*);
            using global_RTC_StackFailure1234_clbk = void (WINAPIV*)(void*, char*, global_RTC_StackFailure1234_ptr);
            using global_ReadEconomyIniFile1236_ptr = bool (WINAPIV*)();
            using global_ReadEconomyIniFile1236_clbk = bool (WINAPIV*)(global_ReadEconomyIniFile1236_ptr);
            using global_SearchPlayer1238_ptr = unsigned int (WINAPIV*)(char*);
            using global_SearchPlayer1238_clbk = unsigned int (WINAPIV*)(char*, global_SearchPlayer1238_ptr);
            using global_UpdateNewEconomy1240_ptr = void (WINAPIV*)(struct _economy_calc_data*);
            using global_UpdateNewEconomy1240_clbk = void (WINAPIV*)(struct _economy_calc_data*, global_UpdateNewEconomy1240_ptr);
            using global_UpdateRateSendToAllPlayer1242_ptr = void (WINAPIV*)();
            using global_UpdateRateSendToAllPlayer1242_clbk = void (WINAPIV*)(global_UpdateRateSendToAllPlayer1242_ptr);
            using global__ArrayUnwind1243_ptr = void (WINAPIV*)(void*, uint64_t, int, void (WINAPIV*)(void*));
            using global__ArrayUnwind1243_clbk = void (WINAPIV*)(void*, uint64_t, int, void (WINAPIV*)(void*), global__ArrayUnwind1243_ptr);
            using global__CxxUnhandledExceptionFilter1244_ptr = int (WINAPIV*)(struct _EXCEPTION_POINTERS*);
            using global__CxxUnhandledExceptionFilter1244_clbk = int (WINAPIV*)(struct _EXCEPTION_POINTERS*, global__CxxUnhandledExceptionFilter1244_ptr);
            using global__destroy_item1246_ptr = bool (WINAPIV*)(struct CPlayer*, struct _combine_ex_item_result_zocl::__item*, struct _STORAGE_LIST::_db_con*, struct _combine_ex_item_request_clzo::_list*, int);
            using global__destroy_item1246_clbk = bool (WINAPIV*)(struct CPlayer*, struct _combine_ex_item_result_zocl::__item*, struct _STORAGE_LIST::_db_con*, struct _combine_ex_item_request_clzo::_list*, int, global__destroy_item1246_ptr);
            using global__make_item1248_ptr = char (WINAPIV*)(struct CPlayer*, struct _combine_ex_item_result_zocl::__item*, struct _ItemCombine_exp_fld*, int, char);
            using global__make_item1248_clbk = char (WINAPIV*)(struct CPlayer*, struct _combine_ex_item_result_zocl::__item*, struct _ItemCombine_exp_fld*, int, char, global__make_item1248_ptr);
            using global__trace1250_ptr = void (WINAPIV*)(char*);
            using global__trace1250_clbk = void (WINAPIV*)(char*, global__trace1250_ptr);
            using global_false1252_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*);
            using global_false1252_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, global_false1252_ptr);
            using global_mbschr1254_ptr = char* (WINAPIV*)(char*, unsigned int);
            using global_mbschr1254_clbk = char* (WINAPIV*)(char*, unsigned int, global_mbschr1254_ptr);
            using global_tcsrchr1256_ptr = char* (WINAPIV*)(char*, unsigned int);
            using global_tcsrchr1256_clbk = char* (WINAPIV*)(char*, unsigned int, global_tcsrchr1256_ptr);
            using globalabs1262_ptr = long double (WINAPIV*)(long double);
            using globalabs1262_clbk = long double (WINAPIV*)(long double, globalabs1262_ptr);
            using globalabs1264_ptr = float (WINAPIV*)(float);
            using globalabs1264_clbk = float (WINAPIV*)(float, globalabs1264_ptr);
            using globalacos1266_ptr = float (WINAPIV*)(float);
            using globalacos1266_clbk = float (WINAPIV*)(float, globalacos1266_ptr);
            using globalatan21267_ptr = float (WINAPIV*)(float, float);
            using globalatan21267_clbk = float (WINAPIV*)(float, float, globalatan21267_ptr);
            using globalclear_file1269_ptr = void (WINAPIV*)(char*, unsigned int);
            using globalclear_file1269_clbk = void (WINAPIV*)(char*, unsigned int, globalclear_file1269_ptr);
            using globalcos1271_ptr = float (WINAPIV*)(float);
            using globalcos1271_clbk = float (WINAPIV*)(float, globalcos1271_ptr);
            using globalct_CashEventStart1273_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_CashEventStart1273_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_CashEventStart1273_ptr);
            using globalct_CdeEndup1275_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_CdeEndup1275_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_CdeEndup1275_ptr);
            using globalct_CdeStart1277_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_CdeStart1277_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_CdeStart1277_ptr);
            using globalct_ClassRefineEvent1279_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_ClassRefineEvent1279_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_ClassRefineEvent1279_ptr);
            using globalct_ClearSettleOwnerGuild1281_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_ClearSettleOwnerGuild1281_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_ClearSettleOwnerGuild1281_ptr);
            using globalct_ConEventStart1283_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_ConEventStart1283_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_ConEventStart1283_ptr);
            using globalct_Gold_Age_Event_Status1285_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_Gold_Age_Event_Status1285_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_Gold_Age_Event_Status1285_ptr);
            using globalct_Gold_Age_Get_Box_Cnt1287_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_Gold_Age_Get_Box_Cnt1287_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_Gold_Age_Get_Box_Cnt1287_ptr);
            using globalct_Gold_Age_Set_Event_Status1289_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_Gold_Age_Set_Event_Status1289_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_Gold_Age_Set_Event_Status1289_ptr);
            using globalct_HolyKeeperAttack1291_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_HolyKeeperAttack1291_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_HolyKeeperAttack1291_ptr);
            using globalct_HolySystem1293_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_HolySystem1293_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_HolySystem1293_ptr);
            using globalct_HolySystem_Jp1295_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_HolySystem_Jp1295_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_HolySystem_Jp1295_ptr);
            using globalct_InformCristalBattleBeforeAnHour1297_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_InformCristalBattleBeforeAnHour1297_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_InformCristalBattleBeforeAnHour1297_ptr);
            using globalct_InformPatriarchProcessor1299_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_InformPatriarchProcessor1299_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_InformPatriarchProcessor1299_ptr);
            using globalct_NuAfterEffect1301_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_NuAfterEffect1301_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_NuAfterEffect1301_ptr);
            using globalct_PcBandPrimium1303_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_PcBandPrimium1303_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_PcBandPrimium1303_ptr);
            using globalct_PvpLimitInit1305_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_PvpLimitInit1305_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_PvpLimitInit1305_ptr);
            using globalct_ReqChangeHonorGuild1307_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_ReqChangeHonorGuild1307_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_ReqChangeHonorGuild1307_ptr);
            using globalct_ReqPunishment1309_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_ReqPunishment1309_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_ReqPunishment1309_ptr);
            using globalct_SetGuildGrade1311_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_SetGuildGrade1311_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_SetGuildGrade1311_ptr);
            using globalct_SetGuildGradeByGuildSerial1313_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_SetGuildGradeByGuildSerial1313_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_SetGuildGradeByGuildSerial1313_ptr);
            using globalct_SetGuildGradeByName1315_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_SetGuildGradeByName1315_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_SetGuildGradeByName1315_ptr);
            using globalct_SetGuildMaster1317_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_SetGuildMaster1317_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_SetGuildMaster1317_ptr);
            using globalct_SetMaxLevelLimit1319_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_SetMaxLevelLimit1319_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_SetMaxLevelLimit1319_ptr);
            using globalct_SetPatriarchAuto1321_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_SetPatriarchAuto1321_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_SetPatriarchAuto1321_ptr);
            using globalct_SetPatriarchClear1323_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_SetPatriarchClear1323_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_SetPatriarchClear1323_ptr);
            using globalct_SetPatriarchGroup1325_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_SetPatriarchGroup1325_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_SetPatriarchGroup1325_ptr);
            using globalct_SetPatriarchProcessor1327_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_SetPatriarchProcessor1327_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_SetPatriarchProcessor1327_ptr);
            using globalct_SetSettleOwnerGuild1329_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_SetSettleOwnerGuild1329_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_SetSettleOwnerGuild1329_ptr);
            using globalct_Win_RaceWar1331_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_Win_RaceWar1331_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_Win_RaceWar1331_ptr);
            using globalct_action_point_set1333_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_action_point_set1333_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_action_point_set1333_ptr);
            using globalct_add_guild_schedule1335_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_add_guild_schedule1335_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_add_guild_schedule1335_ptr);
            using globalct_add_one_day_guild_schedule1337_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_add_one_day_guild_schedule1337_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_add_one_day_guild_schedule1337_ptr);
            using globalct_all_item_muzi1339_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_all_item_muzi1339_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_all_item_muzi1339_ptr);
            using globalct_all_map1341_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_all_map1341_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_all_map1341_ptr);
            using globalct_alter_cashbag1343_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_alter_cashbag1343_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_alter_cashbag1343_ptr);
            using globalct_alter_dalant1345_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_alter_dalant1345_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_alter_dalant1345_ptr);
            using globalct_alter_exp1347_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_alter_exp1347_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_alter_exp1347_ptr);
            using globalct_alter_gold1349_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_alter_gold1349_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_alter_gold1349_ptr);
            using globalct_alter_inven_dur1351_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_alter_inven_dur1351_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_alter_inven_dur1351_ptr);
            using globalct_alter_lv1353_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_alter_lv1353_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_alter_lv1353_ptr);
            using globalct_alter_pvp1355_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_alter_pvp1355_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_alter_pvp1355_ptr);
            using globalct_amp_full1357_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_amp_full1357_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_amp_full1357_ptr);
            using globalct_amp_set1359_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_amp_set1359_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_amp_set1359_ptr);
            using globalct_animus_attack_grade1361_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_animus_attack_grade1361_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_animus_attack_grade1361_ptr);
            using globalct_animus_recall_term1363_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_animus_recall_term1363_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_animus_recall_term1363_ptr);
            using globalct_animusexp1365_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_animusexp1365_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_animusexp1365_ptr);
            using globalct_basemastery1367_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_basemastery1367_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_basemastery1367_ptr);
            using globalct_boss_sms_cancel1369_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_boss_sms_cancel1369_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_boss_sms_cancel1369_ptr);
            using globalct_buf_potion_use1371_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_buf_potion_use1371_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_buf_potion_use1371_ptr);
            using globalct_cashitembuy1373_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_cashitembuy1373_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_cashitembuy1373_ptr);
            using globalct_change_class1375_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_change_class1375_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_change_class1375_ptr);
            using globalct_change_degree1377_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_change_degree1377_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_change_degree1377_ptr);
            using globalct_change_master_elect1379_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_change_master_elect1379_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_change_master_elect1379_ptr);
            using globalct_change_mastery1381_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_change_mastery1381_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_change_mastery1381_ptr);
            using globalct_chatsave1383_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_chatsave1383_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_chatsave1383_ptr);
            using globalct_check_guild_batlle_goal1385_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_check_guild_batlle_goal1385_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_check_guild_batlle_goal1385_ptr);
            using globalct_circle_mon_kill1387_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_circle_mon_kill1387_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_circle_mon_kill1387_ptr);
            using globalct_circle_user_num1389_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_circle_user_num1389_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_circle_user_num1389_ptr);
            using globalct_combine_ex_result1391_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_combine_ex_result1391_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_combine_ex_result1391_ptr);
            using globalct_complete_quest1393_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_complete_quest1393_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_complete_quest1393_ptr);
            using globalct_complete_quest_other1395_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_complete_quest_other1395_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_complete_quest_other1395_ptr);
            using globalct_cont_effet_clear1397_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_cont_effet_clear1397_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_cont_effet_clear1397_ptr);
            using globalct_cont_effet_time1399_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_cont_effet_time1399_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_cont_effet_time1399_ptr);
            using globalct_continue_palytime_inc1401_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_continue_palytime_inc1401_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_continue_palytime_inc1401_ptr);
            using globalct_copy_avator1403_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_copy_avator1403_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_copy_avator1403_ptr);
            using globalct_create_guildbattle_field_object1405_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_create_guildbattle_field_object1405_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_create_guildbattle_field_object1405_ptr);
            using globalct_cur_guildbattle_color1407_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_cur_guildbattle_color1407_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_cur_guildbattle_color1407_ptr);
            using globalct_darkholereward1409_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_darkholereward1409_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_darkholereward1409_ptr);
            using globalct_defense_item_grace1411_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_defense_item_grace1411_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_defense_item_grace1411_ptr);
            using globalct_defense_item_grace_Jp1413_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_defense_item_grace_Jp1413_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_defense_item_grace_Jp1413_ptr);
            using globalct_destroy_gravitystone1415_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_destroy_gravitystone1415_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_destroy_gravitystone1415_ptr);
            using globalct_destroy_guildbattle_field_object1417_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_destroy_guildbattle_field_object1417_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_destroy_guildbattle_field_object1417_ptr);
            using globalct_destroy_system_tower1419_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_destroy_system_tower1419_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_destroy_system_tower1419_ptr);
            using globalct_die1421_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_die1421_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_die1421_ptr);
            using globalct_drop_gravitystone1423_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_drop_gravitystone1423_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_drop_gravitystone1423_ptr);
            using globalct_drop_jade1425_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_drop_jade1425_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_drop_jade1425_ptr);
            using globalct_elect_info_player1427_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_elect_info_player1427_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_elect_info_player1427_ptr);
            using globalct_elect_set_env1429_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_elect_set_env1429_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_elect_set_env1429_ptr);
            using globalct_elect_set_player1431_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_elect_set_player1431_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_elect_set_player1431_ptr);
            using globalct_eventset_start1433_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_eventset_start1433_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_eventset_start1433_ptr);
            using globalct_eventset_stop1435_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_eventset_stop1435_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_eventset_stop1435_ptr);
            using globalct_exception1437_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_exception1437_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_exception1437_ptr);
            using globalct_exip_keeper1439_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_exip_keeper1439_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_exip_keeper1439_ptr);
            using globalct_exit_stone1441_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_exit_stone1441_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_exit_stone1441_ptr);
            using globalct_expire_pcbang1443_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_expire_pcbang1443_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_expire_pcbang1443_ptr);
            using globalct_free_ride_ship1445_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_free_ride_ship1445_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_free_ride_ship1445_ptr);
            using globalct_free_sf_by_class1447_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_free_sf_by_class1447_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_free_sf_by_class1447_ptr);
            using globalct_full_animus_gauge1449_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_full_animus_gauge1449_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_full_animus_gauge1449_ptr);
            using globalct_full_force1451_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_full_force1451_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_full_force1451_ptr);
            using globalct_full_gauge1453_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_full_gauge1453_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_full_gauge1453_ptr);
            using globalct_fullset1455_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_fullset1455_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_fullset1455_ptr);
            using globalct_get_gravitystone1457_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_get_gravitystone1457_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_get_gravitystone1457_ptr);
            using globalct_goto_char1459_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_goto_char1459_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_goto_char1459_ptr);
            using globalct_goto_mine1461_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_goto_mine1461_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_goto_mine1461_ptr);
            using globalct_goto_monster1463_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_goto_monster1463_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_goto_monster1463_ptr);
            using globalct_goto_npc1465_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_goto_npc1465_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_goto_npc1465_ptr);
            using globalct_goto_shipport_eder1467_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_goto_shipport_eder1467_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_goto_shipport_eder1467_ptr);
            using globalct_goto_shipport_town1469_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_goto_shipport_town1469_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_goto_shipport_town1469_ptr);
            using globalct_goto_stone1471_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_goto_stone1471_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_goto_stone1471_ptr);
            using globalct_guild_battle_force_stone1473_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_guild_battle_force_stone1473_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_guild_battle_force_stone1473_ptr);
            using globalct_guild_call1475_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_guild_call1475_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_guild_call1475_ptr);
            using globalct_guild_info1477_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_guild_info1477_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_guild_info1477_ptr);
            using globalct_guild_suggest1479_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_guild_suggest1479_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_guild_suggest1479_ptr);
            using globalct_half_gauge1481_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_half_gauge1481_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_half_gauge1481_ptr);
            using globalct_init_monster1483_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_init_monster1483_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_init_monster1483_ptr);
            using globalct_inven_empty1485_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_inven_empty1485_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_inven_empty1485_ptr);
            using globalct_itemloot1487_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_itemloot1487_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_itemloot1487_ptr);
            using globalct_jump_to_pos1489_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_jump_to_pos1489_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_jump_to_pos1489_ptr);
            using globalct_kick_player1491_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_kick_player1491_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_kick_player1491_ptr);
            using globalct_loadcashamount1493_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_loadcashamount1493_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_loadcashamount1493_ptr);
            using globalct_look_like_boss1495_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_look_like_boss1495_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_look_like_boss1495_ptr);
            using globalct_loot_bag1497_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_loot_bag1497_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_loot_bag1497_ptr);
            using globalct_loot_dungeon1499_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_loot_dungeon1499_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_loot_dungeon1499_ptr);
            using globalct_loot_item1501_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_loot_item1501_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_loot_item1501_ptr);
            using globalct_loot_material1503_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_loot_material1503_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_loot_material1503_ptr);
            using globalct_loot_mine1505_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_loot_mine1505_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_loot_mine1505_ptr);
            using globalct_loot_tower1507_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_loot_tower1507_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_loot_tower1507_ptr);
            using globalct_loot_upgrade1509_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_loot_upgrade1509_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_loot_upgrade1509_ptr);
            using globalct_loot_upgrade_item1511_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_loot_upgrade_item1511_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_loot_upgrade_item1511_ptr);
            using globalct_lua_command1513_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_lua_command1513_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_lua_command1513_ptr);
            using globalct_make_system_tower1515_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_make_system_tower1515_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_make_system_tower1515_ptr);
            using globalct_makeitem_need_matrial1517_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_makeitem_need_matrial1517_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_makeitem_need_matrial1517_ptr);
            using globalct_makeitem_no_matrial1519_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_makeitem_no_matrial1519_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_makeitem_no_matrial1519_ptr);
            using globalct_manage_guild1521_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_manage_guild1521_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_manage_guild1521_ptr);
            using globalct_max_attack1523_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_max_attack1523_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_max_attack1523_ptr);
            using globalct_mepcbang1525_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_mepcbang1525_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_mepcbang1525_ptr);
            using globalct_min_attack1527_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_min_attack1527_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_min_attack1527_ptr);
            using globalct_minespeed1529_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_minespeed1529_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_minespeed1529_ptr);
            using globalct_mormal_attack1531_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_mormal_attack1531_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_mormal_attack1531_ptr);
            using globalct_party_call1533_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_party_call1533_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_party_call1533_ptr);
            using globalct_pass_dungeon1535_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_pass_dungeon1535_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_pass_dungeon1535_ptr);
            using globalct_pass_sch1537_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_pass_sch1537_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_pass_sch1537_ptr);
            using globalct_pcanimusexp1539_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_pcanimusexp1539_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_pcanimusexp1539_ptr);
            using globalct_pcbangitemget1541_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_pcbangitemget1541_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_pcbangitemget1541_ptr);
            using globalct_pcbasemastery1543_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_pcbasemastery1543_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_pcbasemastery1543_ptr);
            using globalct_pcitemloot1545_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_pcitemloot1545_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_pcitemloot1545_ptr);
            using globalct_pcminespeed1547_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_pcminespeed1547_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_pcminespeed1547_ptr);
            using globalct_pcplayerexp1549_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_pcplayerexp1549_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_pcplayerexp1549_ptr);
            using globalct_pcroom_premium1551_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_pcroom_premium1551_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_pcroom_premium1551_ptr);
            using globalct_pcsfmastery1553_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_pcsfmastery1553_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_pcsfmastery1553_ptr);
            using globalct_period_time_set1555_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_period_time_set1555_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_period_time_set1555_ptr);
            using globalct_playerexp1557_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_playerexp1557_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_playerexp1557_ptr);
            using globalct_premium_rate1559_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_premium_rate1559_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_premium_rate1559_ptr);
            using globalct_query_remain_ore1561_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_query_remain_ore1561_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_query_remain_ore1561_ptr);
            using globalct_recall_monster1563_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_recall_monster1563_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_recall_monster1563_ptr);
            using globalct_recall_player1565_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_recall_player1565_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_recall_player1565_ptr);
            using globalct_recv_change_atrad_taxrate1567_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_recv_change_atrad_taxrate1567_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_recv_change_atrad_taxrate1567_ptr);
            using globalct_recv_current_battle_info1569_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_recv_current_battle_info1569_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_recv_current_battle_info1569_ptr);
            using globalct_recv_pvp_guild_rank1571_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_recv_pvp_guild_rank1571_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_recv_pvp_guild_rank1571_ptr);
            using globalct_recv_reserved_schedulelist1573_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_recv_reserved_schedulelist1573_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_recv_reserved_schedulelist1573_ptr);
            using globalct_recv_total_guild_rank1575_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_recv_total_guild_rank1575_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_recv_total_guild_rank1575_ptr);
            using globalct_regen_gravitystone1577_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_regen_gravitystone1577_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_regen_gravitystone1577_ptr);
            using globalct_release_loot_free1579_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_release_loot_free1579_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_release_loot_free1579_ptr);
            using globalct_release_make_succ1581_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_release_make_succ1581_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_release_make_succ1581_ptr);
            using globalct_release_matchless1583_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_release_matchless1583_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_release_matchless1583_ptr);
            using globalct_release_never_die1585_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_release_never_die1585_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_release_never_die1585_ptr);
            using globalct_release_punishment1587_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_release_punishment1587_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_release_punishment1587_ptr);
            using globalct_remove_sf_delay1589_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_remove_sf_delay1589_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_remove_sf_delay1589_ptr);
            using globalct_report_cri_hp1591_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_report_cri_hp1591_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_report_cri_hp1591_ptr);
            using globalct_report_position1593_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_report_position1593_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_report_position1593_ptr);
            using globalct_request_delete_quest1595_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_request_delete_quest1595_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_request_delete_quest1595_ptr);
            using globalct_request_npc_quest1597_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_request_npc_quest1597_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_request_npc_quest1597_ptr);
            using globalct_respawn_start1599_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_respawn_start1599_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_respawn_start1599_ptr);
            using globalct_respawn_stop1601_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_respawn_stop1601_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_respawn_stop1601_ptr);
            using globalct_resurrect_player1603_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_resurrect_player1603_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_resurrect_player1603_ptr);
            using globalct_server_rate1605_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_server_rate1605_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_server_rate1605_ptr);
            using globalct_server_time1607_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_server_time1607_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_server_time1607_ptr);
            using globalct_set_animus_exp1609_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_set_animus_exp1609_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_set_animus_exp1609_ptr);
            using globalct_set_animus_lv1611_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_set_animus_lv1611_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_set_animus_lv1611_ptr);
            using globalct_set_damage_part1613_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_set_damage_part1613_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_set_damage_part1613_ptr);
            using globalct_set_exp_rate1615_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_set_exp_rate1615_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_set_exp_rate1615_ptr);
            using globalct_set_guildbattle_color1617_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_set_guildbattle_color1617_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_set_guildbattle_color1617_ptr);
            using globalct_set_hfs_full1619_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_set_hfs_full1619_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_set_hfs_full1619_ptr);
            using globalct_set_hp1621_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_set_hp1621_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_set_hp1621_ptr);
            using globalct_set_jade_effect1623_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_set_jade_effect1623_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_set_jade_effect1623_ptr);
            using globalct_set_kill_list_init1625_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_set_kill_list_init1625_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_set_kill_list_init1625_ptr);
            using globalct_set_loot_free1627_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_set_loot_free1627_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_set_loot_free1627_ptr);
            using globalct_set_make_succ1629_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_set_make_succ1629_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_set_make_succ1629_ptr);
            using globalct_set_matchless1631_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_set_matchless1631_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_set_matchless1631_ptr);
            using globalct_set_never_die1633_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_set_never_die1633_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_set_never_die1633_ptr);
            using globalct_set_ore_amount1635_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_set_ore_amount1635_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_set_ore_amount1635_ptr);
            using globalct_set_temp_cash_point1637_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_set_temp_cash_point1637_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_set_temp_cash_point1637_ptr);
            using globalct_sfmastery1639_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_sfmastery1639_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_sfmastery1639_ptr);
            using globalct_start_cri1641_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_start_cri1641_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_start_cri1641_ptr);
            using globalct_start_keeper1643_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_start_keeper1643_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_start_keeper1643_ptr);
            using globalct_take_gravitystone1645_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_take_gravitystone1645_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_take_gravitystone1645_ptr);
            using globalct_takeholymental1647_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_takeholymental1647_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_takeholymental1647_ptr);
            using globalct_telekinesis1649_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_telekinesis1649_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_telekinesis1649_ptr);
            using globalct_tl_info_set1651_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_tl_info_set1651_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_tl_info_set1651_ptr);
            using globalct_tl_info_view1653_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_tl_info_view1653_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_tl_info_view1653_ptr);
            using globalct_tl_system_setting1655_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_tl_system_setting1655_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_tl_system_setting1655_ptr);
            using globalct_tracing_hide1657_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_tracing_hide1657_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_tracing_hide1657_ptr);
            using globalct_tracing_show1659_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_tracing_show1659_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_tracing_show1659_ptr);
            using globalct_trap_attack_grade1661_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_trap_attack_grade1661_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_trap_attack_grade1661_ptr);
            using globalct_trunk_init1663_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_trunk_init1663_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_trunk_init1663_ptr);
            using globalct_up_allskill1665_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_up_allskill1665_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_up_allskill1665_ptr);
            using globalct_up_allskill_pt1667_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_up_allskill_pt1667_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_up_allskill_pt1667_ptr);
            using globalct_up_forceitem1669_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_up_forceitem1669_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_up_forceitem1669_ptr);
            using globalct_up_forcemastery1671_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_up_forcemastery1671_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_up_forcemastery1671_ptr);
            using globalct_up_skill1673_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_up_skill1673_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_up_skill1673_ptr);
            using globalct_user_num1675_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_user_num1675_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_user_num1675_ptr);
            using globalct_userchatban1677_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_userchatban1677_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_userchatban1677_ptr);
            using globalct_ut_cancel_regist1679_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_ut_cancel_regist1679_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_ut_cancel_regist1679_ptr);
            using globalct_ut_cancel_registlogout1681_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_ut_cancel_registlogout1681_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_ut_cancel_registlogout1681_ptr);
            using globalct_view_method1683_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_view_method1683_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_view_method1683_ptr);
            using globalct_vote_enable1685_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_vote_enable1685_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_vote_enable1685_ptr);
            using globalct_whoami1687_ptr = bool (WINAPIV*)(struct CPlayer*);
            using globalct_whoami1687_clbk = bool (WINAPIV*)(struct CPlayer*, globalct_whoami1687_ptr);
            using globalcvt_string1689_ptr = char* (WINAPIV*)(int);
            using globalcvt_string1689_clbk = char* (WINAPIV*)(int, globalcvt_string1689_ptr);
            using globaleAddCutOre1691_ptr = void (WINAPIV*)(int, char, int);
            using globaleAddCutOre1691_clbk = void (WINAPIV*)(int, char, int, globaleAddCutOre1691_ptr);
            using globaleAddDalant1693_ptr = void (WINAPIV*)(int, int);
            using globaleAddDalant1693_clbk = void (WINAPIV*)(int, int, globaleAddDalant1693_ptr);
            using globaleAddGold1695_ptr = void (WINAPIV*)(int, int);
            using globaleAddGold1695_clbk = void (WINAPIV*)(int, int, globaleAddGold1695_ptr);
            using globaleAddMineOre1697_ptr = void (WINAPIV*)(int, char, int);
            using globaleAddMineOre1697_clbk = void (WINAPIV*)(int, char, int, globaleAddMineOre1697_ptr);
            using globaleGetCutOre1699_ptr = long double (WINAPIV*)(int, char);
            using globaleGetCutOre1699_clbk = long double (WINAPIV*)(int, char, globaleGetCutOre1699_ptr);
            using globaleGetDalant1701_ptr = long double (WINAPIV*)(int);
            using globaleGetDalant1701_clbk = long double (WINAPIV*)(int, globaleGetDalant1701_ptr);
            using globaleGetGold1703_ptr = long double (WINAPIV*)(int);
            using globaleGetGold1703_clbk = long double (WINAPIV*)(int, globaleGetGold1703_ptr);
            using globaleGetGuide1705_ptr = uint16_t (WINAPIV*)(int);
            using globaleGetGuide1705_clbk = uint16_t (WINAPIV*)(int, globaleGetGuide1705_ptr);
            using globaleGetGuideHistory1707_ptr = struct _economy_history_data* (WINAPIV*)();
            using globaleGetGuideHistory1707_clbk = struct _economy_history_data* (WINAPIV*)(globaleGetGuideHistory1707_ptr);
            using globaleGetLocalDate1709_ptr = unsigned int (WINAPIV*)();
            using globaleGetLocalDate1709_clbk = unsigned int (WINAPIV*)(globaleGetLocalDate1709_ptr);
            using globaleGetMgrValue1711_ptr = int (WINAPIV*)();
            using globaleGetMgrValue1711_clbk = int (WINAPIV*)(globaleGetMgrValue1711_ptr);
            using globaleGetMineOre1713_ptr = long double (WINAPIV*)(int, char);
            using globaleGetMineOre1713_clbk = long double (WINAPIV*)(int, char, globaleGetMineOre1713_ptr);
            using globaleGetOldCutOre1715_ptr = long double (WINAPIV*)(int, char);
            using globaleGetOldCutOre1715_clbk = long double (WINAPIV*)(int, char, globaleGetOldCutOre1715_ptr);
            using globaleGetOldDalant1717_ptr = long double (WINAPIV*)(int);
            using globaleGetOldDalant1717_clbk = long double (WINAPIV*)(int, globaleGetOldDalant1717_ptr);
            using globaleGetOldGold1719_ptr = long double (WINAPIV*)(int);
            using globaleGetOldGold1719_clbk = long double (WINAPIV*)(int, globaleGetOldGold1719_ptr);
            using globaleGetOldMineOre1721_ptr = long double (WINAPIV*)(int, char);
            using globaleGetOldMineOre1721_clbk = long double (WINAPIV*)(int, char, globaleGetOldMineOre1721_ptr);
            using globaleGetOreRate1723_ptr = float (WINAPIV*)(int);
            using globaleGetOreRate1723_clbk = float (WINAPIV*)(int, globaleGetOreRate1723_ptr);
            using globaleGetRate1725_ptr = int (WINAPIV*)(int);
            using globaleGetRate1725_clbk = int (WINAPIV*)(int, globaleGetRate1725_ptr);
            using globaleGetTex1727_ptr = float (WINAPIV*)(int);
            using globaleGetTex1727_clbk = float (WINAPIV*)(int, globaleGetTex1727_ptr);
            using globaleGetTexRate1729_ptr = unsigned int (WINAPIV*)(int);
            using globaleGetTexRate1729_clbk = unsigned int (WINAPIV*)(int, globaleGetTexRate1729_ptr);
            using globaleInitEconomySystem1731_ptr = bool (WINAPIV*)(int, int, struct _economy_history_data*, int, struct _economy_history_data*);
            using globaleInitEconomySystem1731_clbk = bool (WINAPIV*)(int, int, struct _economy_history_data*, int, struct _economy_history_data*, globaleInitEconomySystem1731_ptr);
            using globaleUpdateEconomySystem1733_ptr = void (WINAPIV*)(bool*);
            using globaleUpdateEconomySystem1733_clbk = void (WINAPIV*)(bool*, globaleUpdateEconomySystem1733_ptr);
            using globalerror_fatal_printf1734_ptr = void (WINAPIV*)(char*, char*);
            using globalerror_fatal_printf1734_clbk = void (WINAPIV*)(char*, char*, globalerror_fatal_printf1734_ptr);
            using globalerror_malloc1735_ptr = void (WINAPIV*)(char*);
            using globalerror_malloc1735_clbk = void (WINAPIV*)(char*, globalerror_malloc1735_ptr);
            using globalexp1736_ptr = float (WINAPIV*)(float);
            using globalexp1736_clbk = float (WINAPIV*)(float, globalexp1736_ptr);
            using globalfabs1737_ptr = float (WINAPIV*)(float);
            using globalfabs1737_clbk = float (WINAPIV*)(float, globalfabs1737_ptr);
            using globalfopenMFM1738_ptr = struct _iobuf* (WINAPIV*)(char*, char*);
            using globalfopenMFM1738_clbk = struct _iobuf* (WINAPIV*)(char*, char*, globalfopenMFM1738_ptr);
            using globalisalnumstr1740_ptr = bool (WINAPIV*)(char*);
            using globalisalnumstr1740_clbk = bool (WINAPIV*)(char*, globalisalnumstr1740_ptr);
            using globalisalphastr1742_ptr = bool (WINAPIV*)(char*);
            using globalisalphastr1742_clbk = bool (WINAPIV*)(char*, globalisalphastr1742_ptr);
            using globalisdigitstr1744_ptr = bool (WINAPIV*)(char*);
            using globalisdigitstr1744_clbk = bool (WINAPIV*)(char*, globalisdigitstr1744_ptr);
            using globaljc_Contents1746_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globaljc_Contents1746_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globaljc_Contents1746_ptr);
            using globaljc_Count1748_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globaljc_Count1748_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globaljc_Count1748_ptr);
            using globaljc_Description1750_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globaljc_Description1750_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globaljc_Description1750_ptr);
            using globaljc_ReactContents1752_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globaljc_ReactContents1752_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globaljc_ReactContents1752_ptr);
            using globaljc_ReactType1754_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globaljc_ReactType1754_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globaljc_ReactType1754_ptr);
            using globaljc_Type1756_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globaljc_Type1756_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globaljc_Type1756_ptr);
            using globallog1757_ptr = float (WINAPIV*)(float);
            using globallog1757_clbk = float (WINAPIV*)(float, globallog1757_ptr);
            using globallua_my_open1759_ptr = lua_State* (WINAPIV*)();
            using globallua_my_open1759_clbk = lua_State* (WINAPIV*)(globallua_my_open1759_ptr);
            using globalmc_AddMonster1761_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalmc_AddMonster1761_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalmc_AddMonster1761_ptr);
            using globalmc_AddTime1763_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalmc_AddTime1763_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalmc_AddTime1763_ptr);
            using globalmc_Area1765_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalmc_Area1765_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalmc_Area1765_ptr);
            using globalmc_ChangeMonster1767_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalmc_ChangeMonster1767_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalmc_ChangeMonster1767_ptr);
            using globalmc_CompleteMsg1769_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalmc_CompleteMsg1769_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalmc_CompleteMsg1769_ptr);
            using globalmc_Description1771_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalmc_Description1771_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalmc_Description1771_ptr);
            using globalmc_GatePos1773_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalmc_GatePos1773_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalmc_GatePos1773_ptr);
            using globalmc_If1775_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalmc_If1775_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalmc_If1775_ptr);
            using globalmc_Inner1777_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalmc_Inner1777_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalmc_Inner1777_ptr);
            using globalmc_JobOrder1779_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalmc_JobOrder1779_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalmc_JobOrder1779_ptr);
            using globalmc_LimTimeSec1781_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalmc_LimTimeSec1781_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalmc_LimTimeSec1781_ptr);
            using globalmc_LootItem1783_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalmc_LootItem1783_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalmc_LootItem1783_ptr);
            using globalmc_RespawnMonster1785_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalmc_RespawnMonster1785_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalmc_RespawnMonster1785_ptr);
            using globalmc_RespawnMonsterOption1787_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalmc_RespawnMonsterOption1787_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalmc_RespawnMonsterOption1787_ptr);
            using globalmc_ResultContents1789_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalmc_ResultContents1789_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalmc_ResultContents1789_ptr);
            using globalmc_ResultType1791_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalmc_ResultType1791_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalmc_ResultType1791_ptr);
            using globalmc_StartPos1793_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalmc_StartPos1793_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalmc_StartPos1793_ptr);
            using globalmc_respond1795_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalmc_respond1795_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalmc_respond1795_ptr);
            using globalpow1814_ptr = long double (WINAPIV*)(long double, int);
            using globalpow1814_clbk = long double (WINAPIV*)(long double, int, globalpow1814_ptr);
            using globalpow1815_ptr = float (WINAPIV*)(float, float);
            using globalpow1815_clbk = float (WINAPIV*)(float, float, globalpow1815_ptr);
            using globalpow1817_ptr = float (WINAPIV*)(float, int);
            using globalpow1817_clbk = float (WINAPIV*)(float, int, globalpow1817_ptr);
            using globalqc_Dalant1819_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalqc_Dalant1819_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalqc_Dalant1819_ptr);
            using globalqc_Description1821_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalqc_Description1821_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalqc_Description1821_ptr);
            using globalqc_DummyBlock1823_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalqc_DummyBlock1823_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalqc_DummyBlock1823_ptr);
            using globalqc_LimitLvMax1825_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalqc_LimitLvMax1825_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalqc_LimitLvMax1825_ptr);
            using globalqc_LimitLvMin1827_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalqc_LimitLvMin1827_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalqc_LimitLvMin1827_ptr);
            using globalqc_MemberNum1829_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalqc_MemberNum1829_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalqc_MemberNum1829_ptr);
            using globalqc_MembershipParty1831_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalqc_MembershipParty1831_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalqc_MembershipParty1831_ptr);
            using globalqc_RewardExp1833_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalqc_RewardExp1833_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalqc_RewardExp1833_ptr);
            using globalqc_RewardItem1835_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalqc_RewardItem1835_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalqc_RewardItem1835_ptr);
            using globalqc_RewardPvp1837_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalqc_RewardPvp1837_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalqc_RewardPvp1837_ptr);
            using globalqc_StartMission1839_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalqc_StartMission1839_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalqc_StartMission1839_ptr);
            using globalqc_UseMap1841_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalqc_UseMap1841_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalqc_UseMap1841_ptr);
            using globalqc_monsterGroup1843_ptr = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*);
            using globalqc_monsterGroup1843_clbk = bool (WINAPIV*)(struct strFILE*, struct CDarkHoleDungeonQuestSetup*, char*, globalqc_monsterGroup1843_ptr);
            using globalsin1845_ptr = float (WINAPIV*)(float);
            using globalsin1845_clbk = float (WINAPIV*)(float, globalsin1845_ptr);
            using globalsprintf_s1847_ptr = int (WINAPIV*)(char**, char*);
            using globalsprintf_s1847_clbk = int (WINAPIV*)(char**, char*, globalsprintf_s1847_ptr);
            using globalsprintf_s1849_ptr = int (WINAPIV*)(char**, char*);
            using globalsprintf_s1849_clbk = int (WINAPIV*)(char**, char*, globalsprintf_s1849_ptr);
            using globalsprintf_s1851_ptr = int (WINAPIV*)(char**, char*);
            using globalsprintf_s1851_clbk = int (WINAPIV*)(char**, char*, globalsprintf_s1851_ptr);
            using globalsprintf_s1853_ptr = int (WINAPIV*)(char**, char*);
            using globalsprintf_s1853_clbk = int (WINAPIV*)(char**, char*, globalsprintf_s1853_ptr);
            using globalsprintf_s1855_ptr = int (WINAPIV*)(char**, char*);
            using globalsprintf_s1855_clbk = int (WINAPIV*)(char**, char*, globalsprintf_s1855_ptr);
            using globalsprintf_s1857_ptr = int (WINAPIV*)(char**, char*);
            using globalsprintf_s1857_clbk = int (WINAPIV*)(char**, char*, globalsprintf_s1857_ptr);
            using globalsprintf_s1859_ptr = int (WINAPIV*)(char**, char*);
            using globalsprintf_s1859_clbk = int (WINAPIV*)(char**, char*, globalsprintf_s1859_ptr);
            using globalsprintf_s1861_ptr = int (WINAPIV*)(char**, char*);
            using globalsprintf_s1861_clbk = int (WINAPIV*)(char**, char*, globalsprintf_s1861_ptr);
            using globalsprintf_s1863_ptr = int (WINAPIV*)(char**, char*);
            using globalsprintf_s1863_clbk = int (WINAPIV*)(char**, char*, globalsprintf_s1863_ptr);
            using globalsprintf_s1865_ptr = int (WINAPIV*)(char**, char*);
            using globalsprintf_s1865_clbk = int (WINAPIV*)(char**, char*, globalsprintf_s1865_ptr);
            using globalsprintf_s1867_ptr = int (WINAPIV*)(char**, char*);
            using globalsprintf_s1867_clbk = int (WINAPIV*)(char**, char*, globalsprintf_s1867_ptr);
            using globalsprintf_s1869_ptr = int (WINAPIV*)(char**, char*);
            using globalsprintf_s1869_clbk = int (WINAPIV*)(char**, char*, globalsprintf_s1869_ptr);
            using globalsprintf_s1871_ptr = int (WINAPIV*)(char**, char*);
            using globalsprintf_s1871_clbk = int (WINAPIV*)(char**, char*, globalsprintf_s1871_ptr);
            using globalsprintf_s1873_ptr = int (WINAPIV*)(char**, char*);
            using globalsprintf_s1873_clbk = int (WINAPIV*)(char**, char*, globalsprintf_s1873_ptr);
            using globalsprintf_s1875_ptr = int (WINAPIV*)(char**, char*);
            using globalsprintf_s1875_clbk = int (WINAPIV*)(char**, char*, globalsprintf_s1875_ptr);
            using globalsprintf_s1877_ptr = int (WINAPIV*)(char**, char*);
            using globalsprintf_s1877_clbk = int (WINAPIV*)(char**, char*, globalsprintf_s1877_ptr);
            using globalsprintf_s1879_ptr = int (WINAPIV*)(char**, char*);
            using globalsprintf_s1879_clbk = int (WINAPIV*)(char**, char*, globalsprintf_s1879_ptr);
            using globalsqrt1881_ptr = float (WINAPIV*)(float);
            using globalsqrt1881_clbk = float (WINAPIV*)(float, globalsqrt1881_ptr);
            using globalstrcat_s1883_ptr = int (WINAPIV*)(char**, char*);
            using globalstrcat_s1883_clbk = int (WINAPIV*)(char**, char*, globalstrcat_s1883_ptr);
            using globalstrcat_s1885_ptr = int (WINAPIV*)(char**, char*);
            using globalstrcat_s1885_clbk = int (WINAPIV*)(char**, char*, globalstrcat_s1885_ptr);
            using globalstrcat_s1887_ptr = int (WINAPIV*)(char**, char*);
            using globalstrcat_s1887_clbk = int (WINAPIV*)(char**, char*, globalstrcat_s1887_ptr);
            using globalstrchr1889_ptr = char* (WINAPIV*)(char*, int);
            using globalstrchr1889_clbk = char* (WINAPIV*)(char*, int, globalstrchr1889_ptr);
            using globalstrcpy_s1891_ptr = int (WINAPIV*)(char**, char*);
            using globalstrcpy_s1891_clbk = int (WINAPIV*)(char**, char*, globalstrcpy_s1891_ptr);
            using globalstrcpy_s1893_ptr = int (WINAPIV*)(char**, char*);
            using globalstrcpy_s1893_clbk = int (WINAPIV*)(char**, char*, globalstrcpy_s1893_ptr);
            using globalstrcpy_s1895_ptr = int (WINAPIV*)(char**, char*);
            using globalstrcpy_s1895_clbk = int (WINAPIV*)(char**, char*, globalstrcpy_s1895_ptr);
            using globalstrcpy_s1897_ptr = int (WINAPIV*)(char**, char*);
            using globalstrcpy_s1897_clbk = int (WINAPIV*)(char**, char*, globalstrcpy_s1897_ptr);
            using globalstrcpy_s1899_ptr = int (WINAPIV*)(char**, char*);
            using globalstrcpy_s1899_clbk = int (WINAPIV*)(char**, char*, globalstrcpy_s1899_ptr);
            using globalstrcpy_s1901_ptr = int (WINAPIV*)(char**, char*);
            using globalstrcpy_s1901_clbk = int (WINAPIV*)(char**, char*, globalstrcpy_s1901_ptr);
            using globalstrcpy_s1903_ptr = int (WINAPIV*)(char**, char*);
            using globalstrcpy_s1903_clbk = int (WINAPIV*)(char**, char*, globalstrcpy_s1903_ptr);
            using globalstrncpy_s1905_ptr = int (WINAPIV*)(char**, char*, uint64_t);
            using globalstrncpy_s1905_clbk = int (WINAPIV*)(char**, char*, uint64_t, globalstrncpy_s1905_ptr);
            using globalstrncpy_s1907_ptr = int (WINAPIV*)(char**, char*, uint64_t);
            using globalstrncpy_s1907_clbk = int (WINAPIV*)(char**, char*, uint64_t, globalstrncpy_s1907_ptr);
            using globalstrrchr1908_ptr = char* (WINAPIV*)(char*, int);
            using globalstrrchr1908_clbk = char* (WINAPIV*)(char*, int, globalstrrchr1908_ptr);
            using globalstrstr1910_ptr = char* (WINAPIV*)(char*, char*);
            using globalstrstr1910_clbk = char* (WINAPIV*)(char*, char*, globalstrstr1910_ptr);
            using globalswprintf1912_ptr = int (WINAPIV*)(wchar_t*, wchar_t*);
            using globalswprintf1912_clbk = int (WINAPIV*)(wchar_t*, wchar_t*, globalswprintf1912_ptr);
            using globaltan1913_ptr = float (WINAPIV*)(float);
            using globaltan1913_clbk = float (WINAPIV*)(float, globaltan1913_ptr);
            using globalterminate1914_ptr = void (WINAPIV*)();
            using globalterminate1914_clbk = void (WINAPIV*)(globalterminate1914_ptr);
            using globalwa_EnterWorld1916_ptr = void (WINAPIV*)(struct _WA_AVATOR_CODE*, uint16_t);
            using globalwa_EnterWorld1916_clbk = void (WINAPIV*)(struct _WA_AVATOR_CODE*, uint16_t, globalwa_EnterWorld1916_ptr);
            using globalwa_ExitWorld1918_ptr = void (WINAPIV*)(struct _CLID*);
            using globalwa_ExitWorld1918_clbk = void (WINAPIV*)(struct _CLID*, globalwa_ExitWorld1918_ptr);
            using globalwa_PartyDisjoint1920_ptr = void (WINAPIV*)(struct _CLID*);
            using globalwa_PartyDisjoint1920_clbk = void (WINAPIV*)(struct _CLID*, globalwa_PartyDisjoint1920_ptr);
            using globalwa_PartyForceLeave1922_ptr = void (WINAPIV*)(struct _CLID*, struct _CLID*);
            using globalwa_PartyForceLeave1922_clbk = void (WINAPIV*)(struct _CLID*, struct _CLID*, globalwa_PartyForceLeave1922_ptr);
            using globalwa_PartyJoin1924_ptr = void (WINAPIV*)(struct _CLID*, struct _CLID*);
            using globalwa_PartyJoin1924_clbk = void (WINAPIV*)(struct _CLID*, struct _CLID*, globalwa_PartyJoin1924_ptr);
            using globalwa_PartyLock1926_ptr = void (WINAPIV*)(struct _CLID*, bool);
            using globalwa_PartyLock1926_clbk = void (WINAPIV*)(struct _CLID*, bool, globalwa_PartyLock1926_ptr);
            using globalwa_PartyLootShareSystem1928_ptr = void (WINAPIV*)(struct _CLID*, char);
            using globalwa_PartyLootShareSystem1928_clbk = void (WINAPIV*)(struct _CLID*, char, globalwa_PartyLootShareSystem1928_ptr);
            using globalwa_PartySelfLeave1930_ptr = void (WINAPIV*)(struct _CLID*);
            using globalwa_PartySelfLeave1930_clbk = void (WINAPIV*)(struct _CLID*, globalwa_PartySelfLeave1930_ptr);
            using globalwa_PartySuccession1932_ptr = void (WINAPIV*)(struct _CLID*, struct _CLID*);
            using globalwa_PartySuccession1932_clbk = void (WINAPIV*)(struct _CLID*, struct _CLID*, globalwa_PartySuccession1932_ptr);
            using globalwcsstr1934_ptr = wchar_t* (WINAPIV*)(wchar_t*, wchar_t*);
            using globalwcsstr1934_clbk = wchar_t* (WINAPIV*)(wchar_t*, wchar_t*, globalwcsstr1934_ptr);
            
        }; // end namespace info
    }; // end namespace global
END_ATF_NAMESPACE
