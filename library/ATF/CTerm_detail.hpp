// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CTerm_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::CTermctor_CTerm2_ptr CTermctor_CTerm2_next(nullptr);
        static info::CTermctor_CTerm2_clbk CTermctor_CTerm2_user(nullptr);
        static info::CTermGetTerm4_ptr CTermGetTerm4_next(nullptr);
        static info::CTermGetTerm4_clbk CTermGetTerm4_user(nullptr);
        
        static void CTermctor_CTerm2_wrapper(struct CTerm* _this)
        {
           CTermctor_CTerm2_user(_this, CTermctor_CTerm2_next);
        };
        static unsigned int CTermGetTerm4_wrapper(struct CTerm* _this)
        {
           return CTermGetTerm4_user(_this, CTermGetTerm4_next);
        };
        
        static hook_record CTerm_functions[] = {
        {   (LPVOID)0x1404390a0L,
            (LPVOID *)&CTermctor_CTerm2_user,
            (LPVOID *)&CTermctor_CTerm2_next,
            (LPVOID)cast_pointer_function(CTermctor_CTerm2_wrapper),
            (LPVOID)cast_pointer_function((void(CTerm::*)())&CTerm::ctor_CTerm) },
        {   (LPVOID)0x1404390f0L,
            (LPVOID *)&CTermGetTerm4_user,
            (LPVOID *)&CTermGetTerm4_next,
            (LPVOID)cast_pointer_function(CTermGetTerm4_wrapper),
            (LPVOID)cast_pointer_function((unsigned int(CTerm::*)())&CTerm::GetTerm) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
