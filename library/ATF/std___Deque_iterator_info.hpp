// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "std___Deque_iterator.hpp"


START_ATF_NAMESPACE
    namespace std
    {
        namespace info
        {
            using std___Deque_iteratorctor__Deque_iterator2_ptr = void (WINAPIV*)(struct std::_Deque_iterator<RECV_DATA,std::allocator<RECV_DATA>,0>*, struct std::_Deque_iterator<RECV_DATA,std::allocator<RECV_DATA>,0>*);
            using std___Deque_iteratorctor__Deque_iterator2_clbk = void (WINAPIV*)(struct std::_Deque_iterator<RECV_DATA,std::allocator<RECV_DATA>,0>*, struct std::_Deque_iterator<RECV_DATA,std::allocator<RECV_DATA>,0>*, std___Deque_iteratorctor__Deque_iterator2_ptr);
            using std___Deque_iteratorctor__Deque_iterator4_ptr = void (WINAPIV*)(struct std::_Deque_iterator<RECV_DATA,std::allocator<RECV_DATA>,0>*, uint64_t, struct std::_Container_base*);
            using std___Deque_iteratorctor__Deque_iterator4_clbk = void (WINAPIV*)(struct std::_Deque_iterator<RECV_DATA,std::allocator<RECV_DATA>,0>*, uint64_t, struct std::_Container_base*, std___Deque_iteratorctor__Deque_iterator4_ptr);
            using std___Deque_iteratordtor__Deque_iterator20_ptr = void (WINAPIV*)(struct std::_Deque_iterator<RECV_DATA,std::allocator<RECV_DATA>,0>*);
            using std___Deque_iteratordtor__Deque_iterator20_clbk = void (WINAPIV*)(struct std::_Deque_iterator<RECV_DATA,std::allocator<RECV_DATA>,0>*, std___Deque_iteratordtor__Deque_iterator20_ptr);
            
        }; // end namespace info
    }; // end namespace std
END_ATF_NAMESPACE
