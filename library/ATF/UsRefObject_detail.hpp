// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "UsRefObject_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::UsRefObjectDecRefCount2_ptr UsRefObjectDecRefCount2_next(nullptr);
        info::UsRefObjectDecRefCount2_clbk UsRefObjectDecRefCount2_user(nullptr);
        info::UsRefObjectIncRefCount4_ptr UsRefObjectIncRefCount4_next(nullptr);
        info::UsRefObjectIncRefCount4_clbk UsRefObjectIncRefCount4_user(nullptr);
        info::UsRefObjectctor_UsRefObject6_ptr UsRefObjectctor_UsRefObject6_next(nullptr);
        info::UsRefObjectctor_UsRefObject6_clbk UsRefObjectctor_UsRefObject6_user(nullptr);
        info::UsRefObjectdtor_UsRefObject11_ptr UsRefObjectdtor_UsRefObject11_next(nullptr);
        info::UsRefObjectdtor_UsRefObject11_clbk UsRefObjectdtor_UsRefObject11_user(nullptr);
        
        void UsRefObjectDecRefCount2_wrapper(struct UsRefObject* _this)
        {
           UsRefObjectDecRefCount2_user(_this, UsRefObjectDecRefCount2_next);
        };
        void UsRefObjectIncRefCount4_wrapper(struct UsRefObject* _this)
        {
           UsRefObjectIncRefCount4_user(_this, UsRefObjectIncRefCount4_next);
        };
        void UsRefObjectctor_UsRefObject6_wrapper(struct UsRefObject* _this)
        {
           UsRefObjectctor_UsRefObject6_user(_this, UsRefObjectctor_UsRefObject6_next);
        };
        void UsRefObjectdtor_UsRefObject11_wrapper(struct UsRefObject* _this)
        {
           UsRefObjectdtor_UsRefObject11_user(_this, UsRefObjectdtor_UsRefObject11_next);
        };
        
        hook_record UsRefObject_functions[] = {
        {   (LPVOID)0x14014cd40L,
            (LPVOID *)&UsRefObjectDecRefCount2_user,
            (LPVOID *)&UsRefObjectDecRefCount2_next,
            (LPVOID)cast_pointer_function(UsRefObjectDecRefCount2_wrapper),
            (LPVOID)cast_pointer_function((void(UsRefObject::*)())&UsRefObject::DecRefCount) },
        {   (LPVOID)0x14014cc40L,
            (LPVOID *)&UsRefObjectIncRefCount4_user,
            (LPVOID *)&UsRefObjectIncRefCount4_next,
            (LPVOID)cast_pointer_function(UsRefObjectIncRefCount4_wrapper),
            (LPVOID)cast_pointer_function((void(UsRefObject::*)())&UsRefObject::IncRefCount) },
        {   (LPVOID)0x1401633f0L,
            (LPVOID *)&UsRefObjectctor_UsRefObject6_user,
            (LPVOID *)&UsRefObjectctor_UsRefObject6_next,
            (LPVOID)cast_pointer_function(UsRefObjectctor_UsRefObject6_wrapper),
            (LPVOID)cast_pointer_function((void(UsRefObject::*)())&UsRefObject::ctor_UsRefObject) },
        {   (LPVOID)0x1401634b0L,
            (LPVOID *)&UsRefObjectdtor_UsRefObject11_user,
            (LPVOID *)&UsRefObjectdtor_UsRefObject11_next,
            (LPVOID)cast_pointer_function(UsRefObjectdtor_UsRefObject11_wrapper),
            (LPVOID)cast_pointer_function((void(UsRefObject::*)())&UsRefObject::dtor_UsRefObject) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
