// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_MULTI_BLOCK_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::_MULTI_BLOCKctor__MULTI_BLOCK2_ptr _MULTI_BLOCKctor__MULTI_BLOCK2_next(nullptr);
        static info::_MULTI_BLOCKctor__MULTI_BLOCK2_clbk _MULTI_BLOCKctor__MULTI_BLOCK2_user(nullptr);
        static info::_MULTI_BLOCKdtor__MULTI_BLOCK6_ptr _MULTI_BLOCKdtor__MULTI_BLOCK6_next(nullptr);
        static info::_MULTI_BLOCKdtor__MULTI_BLOCK6_clbk _MULTI_BLOCKdtor__MULTI_BLOCK6_user(nullptr);
        
        static void _MULTI_BLOCKctor__MULTI_BLOCK2_wrapper(struct _MULTI_BLOCK* _this)
        {
           _MULTI_BLOCKctor__MULTI_BLOCK2_user(_this, _MULTI_BLOCKctor__MULTI_BLOCK2_next);
        };
        static void _MULTI_BLOCKdtor__MULTI_BLOCK6_wrapper(struct _MULTI_BLOCK* _this)
        {
           _MULTI_BLOCKdtor__MULTI_BLOCK6_user(_this, _MULTI_BLOCKdtor__MULTI_BLOCK6_next);
        };
        
        static hook_record _MULTI_BLOCK_functions[] = {
        {   (LPVOID)0x1401887b0L,
            (LPVOID *)&_MULTI_BLOCKctor__MULTI_BLOCK2_user,
            (LPVOID *)&_MULTI_BLOCKctor__MULTI_BLOCK2_next,
            (LPVOID)cast_pointer_function(_MULTI_BLOCKctor__MULTI_BLOCK2_wrapper),
            (LPVOID)cast_pointer_function((void(_MULTI_BLOCK::*)())&_MULTI_BLOCK::ctor__MULTI_BLOCK) },
        {   (LPVOID)0x140188590L,
            (LPVOID *)&_MULTI_BLOCKdtor__MULTI_BLOCK6_user,
            (LPVOID *)&_MULTI_BLOCKdtor__MULTI_BLOCK6_next,
            (LPVOID)cast_pointer_function(_MULTI_BLOCKdtor__MULTI_BLOCK6_wrapper),
            (LPVOID)cast_pointer_function((void(_MULTI_BLOCK::*)())&_MULTI_BLOCK::dtor__MULTI_BLOCK) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
