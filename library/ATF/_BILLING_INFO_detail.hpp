// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_BILLING_INFO_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::_BILLING_INFOIsPcBangType2_ptr _BILLING_INFOIsPcBangType2_next(nullptr);
        static info::_BILLING_INFOIsPcBangType2_clbk _BILLING_INFOIsPcBangType2_user(nullptr);
        static info::_BILLING_INFOctor__BILLING_INFO4_ptr _BILLING_INFOctor__BILLING_INFO4_next(nullptr);
        static info::_BILLING_INFOctor__BILLING_INFO4_clbk _BILLING_INFOctor__BILLING_INFO4_user(nullptr);
        
        static bool _BILLING_INFOIsPcBangType2_wrapper(struct _BILLING_INFO* _this)
        {
           return _BILLING_INFOIsPcBangType2_user(_this, _BILLING_INFOIsPcBangType2_next);
        };
        static void _BILLING_INFOctor__BILLING_INFO4_wrapper(struct _BILLING_INFO* _this)
        {
           _BILLING_INFOctor__BILLING_INFO4_user(_this, _BILLING_INFOctor__BILLING_INFO4_next);
        };
        
        static hook_record _BILLING_INFO_functions[] = {
        {   (LPVOID)0x1400d3c50L,
            (LPVOID *)&_BILLING_INFOIsPcBangType2_user,
            (LPVOID *)&_BILLING_INFOIsPcBangType2_next,
            (LPVOID)cast_pointer_function(_BILLING_INFOIsPcBangType2_wrapper),
            (LPVOID)cast_pointer_function((bool(_BILLING_INFO::*)())&_BILLING_INFO::IsPcBangType) },
        {   (LPVOID)0x14011f000L,
            (LPVOID *)&_BILLING_INFOctor__BILLING_INFO4_user,
            (LPVOID *)&_BILLING_INFOctor__BILLING_INFO4_next,
            (LPVOID)cast_pointer_function(_BILLING_INFOctor__BILLING_INFO4_wrapper),
            (LPVOID)cast_pointer_function((void(_BILLING_INFO::*)())&_BILLING_INFO::ctor__BILLING_INFO) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
