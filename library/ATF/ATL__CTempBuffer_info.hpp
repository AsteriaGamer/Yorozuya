// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "ATL__CTempBuffer.hpp"


START_ATF_NAMESPACE
    namespace ATL
    {
        namespace info
        {
            using ATL__CTempBufferAllocate2_ptr = char* (WINAPIV*)(struct ATL::CTempBuffer<char,128,ATL::CCRTAllocator>*, uint64_t);
            using ATL__CTempBufferAllocate2_clbk = char* (WINAPIV*)(struct ATL::CTempBuffer<char,128,ATL::CCRTAllocator>*, uint64_t, ATL__CTempBufferAllocate2_ptr);
            using ATL__CTempBufferAllocateBytes4_ptr = char* (WINAPIV*)(struct ATL::CTempBuffer<char,128,ATL::CCRTAllocator>*, uint64_t);
            using ATL__CTempBufferAllocateBytes4_clbk = char* (WINAPIV*)(struct ATL::CTempBuffer<char,128,ATL::CCRTAllocator>*, uint64_t, ATL__CTempBufferAllocateBytes4_ptr);
            using ATL__CTempBufferAllocateHeap6_ptr = void (WINAPIV*)(struct ATL::CTempBuffer<char,128,ATL::CCRTAllocator>*, uint64_t);
            using ATL__CTempBufferAllocateHeap6_clbk = void (WINAPIV*)(struct ATL::CTempBuffer<char,128,ATL::CCRTAllocator>*, uint64_t, ATL__CTempBufferAllocateHeap6_ptr);
            using ATL__CTempBufferctor_CTempBuffer8_ptr = void (WINAPIV*)(struct ATL::CTempBuffer<char,128,ATL::CCRTAllocator>*);
            using ATL__CTempBufferctor_CTempBuffer8_clbk = void (WINAPIV*)(struct ATL::CTempBuffer<char,128,ATL::CCRTAllocator>*, ATL__CTempBufferctor_CTempBuffer8_ptr);
            using ATL__CTempBufferFreeHeap10_ptr = void (WINAPIV*)(struct ATL::CTempBuffer<char,128,ATL::CCRTAllocator>*);
            using ATL__CTempBufferFreeHeap10_clbk = void (WINAPIV*)(struct ATL::CTempBuffer<char,128,ATL::CCRTAllocator>*, ATL__CTempBufferFreeHeap10_ptr);
            using ATL__CTempBufferdtor_CTempBuffer14_ptr = void (WINAPIV*)(struct ATL::CTempBuffer<char,128,ATL::CCRTAllocator>*);
            using ATL__CTempBufferdtor_CTempBuffer14_clbk = void (WINAPIV*)(struct ATL::CTempBuffer<char,128,ATL::CCRTAllocator>*, ATL__CTempBufferdtor_CTempBuffer14_ptr);
            
        }; // end namespace info
    }; // end namespace ATL
END_ATF_NAMESPACE
