// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "ATL__CTimeSpan.hpp"
#include "GUILD_BATTLE__CGuildBattle.hpp"
#include "GUILD_BATTLE__CNormalGuildBattle.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleState.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleStateRoundList.hpp"


START_ATF_NAMESPACE
    namespace GUILD_BATTLE
    {
        struct  CNormalGuildBattleStateInBattle : CNormalGuildBattleState
        {
            ATL::CTimeSpan m_kInBattleTime;
            CNormalGuildBattleStateRoundList m_kRountStateList;
        public:
            bool AdvanceRegenState()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleStateInBattle*);
                return (org_ptr(0x1403eb290L))(this);
            };
            CNormalGuildBattleStateInBattle()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleStateInBattle*);
                (org_ptr(0x1403f0950L))(this);
            };
            void ctor_CNormalGuildBattleStateInBattle()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleStateInBattle*);
                (org_ptr(0x1403f0950L))(this);
            };
            int Enter(struct CNormalGuildBattle* pkBattle)
            {
                using org_ptr = int (WINAPIV*)(struct CNormalGuildBattleStateInBattle*, struct CNormalGuildBattle*);
                return (org_ptr(0x1403f0a00L))(this, pkBattle);
            };
            int Fin(struct CNormalGuildBattle* pkBattle)
            {
                using org_ptr = int (WINAPIV*)(struct CNormalGuildBattleStateInBattle*, struct CNormalGuildBattle*);
                return (org_ptr(0x1403f0b50L))(this, pkBattle);
            };
            struct ATL::CTimeSpan* GetTerm(struct ATL::CTimeSpan* result)
            {
                using org_ptr = struct ATL::CTimeSpan* (WINAPIV*)(struct CNormalGuildBattleStateInBattle*, struct ATL::CTimeSpan*);
                return (org_ptr(0x1400800d0L))(this, result);
            };
            bool IsInBattleRegenState()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleStateInBattle*);
                return (org_ptr(0x1403d9570L))(this);
            };
            int Loop(struct CGuildBattle* pkBattle)
            {
                using org_ptr = int (WINAPIV*)(struct CNormalGuildBattleStateInBattle*, struct CGuildBattle*);
                return (org_ptr(0x140080070L))(this, pkBattle);
            };
            void SetBattleTime(struct ATL::CTimeSpan kTime)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleStateInBattle*, struct ATL::CTimeSpan);
                (org_ptr(0x1403d90d0L))(this, kTime);
            };
            bool SetGotoRegenState()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattleStateInBattle*);
                return (org_ptr(0x1403f3300L))(this);
            };
            ~CNormalGuildBattleStateInBattle()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleStateInBattle*);
                (org_ptr(0x14007fe30L))(this);
            };
            void dtor_CNormalGuildBattleStateInBattle()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattleStateInBattle*);
                (org_ptr(0x14007fe30L))(this);
            };
        };
    }; // end namespace GUILD_BATTLE
END_ATF_NAMESPACE
