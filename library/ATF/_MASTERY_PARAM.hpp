// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CRecordData.hpp"
#include "_STAT_DB_BASE.hpp"
#include "_mastery_up_data.hpp"
#include "_skill_lv_up_data.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 8)
    struct _MASTERY_PARAM
    {
        char m_byRaceCode;
         _STAT_DB_BASE m_BaseCum;
        unsigned int m_dwSkillMasteryCum[8];
        unsigned int m_dwForceLvCum[4];
        char m_mtyWp[2];
        char m_mtySuffer;
        char m_mtyShield;
        char m_lvSkill[48];
        char m_mtySkill[8];
        char m_mtyForce[24];
        char m_mtyStaff;
        char m_mtyMakeItem[3];
        char m_mtySpecial;
        unsigned int *m_ppdwMasteryCumPtr[7];
        char *m_ppbyMasteryPtr[7];
        char *m_ppbyEquipMasteryPrt[6];
        _mastery_up_data m_MastUpData;
        _skill_lv_up_data m_SkillUpData;
        bool m_bUpdateEquipMast;
    public:
        bool AlterCumPerMast(char byClass, char byIndex, unsigned int dwAlterCum, unsigned int* pdwAfterCum)
        {
            using org_ptr = bool (WINAPIV*)(struct _MASTERY_PARAM*, char, char, unsigned int, unsigned int*);
            return (org_ptr(0x14007c770L))(this, byClass, byIndex, dwAlterCum, pdwAfterCum);
        };
        float GetAveForceMasteryPerClass(char byClass)
        {
            using org_ptr = float (WINAPIV*)(struct _MASTERY_PARAM*, char);
            return (org_ptr(0x14007d6f0L))(this, byClass);
        };
        float GetAveSkillMasteryPerClass(char byClass)
        {
            using org_ptr = float (WINAPIV*)(struct _MASTERY_PARAM*, char);
            return (org_ptr(0x14007d7a0L))(this, byClass);
        };
        int GetCumPerMast(char byCode, char byMast)
        {
            using org_ptr = int (WINAPIV*)(struct _MASTERY_PARAM*, char, char);
            return (org_ptr(0x1400349f0L))(this, byCode, byMast);
        };
        char GetEquipMastery(int nEquipMasteryCode)
        {
            using org_ptr = char (WINAPIV*)(struct _MASTERY_PARAM*, int);
            return (org_ptr(0x14007c510L))(this, nEquipMasteryCode);
        };
        int GetMasteryPerMast(char byCode, char byMast)
        {
            using org_ptr = int (WINAPIV*)(struct _MASTERY_PARAM*, char, char);
            return (org_ptr(0x140034a30L))(this, byCode, byMast);
        };
        int GetSkillLv(char bySkillIndex)
        {
            using org_ptr = int (WINAPIV*)(struct _MASTERY_PARAM*, char);
            return (org_ptr(0x140034a70L))(this, bySkillIndex);
        };
        bool Init(struct _STAT_DB_BASE* pStatBase, char byRaceCode)
        {
            using org_ptr = bool (WINAPIV*)(struct _MASTERY_PARAM*, struct _STAT_DB_BASE*, char);
            return (org_ptr(0x1400781d0L))(this, pStatBase, byRaceCode);
        };
        static bool IsValidMasteryCode(char byCode, char byIndex)
        {
            using org_ptr = bool (WINAPIV*)(char, char);
            return (org_ptr(0x14028c930L))(byCode, byIndex);
        };
        static void SetStaticMember(struct CRecordData* pSkillData, struct CRecordData* pForceData)
        {
            using org_ptr = void (WINAPIV*)(struct CRecordData*, struct CRecordData*);
            (org_ptr(0x140204dd0L))(pSkillData, pForceData);
        };
        void UpdateCumPerMast(char byClass, char byIndex, unsigned int dwNewCum)
        {
            using org_ptr = void (WINAPIV*)(struct _MASTERY_PARAM*, char, char, unsigned int);
            (org_ptr(0x14007afa0L))(this, byClass, byIndex, dwNewCum);
        };
        _MASTERY_PARAM()
        {
            using org_ptr = void (WINAPIV*)(struct _MASTERY_PARAM*);
            (org_ptr(0x140074580L))(this);
        };
        void ctor__MASTERY_PARAM()
        {
            using org_ptr = void (WINAPIV*)(struct _MASTERY_PARAM*);
            (org_ptr(0x140074580L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
