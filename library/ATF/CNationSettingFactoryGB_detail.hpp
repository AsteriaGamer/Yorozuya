// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CNationSettingFactoryGB_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::CNationSettingFactoryGBctor_CNationSettingFactoryGB2_ptr CNationSettingFactoryGBctor_CNationSettingFactoryGB2_next(nullptr);
        info::CNationSettingFactoryGBctor_CNationSettingFactoryGB2_clbk CNationSettingFactoryGBctor_CNationSettingFactoryGB2_user(nullptr);
        info::CNationSettingFactoryGBCreate4_ptr CNationSettingFactoryGBCreate4_next(nullptr);
        info::CNationSettingFactoryGBCreate4_clbk CNationSettingFactoryGBCreate4_user(nullptr);
        
        void CNationSettingFactoryGBctor_CNationSettingFactoryGB2_wrapper(struct CNationSettingFactoryGB* _this)
        {
           CNationSettingFactoryGBctor_CNationSettingFactoryGB2_user(_this, CNationSettingFactoryGBctor_CNationSettingFactoryGB2_next);
        };
        struct CNationSettingData* CNationSettingFactoryGBCreate4_wrapper(struct CNationSettingFactoryGB* _this, int iNationCode, char* szNationCodeStr, bool bServiceMode)
        {
           return CNationSettingFactoryGBCreate4_user(_this, iNationCode, szNationCodeStr, bServiceMode, CNationSettingFactoryGBCreate4_next);
        };
        
        hook_record CNationSettingFactoryGB_functions[] = {
        {   (LPVOID)0x140219520L,
            (LPVOID *)&CNationSettingFactoryGBctor_CNationSettingFactoryGB2_user,
            (LPVOID *)&CNationSettingFactoryGBctor_CNationSettingFactoryGB2_next,
            (LPVOID)cast_pointer_function(CNationSettingFactoryGBctor_CNationSettingFactoryGB2_wrapper),
            (LPVOID)cast_pointer_function((void(CNationSettingFactoryGB::*)())&CNationSettingFactoryGB::ctor_CNationSettingFactoryGB) },
        {   (LPVOID)0x14022bc60L,
            (LPVOID *)&CNationSettingFactoryGBCreate4_user,
            (LPVOID *)&CNationSettingFactoryGBCreate4_next,
            (LPVOID)cast_pointer_function(CNationSettingFactoryGBCreate4_wrapper),
            (LPVOID)cast_pointer_function((struct CNationSettingData*(CNationSettingFactoryGB::*)(int, char*, bool))&CNationSettingFactoryGB::Create) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
