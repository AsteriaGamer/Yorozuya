// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"


START_ATF_NAMESPACE
    namespace GUILD_BATTLE
    {
        struct  CGuildBattleScheduler
        {
        public:
            CGuildBattleScheduler()
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleScheduler*);
                (org_ptr(0x1403deda0L))(this);
            };
            void ctor_CGuildBattleScheduler()
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleScheduler*);
                (org_ptr(0x1403deda0L))(this);
            };
            static void Destroy()
            {
                using org_ptr = void (WINAPIV*)();
                (org_ptr(0x1403dd7c0L))();
            };
            bool Init()
            {
                using org_ptr = bool (WINAPIV*)(struct CGuildBattleScheduler*);
                return (org_ptr(0x1403dd840L))(this);
            };
            static struct CGuildBattleScheduler* Instance()
            {
                using org_ptr = struct CGuildBattleScheduler* (WINAPIV*)();
                return (org_ptr(0x1403dd700L))();
            };
            bool UpdateClearGuildBattleScheduleDayInfo(unsigned int dwStartSLID, unsigned int dwEndSLID)
            {
                using org_ptr = bool (WINAPIV*)(struct CGuildBattleScheduler*, unsigned int, unsigned int);
                return (org_ptr(0x1403dd8b0L))(this, dwStartSLID, dwEndSLID);
            };
            ~CGuildBattleScheduler()
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleScheduler*);
                (org_ptr(0x1403dee20L))(this);
            };
            void dtor_CGuildBattleScheduler()
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleScheduler*);
                (org_ptr(0x1403dee20L))(this);
            };
        };
    }; // end namespace GUILD_BATTLE
END_ATF_NAMESPACE
