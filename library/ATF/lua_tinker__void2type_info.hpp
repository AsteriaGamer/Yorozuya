// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "lua_tinker__void2type.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__void2typeinvoke2_ptr = struct lua_tinker::var_base* (WINAPIV*)(struct lua_tinker::void2type<lua_tinker::var_base *>*, void*);
            using lua_tinker__void2typeinvoke2_clbk = struct lua_tinker::var_base* (WINAPIV*)(struct lua_tinker::void2type<lua_tinker::var_base *>*, void*, lua_tinker__void2typeinvoke2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__void2type.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__void2typeinvoke2_ptr = struct CLuaSignalReActor* (WINAPIV*)(struct lua_tinker::void2type<CLuaSignalReActor *>*, void*);
            using lua_tinker__void2typeinvoke2_clbk = struct CLuaSignalReActor* (WINAPIV*)(struct lua_tinker::void2type<CLuaSignalReActor *>*, void*, lua_tinker__void2typeinvoke2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__void2type.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__void2typeinvoke2_ptr = struct lua_tinker::user* (WINAPIV*)(struct lua_tinker::void2type<lua_tinker::user *>*, void*);
            using lua_tinker__void2typeinvoke2_clbk = struct lua_tinker::user* (WINAPIV*)(struct lua_tinker::void2type<lua_tinker::user *>*, void*, lua_tinker__void2typeinvoke2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__void2type.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__void2typeinvoke2_ptr = struct CLuaScript* (WINAPIV*)(struct lua_tinker::void2type<CLuaScript *>*, void*);
            using lua_tinker__void2typeinvoke2_clbk = struct CLuaScript* (WINAPIV*)(struct lua_tinker::void2type<CLuaScript *>*, void*, lua_tinker__void2typeinvoke2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__void2type.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__void2typeinvoke2_ptr = struct LuaParam3* (WINAPIV*)(struct lua_tinker::void2type<LuaParam3 *>*, void*);
            using lua_tinker__void2typeinvoke2_clbk = struct LuaParam3* (WINAPIV*)(struct lua_tinker::void2type<LuaParam3 *>*, void*, lua_tinker__void2typeinvoke2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__void2type.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__void2typeinvoke2_ptr = struct CLuaEventMgr* (WINAPIV*)(struct lua_tinker::void2type<CLuaEventMgr *>*, void*);
            using lua_tinker__void2typeinvoke2_clbk = struct CLuaEventMgr* (WINAPIV*)(struct lua_tinker::void2type<CLuaEventMgr *>*, void*, lua_tinker__void2typeinvoke2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__void2type.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__void2typeinvoke2_ptr = struct LuaParam3* (WINAPIV*)(struct LuaParam3*, void*);
            using lua_tinker__void2typeinvoke2_clbk = struct LuaParam3* (WINAPIV*)(struct LuaParam3*, void*, lua_tinker__void2typeinvoke2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__void2type.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__void2typeinvoke2_ptr = struct CMonster* (WINAPIV*)(struct lua_tinker::void2type<CMonster *>*, void*);
            using lua_tinker__void2typeinvoke2_clbk = struct CMonster* (WINAPIV*)(struct lua_tinker::void2type<CMonster *>*, void*, lua_tinker__void2typeinvoke2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__void2type.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__void2typeinvoke2_ptr = struct CLuaEventNode* (WINAPIV*)(struct lua_tinker::void2type<CLuaEventNode *>*, void*);
            using lua_tinker__void2typeinvoke2_clbk = struct CLuaEventNode* (WINAPIV*)(struct lua_tinker::void2type<CLuaEventNode *>*, void*, lua_tinker__void2typeinvoke2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
