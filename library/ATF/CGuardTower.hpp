// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CAttack.hpp"
#include "CCharacter.hpp"
#include "CPlayer.hpp"
#include "_STORAGE_LIST.hpp"
#include "_object_id.hpp"
#include "_tower_create_setdata.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 8)
    struct  CGuardTower : CCharacter
    {
        int m_nHP;
        CPlayer *m_pMasterTwr;
        unsigned int m_dwMasterSerial;
        char m_byRaceCode;
        _STORAGE_LIST::_db_con *m_pItem;
        unsigned __int16 m_wItemSerial;
        bool m_bSystemStruct;
        int m_nIniIndex;
        unsigned int m_dwStartMakeTime;
        bool m_bComplete;
        bool m_bQuick;
        CCharacter *m_pTarget;
        CCharacter *m_pMasterSetTarget;
        unsigned int m_dwLastDestroyTime;
    public:
        void Attack(struct CCharacter* pTarget)
        {
            using org_ptr = void (WINAPIV*)(struct CGuardTower*, struct CCharacter*);
            (org_ptr(0x14012f840L))(this, pTarget);
        };
        int AttackableHeight()
        {
            using org_ptr = int (WINAPIV*)(struct CGuardTower*);
            return (org_ptr(0x1401328e0L))(this);
        };
        CGuardTower()
        {
            using org_ptr = void (WINAPIV*)(struct CGuardTower*);
            (org_ptr(0x14012f340L))(this);
        };
        void ctor_CGuardTower()
        {
            using org_ptr = void (WINAPIV*)(struct CGuardTower*);
            (org_ptr(0x14012f340L))(this);
        };
        bool Create(struct _tower_create_setdata* pData)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuardTower*, struct _tower_create_setdata*);
            return (org_ptr(0x14012f510L))(this, pData);
        };
        bool Destroy(char byDesType, bool bSystemBack)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuardTower*, char, bool);
            return (org_ptr(0x14012f6f0L))(this, byDesType, bSystemBack);
        };
        int GetAttackDP()
        {
            using org_ptr = int (WINAPIV*)(struct CGuardTower*);
            return (org_ptr(0x1401328c0L))(this);
        };
        float GetAttackRange()
        {
            using org_ptr = float (WINAPIV*)(struct CGuardTower*);
            return (org_ptr(0x140132670L))(this);
        };
        int GetDefFC(int nAttactPart, struct CCharacter* pAttChar, int* pnConvertPart)
        {
            using org_ptr = int (WINAPIV*)(struct CGuardTower*, int, struct CCharacter*, int*);
            return (org_ptr(0x1401326c0L))(this, nAttactPart, pAttChar, pnConvertPart);
        };
        float GetDefFacing(int nPart)
        {
            using org_ptr = float (WINAPIV*)(struct CGuardTower*, int);
            return (org_ptr(0x140132810L))(this, nPart);
        };
        float GetDefGap(int nPart)
        {
            using org_ptr = float (WINAPIV*)(struct CGuardTower*, int);
            return (org_ptr(0x1401327c0L))(this, nPart);
        };
        int GetDefSkill(bool bBackAttack)
        {
            using org_ptr = int (WINAPIV*)(struct CGuardTower*, bool);
            return (org_ptr(0x140132710L))(this, bBackAttack);
        };
        int GetFireTol()
        {
            using org_ptr = int (WINAPIV*)(struct CGuardTower*);
            return (org_ptr(0x140132740L))(this);
        };
        int GetGenAttackProb(struct CCharacter* pDst, int nPart, bool bBackAttack)
        {
            using org_ptr = int (WINAPIV*)(struct CGuardTower*, struct CCharacter*, int, bool);
            return (org_ptr(0x1401302b0L))(this, pDst, nPart, bBackAttack);
        };
        int GetHP()
        {
            using org_ptr = int (WINAPIV*)(struct CGuardTower*);
            return (org_ptr(0x1401325e0L))(this);
        };
        int GetLevel()
        {
            using org_ptr = int (WINAPIV*)(struct CGuardTower*);
            return (org_ptr(0x1401326f0L))(this);
        };
        int GetMaxHP()
        {
            using org_ptr = int (WINAPIV*)(struct CGuardTower*);
            return (org_ptr(0x140132600L))(this);
        };
        static unsigned int GetNewSerial()
        {
            using org_ptr = unsigned int (WINAPIV*)();
            return (org_ptr(0x1401329b0L))();
        };
        char* GetObjName()
        {
            using org_ptr = char* (WINAPIV*)(struct CGuardTower*);
            return (org_ptr(0x1401303f0L))(this);
        };
        int GetObjRace()
        {
            using org_ptr = int (WINAPIV*)(struct CGuardTower*);
            return (org_ptr(0x140132920L))(this);
        };
        int GetSoilTol()
        {
            using org_ptr = int (WINAPIV*)(struct CGuardTower*);
            return (org_ptr(0x140132780L))(this);
        };
        int GetWaterTol()
        {
            using org_ptr = int (WINAPIV*)(struct CGuardTower*);
            return (org_ptr(0x140132760L))(this);
        };
        float GetWeaponAdjust()
        {
            using org_ptr = float (WINAPIV*)(struct CGuardTower*);
            return (org_ptr(0x140132860L))(this);
        };
        int GetWeaponClass()
        {
            using org_ptr = int (WINAPIV*)(struct CGuardTower*);
            return (org_ptr(0x1401328b0L))(this);
        };
        float GetWidth()
        {
            using org_ptr = float (WINAPIV*)(struct CGuardTower*);
            return (org_ptr(0x140132620L))(this);
        };
        int GetWindTol()
        {
            using org_ptr = int (WINAPIV*)(struct CGuardTower*);
            return (org_ptr(0x1401327a0L))(this);
        };
        bool Init(struct _object_id* pID)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuardTower*, struct _object_id*);
            return (org_ptr(0x14012f3f0L))(this, pID);
        };
        bool IsBeAttackedAble(bool bFirst)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuardTower*, bool);
            return (org_ptr(0x1401328f0L))(this, bFirst);
        };
        bool IsBeDamagedAble(struct CCharacter* pAtter)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuardTower*, struct CCharacter*);
            return (org_ptr(0x140131a80L))(this, pAtter);
        };
        static bool IsHaveEmpty()
        {
            using org_ptr = bool (WINAPIV*)();
            return (org_ptr(0x1401317e0L))();
        };
        bool IsInTown()
        {
            using org_ptr = bool (WINAPIV*)(struct CGuardTower*);
            return (org_ptr(0x140132910L))(this);
        };
        bool IsValidTarget()
        {
            using org_ptr = bool (WINAPIV*)(struct CGuardTower*);
            return (org_ptr(0x140130000L))(this);
        };
        void Loop()
        {
            using org_ptr = void (WINAPIV*)(struct CGuardTower*);
            (org_ptr(0x14012fc10L))(this);
        };
        void NotifyOwnerAttackInform(struct CCharacter* pDst)
        {
            using org_ptr = void (WINAPIV*)(struct CGuardTower*, struct CCharacter*);
            (org_ptr(0x1401312e0L))(this, pDst);
        };
        static void OnLoop_Static()
        {
            using org_ptr = void (WINAPIV*)();
            (org_ptr(0x140131720L))();
        };
        void OutOfSec()
        {
            using org_ptr = void (WINAPIV*)(struct CGuardTower*);
            (org_ptr(0x140132590L))(this);
        };
        void RecvKillMessage(struct CCharacter* pDier)
        {
            using org_ptr = void (WINAPIV*)(struct CGuardTower*, struct CCharacter*);
            (org_ptr(0x140130610L))(this, pDier);
        };
        bool RobbedHP(struct CCharacter* pDst, int nDecHP)
        {
            using org_ptr = bool (WINAPIV*)(struct CGuardTower*, struct CCharacter*, int);
            return (org_ptr(0x14012fb50L))(this, pDst, nDecHP);
        };
        struct CCharacter* SearchNearEnemy()
        {
            using org_ptr = struct CCharacter* (WINAPIV*)(struct CGuardTower*);
            return (org_ptr(0x140130b10L))(this);
        };
        void SendMsg_Attack(struct CAttack* pAt)
        {
            using org_ptr = void (WINAPIV*)(struct CGuardTower*, struct CAttack*);
            (org_ptr(0x140130840L))(this, pAt);
        };
        void SendMsg_Create()
        {
            using org_ptr = void (WINAPIV*)(struct CGuardTower*);
            (org_ptr(0x140130680L))(this);
        };
        void SendMsg_Destroy(char byDesType)
        {
            using org_ptr = void (WINAPIV*)(struct CGuardTower*, char);
            (org_ptr(0x140130780L))(this, byDesType);
        };
        void SendMsg_FixPosition(int n)
        {
            using org_ptr = void (WINAPIV*)(struct CGuardTower*, int);
            (org_ptr(0x140130930L))(this, n);
        };
        void SendMsg_TowerCompleteInform()
        {
            using org_ptr = void (WINAPIV*)(struct CGuardTower*);
            (org_ptr(0x140130a80L))(this);
        };
        int SetDamage(int nDam, struct CCharacter* pDst, int nDstLv, bool bCrt, int nAttackType, unsigned int dwAttackSerial, bool bJadeReturn)
        {
            using org_ptr = int (WINAPIV*)(struct CGuardTower*, int, struct CCharacter*, int, bool, int, unsigned int, bool);
            return (org_ptr(0x14012fe50L))(this, nDam, pDst, nDstLv, bCrt, nAttackType, dwAttackSerial, bJadeReturn);
        };
        ~CGuardTower()
        {
            using org_ptr = void (WINAPIV*)(struct CGuardTower*);
            (org_ptr(0x14012f3a0L))(this);
        };
        void dtor_CGuardTower()
        {
            using org_ptr = void (WINAPIV*)(struct CGuardTower*);
            (org_ptr(0x14012f3a0L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
