// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_animus_download_result_zocl_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::_animus_download_result_zoclctor__animus_download_result_zocl2_ptr _animus_download_result_zoclctor__animus_download_result_zocl2_next(nullptr);
        static info::_animus_download_result_zoclctor__animus_download_result_zocl2_clbk _animus_download_result_zoclctor__animus_download_result_zocl2_user(nullptr);
        static info::_animus_download_result_zoclsize4_ptr _animus_download_result_zoclsize4_next(nullptr);
        static info::_animus_download_result_zoclsize4_clbk _animus_download_result_zoclsize4_user(nullptr);
        
        static void _animus_download_result_zoclctor__animus_download_result_zocl2_wrapper(struct _animus_download_result_zocl* _this)
        {
           _animus_download_result_zoclctor__animus_download_result_zocl2_user(_this, _animus_download_result_zoclctor__animus_download_result_zocl2_next);
        };
        static int _animus_download_result_zoclsize4_wrapper(struct _animus_download_result_zocl* _this)
        {
           return _animus_download_result_zoclsize4_user(_this, _animus_download_result_zoclsize4_next);
        };
        
        static hook_record _animus_download_result_zocl_functions[] = {
        {   (LPVOID)0x1400ef840L,
            (LPVOID *)&_animus_download_result_zoclctor__animus_download_result_zocl2_user,
            (LPVOID *)&_animus_download_result_zoclctor__animus_download_result_zocl2_next,
            (LPVOID)cast_pointer_function(_animus_download_result_zoclctor__animus_download_result_zocl2_wrapper),
            (LPVOID)cast_pointer_function((void(_animus_download_result_zocl::*)())&_animus_download_result_zocl::ctor__animus_download_result_zocl) },
        {   (LPVOID)0x1400ef860L,
            (LPVOID *)&_animus_download_result_zoclsize4_user,
            (LPVOID *)&_animus_download_result_zoclsize4_next,
            (LPVOID)cast_pointer_function(_animus_download_result_zoclsize4_wrapper),
            (LPVOID)cast_pointer_function((int(_animus_download_result_zocl::*)())&_animus_download_result_zocl::size) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
