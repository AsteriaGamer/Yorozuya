// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CAtlTraceModuleInfo.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 8)
    struct  CAtlTraceProcess : CAtlTraceModuleInfo
    {
        unsigned __int64 m_dwFrontAlloc;
        unsigned __int64 m_dwBackAlloc;
        unsigned __int64 m_dwCurrFront;
        unsigned __int64 m_dwCurrBack;
        unsigned int m_nLevel;
        bool m_bLoaded;
        bool m_bEnabled;
        bool m_bFuncAndCategoryNames;
        bool m_bFileNameAndLineNo;
        unsigned int m_dwId;
        unsigned __int64 m_dwMaxSize;
        unsigned int m_nRef;
        void *m_pvBase;
        unsigned int m_nModuleCount;
        unsigned int m_nCategoryCount;
        int m_nNextCookie;
    public:
        void* Base()
        {
            using org_ptr = void* (WINAPIV*)(struct CAtlTraceProcess*);
            return (org_ptr(0x140675400L))(this);
        };
        CAtlTraceProcess(uint64_t dwMaxSize)
        {
            using org_ptr = void (WINAPIV*)(struct CAtlTraceProcess*, uint64_t);
            (org_ptr(0x140676120L))(this, dwMaxSize);
        };
        void ctor_CAtlTraceProcess(uint64_t dwMaxSize)
        {
            using org_ptr = void (WINAPIV*)(struct CAtlTraceProcess*, uint64_t);
            (org_ptr(0x140676120L))(this, dwMaxSize);
        };
        int CategoryCount()
        {
            using org_ptr = int (WINAPIV*)(struct CAtlTraceProcess*);
            return (org_ptr(0x140675490L))(this);
        };
        unsigned int DecRef()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct CAtlTraceProcess*);
            return (org_ptr(0x140675420L))(this);
        };
        int GetNextCookie()
        {
            using org_ptr = int (WINAPIV*)(struct CAtlTraceProcess*);
            return (org_ptr(0x140676230L))(this);
        };
        unsigned int Id()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct CAtlTraceProcess*);
            return (org_ptr(0x140670030L))(this);
        };
        void IncCategoryCount(unsigned int nCategories)
        {
            using org_ptr = void (WINAPIV*)(struct CAtlTraceProcess*, unsigned int);
            (org_ptr(0x140675620L))(this, nCategories);
        };
        void IncModuleCount(unsigned int nModules)
        {
            using org_ptr = void (WINAPIV*)(struct CAtlTraceProcess*, unsigned int);
            (org_ptr(0x140675560L))(this, nModules);
        };
        unsigned int IncRef()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct CAtlTraceProcess*);
            return (org_ptr(0x1406753d0L))(this);
        };
        uint64_t MaxSize()
        {
            using org_ptr = uint64_t (WINAPIV*)(struct CAtlTraceProcess*);
            return (org_ptr(0x140675470L))(this);
        };
        int ModuleCount()
        {
            using org_ptr = int (WINAPIV*)(struct CAtlTraceProcess*);
            return (org_ptr(0x140675450L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
