// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CLuaScript.hpp"


START_ATF_NAMESPACE
    struct CLuaEventNode
    {
        struct _State
        {
            bool m_bExist;
            bool m_bAttached;
        public:
            _State()
            {
                using org_ptr = void (WINAPIV*)(struct _State*);
                (org_ptr(0x1404046c0L))(this);
            };
            void ctor__State()
            {
                using org_ptr = void (WINAPIV*)(struct _State*);
                (org_ptr(0x1404046c0L))(this);
            };
        };
        char m_strName[64];
        bool m_bCallFunc;
        char m_strCallFuncName[64];
        unsigned int m_dwTimeTerm;
        unsigned int m_dwNextLoopTime;
        CLuaScript *m_pLuaScript;
    public:
        CLuaEventNode()
        {
            using org_ptr = void (WINAPIV*)(struct CLuaEventNode*);
            (org_ptr(0x1404043d0L))(this);
        };
        void ctor_CLuaEventNode()
        {
            using org_ptr = void (WINAPIV*)(struct CLuaEventNode*);
            (org_ptr(0x1404043d0L))(this);
        };
        char* GetCallFunName()
        {
            using org_ptr = char* (WINAPIV*)(struct CLuaEventNode*);
            return (org_ptr(0x140403b60L))(this);
        };
        char* GetName()
        {
            using org_ptr = char* (WINAPIV*)(struct CLuaEventNode*);
            return (org_ptr(0x140403ae0L))(this);
        };
        unsigned int GetNextLoopTime()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct CLuaEventNode*);
            return (org_ptr(0x140403bb0L))(this);
        };
        struct CLuaScript* GetScript()
        {
            using org_ptr = struct CLuaScript* (WINAPIV*)(struct CLuaEventNode*);
            return (org_ptr(0x140403b40L))(this);
        };
        unsigned int GetTimeTerm()
        {
            using org_ptr = unsigned int (WINAPIV*)(struct CLuaEventNode*);
            return (org_ptr(0x140403b90L))(this);
        };
        void Init()
        {
            using org_ptr = void (WINAPIV*)(struct CLuaEventNode*);
            (org_ptr(0x140403af0L))(this);
        };
        bool IsCallFun()
        {
            using org_ptr = bool (WINAPIV*)(struct CLuaEventNode*);
            return (org_ptr(0x140403b20L))(this);
        };
        void SetCallFun(char* strCallFunName, unsigned int dwTime)
        {
            using org_ptr = void (WINAPIV*)(struct CLuaEventNode*, char*, unsigned int);
            (org_ptr(0x1404033c0L))(this, strCallFunName, dwTime);
        };
        void SetName(char* strName)
        {
            using org_ptr = void (WINAPIV*)(struct CLuaEventNode*, char*);
            (org_ptr(0x140406730L))(this, strName);
        };
        void SetNextLoopTime(unsigned int dwNextLoopTime)
        {
            using org_ptr = void (WINAPIV*)(struct CLuaEventNode*, unsigned int);
            (org_ptr(0x140403bd0L))(this, dwNextLoopTime);
        };
        void SetScript(struct CLuaScript* pParentScript)
        {
            using org_ptr = void (WINAPIV*)(struct CLuaEventNode*, struct CLuaScript*);
            (org_ptr(0x140403470L))(this, pParentScript);
        };
        ~CLuaEventNode()
        {
            using org_ptr = void (WINAPIV*)(struct CLuaEventNode*);
            (org_ptr(0x140404160L))(this);
        };
        void dtor_CLuaEventNode()
        {
            using org_ptr = void (WINAPIV*)(struct CLuaEventNode*);
            (org_ptr(0x140404160L))(this);
        };
    };
END_ATF_NAMESPACE
