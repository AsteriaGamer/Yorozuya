// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CMyTimer.hpp"
#include "CPlayer.hpp"
#include "RACE_BOSS_MSG__CMsg.hpp"
#include "RACE_BOSS_MSG__CMsgListManager.hpp"


START_ATF_NAMESPACE
    struct CRaceBossMsgController
    {
        bool m_bConnectWeb;
        int m_iOldDay;
        CMyTimer *m_pkTimer;
        RACE_BOSS_MSG::CMsgListManager m_kManager;
    public:
        CRaceBossMsgController()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossMsgController*);
            (org_ptr(0x1402a0250L))(this);
        };
        void ctor_CRaceBossMsgController()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossMsgController*);
            (org_ptr(0x1402a0250L))(this);
        };
        bool Cancel(char ucRace, unsigned int dwMsgID)
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBossMsgController*, char, unsigned int);
            return (org_ptr(0x1402a0930L))(this, ucRace, dwMsgID);
        };
        bool Cancel(char ucRace, unsigned int dwMsgID, struct CPlayer* pkManager)
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBossMsgController*, char, unsigned int, struct CPlayer*);
            return (org_ptr(0x1402a0a00L))(this, ucRace, dwMsgID, pkManager);
        };
        void CleanUp()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossMsgController*);
            (org_ptr(0x1402a0bf0L))(this);
        };
        static void Destroy()
        {
            using org_ptr = void (WINAPIV*)();
            (org_ptr(0x1402a03f0L))();
        };
        int GetCurDay()
        {
            using org_ptr = int (WINAPIV*)(struct CRaceBossMsgController*);
            return (org_ptr(0x1402a0e00L))(this);
        };
        bool Init()
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBossMsgController*);
            return (org_ptr(0x1402a0470L))(this);
        };
        static struct CRaceBossMsgController* Instance()
        {
            using org_ptr = struct CRaceBossMsgController* (WINAPIV*)();
            return (org_ptr(0x1402a0330L))();
        };
        bool IsDayChanged()
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBossMsgController*);
            return (org_ptr(0x1402a0d90L))(this);
        };
        bool LoadCurTime(unsigned int* dwCurTime)
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBossMsgController*, unsigned int*);
            return (org_ptr(0x1402a0fe0L))(this, dwCurTime);
        };
        void OnLoop()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossMsgController*);
            (org_ptr(0x1402a0b50L))(this);
        };
        void SaveCurTime()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossMsgController*);
            (org_ptr(0x1402a0f00L))(this);
        };
        bool Send(struct CPlayer* pkSender, char* pwszMsg)
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBossMsgController*, struct CPlayer*, char*);
            return (org_ptr(0x1402a05e0L))(this, pkSender, pwszMsg);
        };
        bool Send(char ucRace, unsigned int dwSerial, char* wszName, char* pwszMsg, unsigned int dwWebSendDBID)
        {
            using org_ptr = bool (WINAPIV*)(struct CRaceBossMsgController*, char, unsigned int, char*, char*, unsigned int);
            return (org_ptr(0x1402a07c0L))(this, ucRace, dwSerial, wszName, pwszMsg, dwWebSendDBID);
        };
        void SendCancelWeb(char ucRace, struct RACE_BOSS_MSG::CMsg* pkMsg)
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossMsgController*, char, struct RACE_BOSS_MSG::CMsg*);
            (org_ptr(0x1402a17b0L))(this, ucRace, pkMsg);
        };
        void SendCancleInfomManager(uint16_t usInx, char ucRet, unsigned int dwMsgID, char* pwszName)
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossMsgController*, uint16_t, char, unsigned int, char*);
            (org_ptr(0x1402a16c0L))(this, usInx, ucRet, dwMsgID, pwszName);
        };
        void SendCancleInfomSender(unsigned int dwSerial)
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossMsgController*, unsigned int);
            (org_ptr(0x1402a1610L))(this, dwSerial);
        };
        void SendComfirmWeb(char ucRace, struct RACE_BOSS_MSG::CMsg* pkMsg)
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossMsgController*, char, struct RACE_BOSS_MSG::CMsg*);
            (org_ptr(0x1402a10f0L))(this, ucRace, pkMsg);
        };
        void SendConfirmCtrl(char ucRace, struct RACE_BOSS_MSG::CMsg* pkMsg)
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossMsgController*, char, struct RACE_BOSS_MSG::CMsg*);
            (org_ptr(0x1402a1250L))(this, ucRace, pkMsg);
        };
        void SendInfomSender(unsigned int dwSerial, char ucRemainCnt)
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossMsgController*, unsigned int, char);
            (org_ptr(0x1402a13b0L))(this, dwSerial, ucRemainCnt);
        };
        void SendMsgRequestResult(uint16_t usInx, char ucRet)
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossMsgController*, uint16_t, char);
            (org_ptr(0x1402a1060L))(this, usInx, ucRet);
        };
        void SendRequestWeb(char ucRace, struct RACE_BOSS_MSG::CMsg* pkMsg)
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossMsgController*, char, struct RACE_BOSS_MSG::CMsg*);
            (org_ptr(0x1402a1480L))(this, ucRace, pkMsg);
        };
        void SendWebRaceBossSMSErrorResult(int iRet, unsigned int dwWebDBID)
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossMsgController*, int, unsigned int);
            (org_ptr(0x1402a1890L))(this, iRet, dwWebDBID);
        };
        void UpdateSend()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossMsgController*);
            (org_ptr(0x1402a0c80L))(this);
        };
        ~CRaceBossMsgController()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossMsgController*);
            (org_ptr(0x1402a02b0L))(this);
        };
        void dtor_CRaceBossMsgController()
        {
            using org_ptr = void (WINAPIV*)(struct CRaceBossMsgController*);
            (org_ptr(0x1402a02b0L))(this);
        };
    };
END_ATF_NAMESPACE
