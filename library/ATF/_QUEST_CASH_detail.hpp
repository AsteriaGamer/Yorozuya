// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_QUEST_CASH_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::_QUEST_CASHctor__QUEST_CASH2_ptr _QUEST_CASHctor__QUEST_CASH2_next(nullptr);
        info::_QUEST_CASHctor__QUEST_CASH2_clbk _QUEST_CASHctor__QUEST_CASH2_user(nullptr);
        info::_QUEST_CASHinit4_ptr _QUEST_CASHinit4_next(nullptr);
        info::_QUEST_CASHinit4_clbk _QUEST_CASHinit4_user(nullptr);
        info::_QUEST_CASHisload6_ptr _QUEST_CASHisload6_next(nullptr);
        info::_QUEST_CASHisload6_clbk _QUEST_CASHisload6_user(nullptr);
        
        void _QUEST_CASHctor__QUEST_CASH2_wrapper(struct _QUEST_CASH* _this)
        {
           _QUEST_CASHctor__QUEST_CASH2_user(_this, _QUEST_CASHctor__QUEST_CASH2_next);
        };
        void _QUEST_CASHinit4_wrapper(struct _QUEST_CASH* _this)
        {
           _QUEST_CASHinit4_user(_this, _QUEST_CASHinit4_next);
        };
        bool _QUEST_CASHisload6_wrapper(struct _QUEST_CASH* _this)
        {
           return _QUEST_CASHisload6_user(_this, _QUEST_CASHisload6_next);
        };
        
        hook_record _QUEST_CASH_functions[] = {
        {   (LPVOID)0x140284230L,
            (LPVOID *)&_QUEST_CASHctor__QUEST_CASH2_user,
            (LPVOID *)&_QUEST_CASHctor__QUEST_CASH2_next,
            (LPVOID)cast_pointer_function(_QUEST_CASHctor__QUEST_CASH2_wrapper),
            (LPVOID)cast_pointer_function((void(_QUEST_CASH::*)())&_QUEST_CASH::ctor__QUEST_CASH) },
        {   (LPVOID)0x140079710L,
            (LPVOID *)&_QUEST_CASHinit4_user,
            (LPVOID *)&_QUEST_CASHinit4_next,
            (LPVOID)cast_pointer_function(_QUEST_CASHinit4_wrapper),
            (LPVOID)cast_pointer_function((void(_QUEST_CASH::*)())&_QUEST_CASH::init) },
        {   (LPVOID)0x140284cd0L,
            (LPVOID *)&_QUEST_CASHisload6_user,
            (LPVOID *)&_QUEST_CASHisload6_next,
            (LPVOID)cast_pointer_function(_QUEST_CASHisload6_wrapper),
            (LPVOID)cast_pointer_function((bool(_QUEST_CASH::*)())&_QUEST_CASH::isload) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
