// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CBillingKR_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::CBillingKRctor_CBillingKR2_ptr CBillingKRctor_CBillingKR2_next(nullptr);
        static info::CBillingKRctor_CBillingKR2_clbk CBillingKRctor_CBillingKR2_user(nullptr);
        static info::CBillingKRdtor_CBillingKR7_ptr CBillingKRdtor_CBillingKR7_next(nullptr);
        static info::CBillingKRdtor_CBillingKR7_clbk CBillingKRdtor_CBillingKR7_user(nullptr);
        
        static void CBillingKRctor_CBillingKR2_wrapper(struct CBillingKR* _this)
        {
           CBillingKRctor_CBillingKR2_user(_this, CBillingKRctor_CBillingKR2_next);
        };
        static void CBillingKRdtor_CBillingKR7_wrapper(struct CBillingKR* _this)
        {
           CBillingKRdtor_CBillingKR7_user(_this, CBillingKRdtor_CBillingKR7_next);
        };
        
        static hook_record CBillingKR_functions[] = {
        {   (LPVOID)0x14022ba70L,
            (LPVOID *)&CBillingKRctor_CBillingKR2_user,
            (LPVOID *)&CBillingKRctor_CBillingKR2_next,
            (LPVOID)cast_pointer_function(CBillingKRctor_CBillingKR2_wrapper),
            (LPVOID)cast_pointer_function((void(CBillingKR::*)())&CBillingKR::ctor_CBillingKR) },
        {   (LPVOID)0x14022bc00L,
            (LPVOID *)&CBillingKRdtor_CBillingKR7_user,
            (LPVOID *)&CBillingKRdtor_CBillingKR7_next,
            (LPVOID)cast_pointer_function(CBillingKRdtor_CBillingKR7_wrapper),
            (LPVOID)cast_pointer_function((void(CBillingKR::*)())&CBillingKR::dtor_CBillingKR) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
