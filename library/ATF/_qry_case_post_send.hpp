// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"


START_ATF_NAMESPACE
    struct _qry_case_post_send
    {
        struct __list
        {
            char byErr;
            unsigned int dwIndex;
            unsigned int dwPSSerial;
            unsigned int dwReceiverSerial;
            unsigned int dwSenderSerial;
            char wszSendName[17];
            char wszRecvName[17];
            char wszTitle[21];
            char wszContent[201];
            _INVENKEY key;
            unsigned __int64 dwDur;
            unsigned int dwUpt;
            unsigned __int64 lnUID;
            unsigned int dwGold;
        public:
            __list()
            {
                using org_ptr = void (WINAPIV*)(struct __list*);
                (org_ptr(0x1403285e0L))(this);
            };
            void ctor___list()
            {
                using org_ptr = void (WINAPIV*)(struct __list*);
                (org_ptr(0x1403285e0L))(this);
            };
        };
        unsigned int dwCount;
        __list List[15];
    public:
        _qry_case_post_send()
        {
            using org_ptr = void (WINAPIV*)(struct _qry_case_post_send*);
            (org_ptr(0x1403282a0L))(this);
        };
        void ctor__qry_case_post_send()
        {
            using org_ptr = void (WINAPIV*)(struct _qry_case_post_send*);
            (org_ptr(0x1403282a0L))(this);
        };
        bool pushdata(unsigned int dwIndex, char byErr, unsigned int dwReceiverSerial, unsigned int dwSenderSerial, char* wszSendName, char* wszRecvName, char* wszTitle, char* wszContent, struct _INVENKEY key, uint64_t dwDur, unsigned int dwUpt, unsigned int dwGold, uint64_t lnUID)
        {
            using org_ptr = bool (WINAPIV*)(struct _qry_case_post_send*, unsigned int, char, unsigned int, unsigned int, char*, char*, char*, char*, struct _INVENKEY, uint64_t, unsigned int, unsigned int, uint64_t);
            return (org_ptr(0x140328330L))(this, dwIndex, byErr, dwReceiverSerial, dwSenderSerial, wszSendName, wszRecvName, wszTitle, wszContent, key, dwDur, dwUpt, dwGold, lnUID);
        };
        int size()
        {
            using org_ptr = int (WINAPIV*)(struct _qry_case_post_send*);
            return (org_ptr(0x140328320L))(this);
        };
    };
END_ATF_NAMESPACE
