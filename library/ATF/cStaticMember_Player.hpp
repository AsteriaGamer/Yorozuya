// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"


START_ATF_NAMESPACE
    struct cStaticMember_Player
    {
        enum _default_value
        {
            default_max_level = 0x32,
        };
        int _nMaxLv;
        long double *_pLimExp;
    public:
        long double GetLimitExp(int lv)
        {
            using org_ptr = long double (WINAPIV*)(struct cStaticMember_Player*, int);
            return (org_ptr(0x14010e5e0L))(this, lv);
        };
        int GetMaxLv()
        {
            using org_ptr = int (WINAPIV*)(struct cStaticMember_Player*);
            return (org_ptr(0x14010e640L))(this);
        };
        bool Initialize()
        {
            using org_ptr = bool (WINAPIV*)(struct cStaticMember_Player*);
            return (org_ptr(0x14010e590L))(this);
        };
        static struct cStaticMember_Player* Instance()
        {
            using org_ptr = struct cStaticMember_Player* (WINAPIV*)();
            return (org_ptr(0x14010e450L))();
        };
        static void Release()
        {
            using org_ptr = void (WINAPIV*)();
            (org_ptr(0x14010e510L))();
        };
        cStaticMember_Player()
        {
            using org_ptr = void (WINAPIV*)(struct cStaticMember_Player*);
            (org_ptr(0x14010e3d0L))(this);
        };
        void ctor_cStaticMember_Player()
        {
            using org_ptr = void (WINAPIV*)(struct cStaticMember_Player*);
            (org_ptr(0x14010e3d0L))(this);
        };
        bool loadLimitExpData()
        {
            using org_ptr = bool (WINAPIV*)(struct cStaticMember_Player*);
            return (org_ptr(0x14010e660L))(this);
        };
        ~cStaticMember_Player()
        {
            using org_ptr = void (WINAPIV*)(struct cStaticMember_Player*);
            (org_ptr(0x14010e3f0L))(this);
        };
        void dtor_cStaticMember_Player()
        {
            using org_ptr = void (WINAPIV*)(struct cStaticMember_Player*);
            (org_ptr(0x14010e3f0L))(this);
        };
    };
END_ATF_NAMESPACE
