// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_happen_event_cont_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::_happen_event_contctor__happen_event_cont2_ptr _happen_event_contctor__happen_event_cont2_next(nullptr);
        info::_happen_event_contctor__happen_event_cont2_clbk _happen_event_contctor__happen_event_cont2_user(nullptr);
        info::_happen_event_continit4_ptr _happen_event_continit4_next(nullptr);
        info::_happen_event_continit4_clbk _happen_event_continit4_user(nullptr);
        info::_happen_event_contisset6_ptr _happen_event_contisset6_next(nullptr);
        info::_happen_event_contisset6_clbk _happen_event_contisset6_user(nullptr);
        info::_happen_event_contset8_ptr _happen_event_contset8_next(nullptr);
        info::_happen_event_contset8_clbk _happen_event_contset8_user(nullptr);
        
        void _happen_event_contctor__happen_event_cont2_wrapper(struct _happen_event_cont* _this)
        {
           _happen_event_contctor__happen_event_cont2_user(_this, _happen_event_contctor__happen_event_cont2_next);
        };
        void _happen_event_continit4_wrapper(struct _happen_event_cont* _this)
        {
           _happen_event_continit4_user(_this, _happen_event_continit4_next);
        };
        bool _happen_event_contisset6_wrapper(struct _happen_event_cont* _this)
        {
           return _happen_event_contisset6_user(_this, _happen_event_contisset6_next);
        };
        void _happen_event_contset8_wrapper(struct _happen_event_cont* _this, struct _happen_event_node* pPoint, QUEST_HAPPEN QtHpType, int nIndexInType, int nRaceCode)
        {
           _happen_event_contset8_user(_this, pPoint, QtHpType, nIndexInType, nRaceCode, _happen_event_contset8_next);
        };
        
        hook_record _happen_event_cont_functions[] = {
        {   (LPVOID)0x1400cfb70L,
            (LPVOID *)&_happen_event_contctor__happen_event_cont2_user,
            (LPVOID *)&_happen_event_contctor__happen_event_cont2_next,
            (LPVOID)cast_pointer_function(_happen_event_contctor__happen_event_cont2_wrapper),
            (LPVOID)cast_pointer_function((void(_happen_event_cont::*)())&_happen_event_cont::ctor__happen_event_cont) },
        {   (LPVOID)0x1400cfbc0L,
            (LPVOID *)&_happen_event_continit4_user,
            (LPVOID *)&_happen_event_continit4_next,
            (LPVOID)cast_pointer_function(_happen_event_continit4_wrapper),
            (LPVOID)cast_pointer_function((void(_happen_event_cont::*)())&_happen_event_cont::init) },
        {   (LPVOID)0x1400cfc10L,
            (LPVOID *)&_happen_event_contisset6_user,
            (LPVOID *)&_happen_event_contisset6_next,
            (LPVOID)cast_pointer_function(_happen_event_contisset6_wrapper),
            (LPVOID)cast_pointer_function((bool(_happen_event_cont::*)())&_happen_event_cont::isset) },
        {   (LPVOID)0x14028c8d0L,
            (LPVOID *)&_happen_event_contset8_user,
            (LPVOID *)&_happen_event_contset8_next,
            (LPVOID)cast_pointer_function(_happen_event_contset8_wrapper),
            (LPVOID)cast_pointer_function((void(_happen_event_cont::*)(struct _happen_event_node*, QUEST_HAPPEN, int, int))&_happen_event_cont::set) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
