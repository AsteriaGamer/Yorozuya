// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_ANI_CAMERA.hpp"
#include "_ANI_OBJECT.hpp"


START_ATF_NAMESPACE
    struct CAniCamera
    {
        _ANI_CAMERA *AniCamera;
        _ANI_OBJECT *mDummy;
        unsigned int mDummyNum;
        unsigned int mAniCameraNum;
        unsigned int mStartFrame;
        unsigned int mEndFrame;
        unsigned int mPlayStartFrame;
        unsigned int mPlayEndFrame;
        int mPlayIndex;
        int mIsSetPerspect;
        float mStartTick;
        unsigned int mFlag;
        float mOldFrame;
        float mNowFrame;
    public:
        uint32_t GetCameraIndex(char* arg_0)
        {
            using org_ptr = uint32_t (WINAPIV*)(struct CAniCamera*, char*);
            return (org_ptr(0x14050e600L))(this, arg_0);
        };
        char* GetCameraName(uint32_t arg_0)
        {
            using org_ptr = char* (WINAPIV*)(struct CAniCamera*, uint32_t);
            return (org_ptr(0x14050e5e0L))(this, arg_0);
        };
        uint32_t GetDummyID(char* arg_0, int arg_1)
        {
            using org_ptr = uint32_t (WINAPIV*)(struct CAniCamera*, char*, int);
            return (org_ptr(0x14050e6e0L))(this, arg_0, arg_1);
        };
        void GetDummyMatrix(float** arg_0, uint32_t arg_1, float arg_2)
        {
            using org_ptr = void (WINAPIV*)(struct CAniCamera*, float**, uint32_t, float);
            (org_ptr(0x14050ea00L))(this, arg_0, arg_1, arg_2);
        };
        void GetDummyMatrixSub(float** arg_0, uint32_t arg_1, float arg_2)
        {
            using org_ptr = void (WINAPIV*)(struct CAniCamera*, float**, uint32_t, float);
            (org_ptr(0x14050e950L))(this, arg_0, arg_1, arg_2);
        };
        char* GetDummyParentID(uint32_t arg_0)
        {
            using org_ptr = char* (WINAPIV*)(struct CAniCamera*, uint32_t);
            return (org_ptr(0x14050e6c0L))(this, arg_0);
        };
        float* GetMatrixAniCamera(float arg_0)
        {
            using org_ptr = float* (WINAPIV*)(struct CAniCamera*, float);
            return (org_ptr(0x14050eab0L))(this, arg_0);
        };
        int64_t IsLoadedAniCamera()
        {
            using org_ptr = int64_t (WINAPIV*)(struct CAniCamera*);
            return (org_ptr(0x14050e5d0L))(this);
        };
        void LoadAniCamera(char* Filename)
        {
            using org_ptr = void (WINAPIV*)(struct CAniCamera*, char*);
            (org_ptr(0x14050efb0L))(this, Filename);
        };
        int64_t PlayAniCamera(float** arg_0, float arg_1, int arg_2)
        {
            using org_ptr = int64_t (WINAPIV*)(struct CAniCamera*, float**, float, int);
            return (org_ptr(0x14050ed60L))(this, arg_0, arg_1, arg_2);
        };
        void ReleaseAniCamera()
        {
            using org_ptr = void (WINAPIV*)(struct CAniCamera*);
            (org_ptr(0x14050e810L))(this);
        };
        int64_t SetExtCamAni()
        {
            using org_ptr = int64_t (WINAPIV*)(struct CAniCamera*);
            return (org_ptr(0x14050ef00L))(this);
        };
        void SetNowFrame(float arg_0)
        {
            using org_ptr = void (WINAPIV*)(struct CAniCamera*, float);
            (org_ptr(0x14050ed20L))(this, arg_0);
        };
        void SetPrePlayCamera(uint32_t arg_0, uint32_t arg_1, uint32_t arg_2, uint32_t arg_3)
        {
            using org_ptr = void (WINAPIV*)(struct CAniCamera*, uint32_t, uint32_t, uint32_t, uint32_t);
            (org_ptr(0x14050ec80L))(this, arg_0, arg_1, arg_2, arg_3);
        };
        ~CAniCamera()
        {
            using org_ptr = int64_t (WINAPIV*)(struct CAniCamera*);
            (org_ptr(0x14050e5c0L))(this);
        };
        int64_t dtor_CAniCamera()
        {
            using org_ptr = int64_t (WINAPIV*)(struct CAniCamera*);
            return (org_ptr(0x14050e5c0L))(this);
        };
    };
END_ATF_NAMESPACE
