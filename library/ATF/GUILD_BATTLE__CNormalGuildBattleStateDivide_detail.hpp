// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "GUILD_BATTLE__CNormalGuildBattleStateDivide_info.hpp"


START_ATF_NAMESPACE
    namespace GUILD_BATTLE
    {
        namespace detail
        {
            info::GUILD_BATTLE__CNormalGuildBattleStateDividector_CNormalGuildBattleStateDivide2_ptr GUILD_BATTLE__CNormalGuildBattleStateDividector_CNormalGuildBattleStateDivide2_next(nullptr);
            info::GUILD_BATTLE__CNormalGuildBattleStateDividector_CNormalGuildBattleStateDivide2_clbk GUILD_BATTLE__CNormalGuildBattleStateDividector_CNormalGuildBattleStateDivide2_user(nullptr);
            info::GUILD_BATTLE__CNormalGuildBattleStateDivideFin4_ptr GUILD_BATTLE__CNormalGuildBattleStateDivideFin4_next(nullptr);
            info::GUILD_BATTLE__CNormalGuildBattleStateDivideFin4_clbk GUILD_BATTLE__CNormalGuildBattleStateDivideFin4_user(nullptr);
            info::GUILD_BATTLE__CNormalGuildBattleStateDivideGetTerm6_ptr GUILD_BATTLE__CNormalGuildBattleStateDivideGetTerm6_next(nullptr);
            info::GUILD_BATTLE__CNormalGuildBattleStateDivideGetTerm6_clbk GUILD_BATTLE__CNormalGuildBattleStateDivideGetTerm6_user(nullptr);
            info::GUILD_BATTLE__CNormalGuildBattleStateDividedtor_CNormalGuildBattleStateDivide8_ptr GUILD_BATTLE__CNormalGuildBattleStateDividedtor_CNormalGuildBattleStateDivide8_next(nullptr);
            info::GUILD_BATTLE__CNormalGuildBattleStateDividedtor_CNormalGuildBattleStateDivide8_clbk GUILD_BATTLE__CNormalGuildBattleStateDividedtor_CNormalGuildBattleStateDivide8_user(nullptr);
            
            void GUILD_BATTLE__CNormalGuildBattleStateDividector_CNormalGuildBattleStateDivide2_wrapper(struct GUILD_BATTLE::CNormalGuildBattleStateDivide* _this)
            {
               GUILD_BATTLE__CNormalGuildBattleStateDividector_CNormalGuildBattleStateDivide2_user(_this, GUILD_BATTLE__CNormalGuildBattleStateDividector_CNormalGuildBattleStateDivide2_next);
            };
            int GUILD_BATTLE__CNormalGuildBattleStateDivideFin4_wrapper(struct GUILD_BATTLE::CNormalGuildBattleStateDivide* _this, struct GUILD_BATTLE::CNormalGuildBattle* pkBattle)
            {
               return GUILD_BATTLE__CNormalGuildBattleStateDivideFin4_user(_this, pkBattle, GUILD_BATTLE__CNormalGuildBattleStateDivideFin4_next);
            };
            struct ATL::CTimeSpan* GUILD_BATTLE__CNormalGuildBattleStateDivideGetTerm6_wrapper(struct GUILD_BATTLE::CNormalGuildBattleStateDivide* _this, struct ATL::CTimeSpan* result)
            {
               return GUILD_BATTLE__CNormalGuildBattleStateDivideGetTerm6_user(_this, result, GUILD_BATTLE__CNormalGuildBattleStateDivideGetTerm6_next);
            };
            void GUILD_BATTLE__CNormalGuildBattleStateDividedtor_CNormalGuildBattleStateDivide8_wrapper(struct GUILD_BATTLE::CNormalGuildBattleStateDivide* _this)
            {
               GUILD_BATTLE__CNormalGuildBattleStateDividedtor_CNormalGuildBattleStateDivide8_user(_this, GUILD_BATTLE__CNormalGuildBattleStateDividedtor_CNormalGuildBattleStateDivide8_next);
            };
            
            hook_record CNormalGuildBattleStateDivide_functions[] = {
            {   (LPVOID)0x1403f0d20L,
                (LPVOID *)&GUILD_BATTLE__CNormalGuildBattleStateDividector_CNormalGuildBattleStateDivide2_user,
                (LPVOID *)&GUILD_BATTLE__CNormalGuildBattleStateDividector_CNormalGuildBattleStateDivide2_next,
                (LPVOID)cast_pointer_function(GUILD_BATTLE__CNormalGuildBattleStateDividector_CNormalGuildBattleStateDivide2_wrapper),
                (LPVOID)cast_pointer_function((void(GUILD_BATTLE::CNormalGuildBattleStateDivide::*)())&GUILD_BATTLE::CNormalGuildBattleStateDivide::ctor_CNormalGuildBattleStateDivide) },
            {   (LPVOID)0x1403f0d70L,
                (LPVOID *)&GUILD_BATTLE__CNormalGuildBattleStateDivideFin4_user,
                (LPVOID *)&GUILD_BATTLE__CNormalGuildBattleStateDivideFin4_next,
                (LPVOID)cast_pointer_function(GUILD_BATTLE__CNormalGuildBattleStateDivideFin4_wrapper),
                (LPVOID)cast_pointer_function((int(GUILD_BATTLE::CNormalGuildBattleStateDivide::*)(struct GUILD_BATTLE::CNormalGuildBattle*))&GUILD_BATTLE::CNormalGuildBattleStateDivide::Fin) },
            {   (LPVOID)0x140080160L,
                (LPVOID *)&GUILD_BATTLE__CNormalGuildBattleStateDivideGetTerm6_user,
                (LPVOID *)&GUILD_BATTLE__CNormalGuildBattleStateDivideGetTerm6_next,
                (LPVOID)cast_pointer_function(GUILD_BATTLE__CNormalGuildBattleStateDivideGetTerm6_wrapper),
                (LPVOID)cast_pointer_function((struct ATL::CTimeSpan*(GUILD_BATTLE::CNormalGuildBattleStateDivide::*)(struct ATL::CTimeSpan*))&GUILD_BATTLE::CNormalGuildBattleStateDivide::GetTerm) },
            {   (LPVOID)0x140080100L,
                (LPVOID *)&GUILD_BATTLE__CNormalGuildBattleStateDividedtor_CNormalGuildBattleStateDivide8_user,
                (LPVOID *)&GUILD_BATTLE__CNormalGuildBattleStateDividedtor_CNormalGuildBattleStateDivide8_next,
                (LPVOID)cast_pointer_function(GUILD_BATTLE__CNormalGuildBattleStateDividedtor_CNormalGuildBattleStateDivide8_wrapper),
                (LPVOID)cast_pointer_function((void(GUILD_BATTLE::CNormalGuildBattleStateDivide::*)())&GUILD_BATTLE::CNormalGuildBattleStateDivide::dtor_CNormalGuildBattleStateDivide) },
            
            };
            
        }; // end namespace detail
    }; // end namespace GUILD_BATTLE
END_ATF_NAMESPACE
