// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "ATL__CTimeSpan.hpp"
#include "GUILD_BATTLE__CGuildBattle.hpp"
#include "GUILD_BATTLE__CGuildBattleState.hpp"
#include "GUILD_BATTLE__CGuildBattleStateListVtbl.hpp"


START_ATF_NAMESPACE
    namespace GUILD_BATTLE
    {
        #pragma pack(push, 8)
        struct CGuildBattleStateList
        {
            enum GBS_LOOP_TYPE
            {
                GBS_ONCE = 0x0,
                GBS_LOOP = 0x1,
                GBS_COUNT = 0x2,
                GBS_MAX = 0x3,
            };
            CGuildBattleStateListVtbl *vfptr;
            int m_iForceAdvance;
            int m_iState;
            CGuildBattleState *m_pkNextState;
            CGuildBattleState *m_pkCurState;
            int STATE_MAX;
            unsigned int m_uiLoopCnt;
            unsigned int m_uiCurLoopCnt;
            GBS_LOOP_TYPE m_eLoopType;
            bool m_bEnter;
        public:
            void Advance(int iAdvance)
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleStateList*, int);
                (org_ptr(0x1403df610L))(this, iAdvance);
            };
            CGuildBattleStateList(int iStateMax, int iLoopType, unsigned int uiLoopCnt)
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleStateList*, int, int, unsigned int);
                (org_ptr(0x1403def90L))(this, iStateMax, iLoopType, uiLoopCnt);
            };
            void ctor_CGuildBattleStateList(int iStateMax, int iLoopType, unsigned int uiLoopCnt)
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleStateList*, int, int, unsigned int);
                (org_ptr(0x1403def90L))(this, iStateMax, iLoopType, uiLoopCnt);
            };
            int CheckLoop()
            {
                using org_ptr = int (WINAPIV*)(struct CGuildBattleStateList*);
                return (org_ptr(0x1403df4d0L))(this);
            };
            void Clear()
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleStateList*);
                (org_ptr(0x1403df030L))(this);
            };
            void ForceNext()
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleStateList*);
                (org_ptr(0x1403df6a0L))(this);
            };
            struct ATL::CTimeSpan* GetTerm(struct ATL::CTimeSpan* result)
            {
                using org_ptr = struct ATL::CTimeSpan* (WINAPIV*)(struct CGuildBattleStateList*, struct ATL::CTimeSpan*);
                return (org_ptr(0x1403df470L))(this, result);
            };
            int Goto()
            {
                using org_ptr = int (WINAPIV*)(struct CGuildBattleStateList*);
                return (org_ptr(0x1403df2c0L))(this);
            };
            bool GotoState(int iState)
            {
                using org_ptr = bool (WINAPIV*)(struct CGuildBattleStateList*, int);
                return (org_ptr(0x1403f3370L))(this, iState);
            };
            bool IsEmpty()
            {
                using org_ptr = bool (WINAPIV*)(struct CGuildBattleStateList*);
                return (org_ptr(0x1403df8e0L))(this);
            };
            bool IsProc()
            {
                using org_ptr = bool (WINAPIV*)(struct CGuildBattleStateList*);
                return (org_ptr(0x1403d9250L))(this);
            };
            void Log(char* szMsg)
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleStateList*, char*);
                (org_ptr(0x1403df340L))(this, szMsg);
            };
            int Next(bool bForce)
            {
                using org_ptr = int (WINAPIV*)(struct CGuildBattleStateList*, bool);
                return (org_ptr(0x1403df220L))(this, bForce);
            };
            void Process(struct CGuildBattle* pkBattle)
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleStateList*, struct CGuildBattle*);
                (org_ptr(0x1403df090L))(this, pkBattle);
            };
            void SetNextState()
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleStateList*);
                (org_ptr(0x14007f830L))(this);
            };
            void SetReady()
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleStateList*);
                (org_ptr(0x1403eb0d0L))(this);
            };
            void SetWait()
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleStateList*);
                (org_ptr(0x1403eb110L))(this);
            };
            ~CGuildBattleStateList()
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleStateList*);
                (org_ptr(0x14007f810L))(this);
            };
            void dtor_CGuildBattleStateList()
            {
                using org_ptr = void (WINAPIV*)(struct CGuildBattleStateList*);
                (org_ptr(0x14007f810L))(this);
            };
        };
        #pragma pack(pop)
    }; // end namespace GUILD_BATTLE
END_ATF_NAMESPACE
