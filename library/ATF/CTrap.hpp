// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CAttack.hpp"
#include "CCharacter.hpp"
#include "CPlayer.hpp"
#include "_object_id.hpp"
#include "_trap_create_setdata.hpp"


START_ATF_NAMESPACE
    struct  CTrap : CCharacter
    {
        int m_nHP;
        CPlayer *m_pMaster;
        char m_byRaceCode;
        unsigned int m_dwMasterSerial;
        char m_wszMasterName[17];
        char m_aszMasterName[17];
        long double m_dMasterPvPPoint;
        unsigned int m_dwStartMakeTime;
        bool m_bComplete;
        bool m_bBreakTransparBuffer;
        unsigned int m_dwLastDestroyTime;
        int m_nTrapMaxAttackPnt;
    public:
        void Attack(struct CCharacter* pTarget)
        {
            using org_ptr = void (WINAPIV*)(struct CTrap*, struct CCharacter*);
            (org_ptr(0x14013ebf0L))(this, pTarget);
        };
        int AttackableHeight()
        {
            using org_ptr = int (WINAPIV*)(struct CTrap*);
            return (org_ptr(0x1401412d0L))(this);
        };
        CTrap()
        {
            using org_ptr = void (WINAPIV*)(struct CTrap*);
            (org_ptr(0x14013e7a0L))(this);
        };
        void ctor_CTrap()
        {
            using org_ptr = void (WINAPIV*)(struct CTrap*);
            (org_ptr(0x14013e7a0L))(this);
        };
        void CheckTranspar()
        {
            using org_ptr = void (WINAPIV*)(struct CTrap*);
            (org_ptr(0x14013ef00L))(this);
        };
        bool Create(struct _trap_create_setdata* pData)
        {
            using org_ptr = bool (WINAPIV*)(struct CTrap*, struct _trap_create_setdata*);
            return (org_ptr(0x14013e960L))(this, pData);
        };
        bool Destroy(char byDesType)
        {
            using org_ptr = bool (WINAPIV*)(struct CTrap*, char);
            return (org_ptr(0x14013eb10L))(this, byDesType);
        };
        int GetAttackDP()
        {
            using org_ptr = int (WINAPIV*)(struct CTrap*);
            return (org_ptr(0x1401412b0L))(this);
        };
        float GetAttackRange()
        {
            using org_ptr = float (WINAPIV*)(struct CTrap*);
            return (org_ptr(0x140141070L))(this);
        };
        int GetDefFC(int nAttactPart, struct CCharacter* pAttChar, int* pnConvertPart)
        {
            using org_ptr = int (WINAPIV*)(struct CTrap*, int, struct CCharacter*, int*);
            return (org_ptr(0x1401410c0L))(this, nAttactPart, pAttChar, pnConvertPart);
        };
        float GetDefFacing(int nPart)
        {
            using org_ptr = float (WINAPIV*)(struct CTrap*, int);
            return (org_ptr(0x140141210L))(this, nPart);
        };
        float GetDefGap(int nPart)
        {
            using org_ptr = float (WINAPIV*)(struct CTrap*, int);
            return (org_ptr(0x1401411c0L))(this, nPart);
        };
        int GetDefSkill(bool bBackAttack)
        {
            using org_ptr = int (WINAPIV*)(struct CTrap*, bool);
            return (org_ptr(0x140141110L))(this, bBackAttack);
        };
        int GetFireTol()
        {
            using org_ptr = int (WINAPIV*)(struct CTrap*);
            return (org_ptr(0x140141140L))(this);
        };
        int GetGenAttackProb(struct CCharacter* pDst, int nPart, bool bBackAttack)
        {
            using org_ptr = int (WINAPIV*)(struct CTrap*, struct CCharacter*, int, bool);
            return (org_ptr(0x14013f290L))(this, pDst, nPart, bBackAttack);
        };
        int GetHP()
        {
            using org_ptr = int (WINAPIV*)(struct CTrap*);
            return (org_ptr(0x140140ff0L))(this);
        };
        int GetLevel()
        {
            using org_ptr = int (WINAPIV*)(struct CTrap*);
            return (org_ptr(0x1401410f0L))(this);
        };
        int GetMaxHP()
        {
            using org_ptr = int (WINAPIV*)(struct CTrap*);
            return (org_ptr(0x140141010L))(this);
        };
        static unsigned int GetNewSerial()
        {
            using org_ptr = unsigned int (WINAPIV*)();
            return (org_ptr(0x1401413a0L))();
        };
        char* GetObjName()
        {
            using org_ptr = char* (WINAPIV*)(struct CTrap*);
            return (org_ptr(0x14013f3d0L))(this);
        };
        int GetObjRace()
        {
            using org_ptr = int (WINAPIV*)(struct CTrap*);
            return (org_ptr(0x140141310L))(this);
        };
        int GetSoilTol()
        {
            using org_ptr = int (WINAPIV*)(struct CTrap*);
            return (org_ptr(0x140141180L))(this);
        };
        int GetWaterTol()
        {
            using org_ptr = int (WINAPIV*)(struct CTrap*);
            return (org_ptr(0x140141160L))(this);
        };
        float GetWeaponAdjust()
        {
            using org_ptr = float (WINAPIV*)(struct CTrap*);
            return (org_ptr(0x140141260L))(this);
        };
        int GetWeaponClass()
        {
            using org_ptr = int (WINAPIV*)(struct CTrap*);
            return (org_ptr(0x1401412a0L))(this);
        };
        float GetWidth()
        {
            using org_ptr = float (WINAPIV*)(struct CTrap*);
            return (org_ptr(0x140141030L))(this);
        };
        int GetWindTol()
        {
            using org_ptr = int (WINAPIV*)(struct CTrap*);
            return (org_ptr(0x1401411a0L))(this);
        };
        bool Init(struct _object_id* pID)
        {
            using org_ptr = bool (WINAPIV*)(struct CTrap*, struct _object_id*);
            return (org_ptr(0x14013e850L))(this, pID);
        };
        bool IsBeAttackedAble(bool bFirst)
        {
            using org_ptr = bool (WINAPIV*)(struct CTrap*, bool);
            return (org_ptr(0x1401412e0L))(this, bFirst);
        };
        static bool IsHaveEmpty()
        {
            using org_ptr = bool (WINAPIV*)();
            return (org_ptr(0x140140440L))();
        };
        bool IsInTown()
        {
            using org_ptr = bool (WINAPIV*)(struct CTrap*);
            return (org_ptr(0x140141300L))(this);
        };
        void Loop()
        {
            using org_ptr = void (WINAPIV*)(struct CTrap*);
            (org_ptr(0x14013f040L))(this);
        };
        void MasterNetClose(long double dPvPPoint)
        {
            using org_ptr = void (WINAPIV*)(struct CTrap*, long double);
            (org_ptr(0x14013ef90L))(this, dPvPPoint);
        };
        void MasterReStart(struct CPlayer* pMaster)
        {
            using org_ptr = void (WINAPIV*)(struct CTrap*, struct CPlayer*);
            (org_ptr(0x14013efd0L))(this, pMaster);
        };
        void OutOfSec()
        {
            using org_ptr = void (WINAPIV*)(struct CTrap*);
            (org_ptr(0x140140fa0L))(this);
        };
        void RecvKillMessage(struct CCharacter* pDier)
        {
            using org_ptr = void (WINAPIV*)(struct CTrap*, struct CCharacter*);
            (org_ptr(0x14013f4f0L))(this, pDier);
        };
        struct CCharacter* SearchNearEnemy()
        {
            using org_ptr = struct CCharacter* (WINAPIV*)(struct CTrap*);
            return (org_ptr(0x14013fe20L))(this);
        };
        void SendMsg_AlterTranspar(bool bTranspar)
        {
            using org_ptr = void (WINAPIV*)(struct CTrap*, bool);
            (org_ptr(0x14013fd90L))(this, bTranspar);
        };
        void SendMsg_Attack(struct CAttack* pAt)
        {
            using org_ptr = void (WINAPIV*)(struct CTrap*, struct CAttack*);
            (org_ptr(0x14013fa00L))(this, pAt);
        };
        void SendMsg_Create()
        {
            using org_ptr = void (WINAPIV*)(struct CTrap*);
            (org_ptr(0x14013f7f0L))(this);
        };
        void SendMsg_Destroy(char byDesType)
        {
            using org_ptr = void (WINAPIV*)(struct CTrap*, char);
            (org_ptr(0x14013f900L))(this, byDesType);
        };
        void SendMsg_FixPosition(int n)
        {
            using org_ptr = void (WINAPIV*)(struct CTrap*, int);
            (org_ptr(0x14013fb80L))(this, n);
        };
        void SendMsg_TrapCompleteInform()
        {
            using org_ptr = void (WINAPIV*)(struct CTrap*);
            (org_ptr(0x14013fd10L))(this);
        };
        int SetDamage(int nDam, struct CCharacter* pDst, int nDstLv, bool bCrt, int nAttackType, unsigned int dwAttackSerial, bool bJadeReturn)
        {
            using org_ptr = int (WINAPIV*)(struct CTrap*, int, struct CCharacter*, int, bool, int, unsigned int, bool);
            return (org_ptr(0x14013f1c0L))(this, nDam, pDst, nDstLv, bCrt, nAttackType, dwAttackSerial, bJadeReturn);
        };
        ~CTrap()
        {
            using org_ptr = void (WINAPIV*)(struct CTrap*);
            (org_ptr(0x14013e800L))(this);
        };
        void dtor_CTrap()
        {
            using org_ptr = void (WINAPIV*)(struct CTrap*);
            (org_ptr(0x14013e800L))(this);
        };
    };
END_ATF_NAMESPACE
