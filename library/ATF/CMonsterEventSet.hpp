// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CMonsterEventSetVtbl.hpp"
#include "CPlayer.hpp"
#include "_FILETIME.hpp"
#include "_event_set.hpp"
#include "_event_set_looting.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 8)
    struct CMonsterEventSet
    {
        CMonsterEventSetVtbl *vfptr;
        _event_set m_EventSet[10];
        _event_set_looting m_EventSetLootingList[100];
        _FILETIME m_ftWrite;
        _FILETIME m_ftLootingWrite;
        bool m_bLoadEventLooting;
    public:
        CMonsterEventSet()
        {
            using org_ptr = void (WINAPIV*)(struct CMonsterEventSet*);
            (org_ptr(0x1402a7920L))(this);
        };
        void ctor_CMonsterEventSet()
        {
            using org_ptr = void (WINAPIV*)(struct CMonsterEventSet*);
            (org_ptr(0x1402a7920L))(this);
        };
        void CheckEventSetRespawn()
        {
            using org_ptr = void (WINAPIV*)(struct CMonsterEventSet*);
            (org_ptr(0x1402a8a90L))(this);
        };
        struct _event_set* GetEmptyEventSet()
        {
            using org_ptr = struct _event_set* (WINAPIV*)(struct CMonsterEventSet*);
            return (org_ptr(0x1402a8fa0L))(this);
        };
        struct _event_set_looting* GetEvenSetLooting(char* pszCode)
        {
            using org_ptr = struct _event_set_looting* (WINAPIV*)(struct CMonsterEventSet*, char*);
            return (org_ptr(0x1402a90b0L))(this, pszCode);
        };
        struct _event_set::_monster_set* GetMonsterSet(struct _event_set* pEventSet)
        {
            using org_ptr = struct _event_set::_monster_set* (WINAPIV*)(struct CMonsterEventSet*, struct _event_set*);
            return (org_ptr(0x1402a9030L))(this, pEventSet);
        };
        bool IsINIFileChanged(char* pszFileName, struct _FILETIME ftCurr)
        {
            using org_ptr = bool (WINAPIV*)(struct CMonsterEventSet*, char*, struct _FILETIME);
            return (org_ptr(0x1402a9150L))(this, pszFileName, ftCurr);
        };
        bool LoadEventSet(char* pwszErrCode)
        {
            using org_ptr = bool (WINAPIV*)(struct CMonsterEventSet*, char*);
            return (org_ptr(0x1402a79e0L))(this, pwszErrCode);
        };
        bool LoadEventSetLooting()
        {
            using org_ptr = bool (WINAPIV*)(struct CMonsterEventSet*);
            return (org_ptr(0x1402a91e0L))(this);
        };
        bool StartEventSet(char* pszEventCode, char* pwszErrCode, struct CPlayer* pOne)
        {
            using org_ptr = bool (WINAPIV*)(struct CMonsterEventSet*, char*, char*, struct CPlayer*);
            return (org_ptr(0x1402a8210L))(this, pszEventCode, pwszErrCode, pOne);
        };
        bool StopEventSet(char* pszEventCode, char* pwszErrCode)
        {
            using org_ptr = bool (WINAPIV*)(struct CMonsterEventSet*, char*, char*);
            return (org_ptr(0x1402a8870L))(this, pszEventCode, pwszErrCode);
        };
        ~CMonsterEventSet()
        {
            using org_ptr = void (WINAPIV*)(struct CMonsterEventSet*);
            (org_ptr(0x1402a79c0L))(this);
        };
        void dtor_CMonsterEventSet()
        {
            using org_ptr = void (WINAPIV*)(struct CMonsterEventSet*);
            (org_ptr(0x1402a79c0L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
