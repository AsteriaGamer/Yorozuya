// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CRFMonsterAIMgr_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::CRFMonsterAIMgrctor_CRFMonsterAIMgr2_ptr CRFMonsterAIMgrctor_CRFMonsterAIMgr2_next(nullptr);
        static info::CRFMonsterAIMgrctor_CRFMonsterAIMgr2_clbk CRFMonsterAIMgrctor_CRFMonsterAIMgr2_user(nullptr);
        static info::CRFMonsterAIMgrDestory4_ptr CRFMonsterAIMgrDestory4_next(nullptr);
        static info::CRFMonsterAIMgrDestory4_clbk CRFMonsterAIMgrDestory4_user(nullptr);
        static info::CRFMonsterAIMgrGetStateTBL6_ptr CRFMonsterAIMgrGetStateTBL6_next(nullptr);
        static info::CRFMonsterAIMgrGetStateTBL6_clbk CRFMonsterAIMgrGetStateTBL6_user(nullptr);
        static info::CRFMonsterAIMgrInstance8_ptr CRFMonsterAIMgrInstance8_next(nullptr);
        static info::CRFMonsterAIMgrInstance8_clbk CRFMonsterAIMgrInstance8_user(nullptr);
        static info::CRFMonsterAIMgrdtor_CRFMonsterAIMgr12_ptr CRFMonsterAIMgrdtor_CRFMonsterAIMgr12_next(nullptr);
        static info::CRFMonsterAIMgrdtor_CRFMonsterAIMgr12_clbk CRFMonsterAIMgrdtor_CRFMonsterAIMgr12_user(nullptr);
        
        static void CRFMonsterAIMgrctor_CRFMonsterAIMgr2_wrapper(struct CRFMonsterAIMgr* _this)
        {
           CRFMonsterAIMgrctor_CRFMonsterAIMgr2_user(_this, CRFMonsterAIMgrctor_CRFMonsterAIMgr2_next);
        };
        static void CRFMonsterAIMgrDestory4_wrapper()
        {
           CRFMonsterAIMgrDestory4_user(CRFMonsterAIMgrDestory4_next);
        };
        static struct UsPoint* CRFMonsterAIMgrGetStateTBL6_wrapper(struct CRFMonsterAIMgr* _this, struct UsPoint* result, int nIndex)
        {
           return CRFMonsterAIMgrGetStateTBL6_user(_this, result, nIndex, CRFMonsterAIMgrGetStateTBL6_next);
        };
        static struct CRFMonsterAIMgr* CRFMonsterAIMgrInstance8_wrapper()
        {
           return CRFMonsterAIMgrInstance8_user(CRFMonsterAIMgrInstance8_next);
        };
        static void CRFMonsterAIMgrdtor_CRFMonsterAIMgr12_wrapper(struct CRFMonsterAIMgr* _this)
        {
           CRFMonsterAIMgrdtor_CRFMonsterAIMgr12_user(_this, CRFMonsterAIMgrdtor_CRFMonsterAIMgr12_next);
        };
        
        static hook_record CRFMonsterAIMgr_functions[] = {
        {   (LPVOID)0x14014c1e0L,
            (LPVOID *)&CRFMonsterAIMgrctor_CRFMonsterAIMgr2_user,
            (LPVOID *)&CRFMonsterAIMgrctor_CRFMonsterAIMgr2_next,
            (LPVOID)cast_pointer_function(CRFMonsterAIMgrctor_CRFMonsterAIMgr2_wrapper),
            (LPVOID)cast_pointer_function((void(CRFMonsterAIMgr::*)())&CRFMonsterAIMgr::ctor_CRFMonsterAIMgr) },
        {   (LPVOID)0x140203300L,
            (LPVOID *)&CRFMonsterAIMgrDestory4_user,
            (LPVOID *)&CRFMonsterAIMgrDestory4_next,
            (LPVOID)cast_pointer_function(CRFMonsterAIMgrDestory4_wrapper),
            (LPVOID)cast_pointer_function((void(*)())&CRFMonsterAIMgr::Destory) },
        {   (LPVOID)0x14014c040L,
            (LPVOID *)&CRFMonsterAIMgrGetStateTBL6_user,
            (LPVOID *)&CRFMonsterAIMgrGetStateTBL6_next,
            (LPVOID)cast_pointer_function(CRFMonsterAIMgrGetStateTBL6_wrapper),
            (LPVOID)cast_pointer_function((struct UsPoint*(CRFMonsterAIMgr::*)(struct UsPoint*, int))&CRFMonsterAIMgr::GetStateTBL) },
        {   (LPVOID)0x14014c100L,
            (LPVOID *)&CRFMonsterAIMgrInstance8_user,
            (LPVOID *)&CRFMonsterAIMgrInstance8_next,
            (LPVOID)cast_pointer_function(CRFMonsterAIMgrInstance8_wrapper),
            (LPVOID)cast_pointer_function((struct CRFMonsterAIMgr*(*)())&CRFMonsterAIMgr::Instance) },
        {   (LPVOID)0x140203400L,
            (LPVOID *)&CRFMonsterAIMgrdtor_CRFMonsterAIMgr12_user,
            (LPVOID *)&CRFMonsterAIMgrdtor_CRFMonsterAIMgr12_next,
            (LPVOID)cast_pointer_function(CRFMonsterAIMgrdtor_CRFMonsterAIMgr12_wrapper),
            (LPVOID)cast_pointer_function((void(CRFMonsterAIMgr::*)())&CRFMonsterAIMgr::dtor_CRFMonsterAIMgr) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
