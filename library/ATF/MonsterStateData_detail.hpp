// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "MonsterStateData_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::MonsterStateDataGetStateChunk2_ptr MonsterStateDataGetStateChunk2_next(nullptr);
        info::MonsterStateDataGetStateChunk2_clbk MonsterStateDataGetStateChunk2_user(nullptr);
        info::MonsterStateDatactor_MonsterStateData4_ptr MonsterStateDatactor_MonsterStateData4_next(nullptr);
        info::MonsterStateDatactor_MonsterStateData4_clbk MonsterStateDatactor_MonsterStateData4_user(nullptr);
        
        uint16_t MonsterStateDataGetStateChunk2_wrapper(struct MonsterStateData* _this)
        {
           return MonsterStateDataGetStateChunk2_user(_this, MonsterStateDataGetStateChunk2_next);
        };
        void MonsterStateDatactor_MonsterStateData4_wrapper(struct MonsterStateData* _this)
        {
           MonsterStateDatactor_MonsterStateData4_user(_this, MonsterStateDatactor_MonsterStateData4_next);
        };
        
        hook_record MonsterStateData_functions[] = {
        {   (LPVOID)0x14014c450L,
            (LPVOID *)&MonsterStateDataGetStateChunk2_user,
            (LPVOID *)&MonsterStateDataGetStateChunk2_next,
            (LPVOID)cast_pointer_function(MonsterStateDataGetStateChunk2_wrapper),
            (LPVOID)cast_pointer_function((uint16_t(MonsterStateData::*)())&MonsterStateData::GetStateChunk) },
        {   (LPVOID)0x14014b700L,
            (LPVOID *)&MonsterStateDatactor_MonsterStateData4_user,
            (LPVOID *)&MonsterStateDatactor_MonsterStateData4_next,
            (LPVOID)cast_pointer_function(MonsterStateDatactor_MonsterStateData4_wrapper),
            (LPVOID)cast_pointer_function((void(MonsterStateData::*)())&MonsterStateData::ctor_MonsterStateData) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
