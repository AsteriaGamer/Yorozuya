// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "lua_tinker__lua2object.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__lua2objectinvoke2_ptr = struct CMonster* (WINAPIV*)(struct lua_tinker::lua2object<CMonster *>*, lua_State*, int);
            using lua_tinker__lua2objectinvoke2_clbk = struct CMonster* (WINAPIV*)(struct lua_tinker::lua2object<CMonster *>*, lua_State*, int, lua_tinker__lua2objectinvoke2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__lua2object.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__lua2objectinvoke2_ptr = struct CLuaEventNode* (WINAPIV*)(struct lua_tinker::lua2object<CLuaEventNode *>*, lua_State*, int);
            using lua_tinker__lua2objectinvoke2_clbk = struct CLuaEventNode* (WINAPIV*)(struct lua_tinker::lua2object<CLuaEventNode *>*, lua_State*, int, lua_tinker__lua2objectinvoke2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__lua2object.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__lua2objectinvoke2_ptr = struct CLuaSignalReActor* (WINAPIV*)(struct lua_tinker::lua2object<CLuaSignalReActor *>*, lua_State*, int);
            using lua_tinker__lua2objectinvoke2_clbk = struct CLuaSignalReActor* (WINAPIV*)(struct lua_tinker::lua2object<CLuaSignalReActor *>*, lua_State*, int, lua_tinker__lua2objectinvoke2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__lua2object.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__lua2objectinvoke2_ptr = struct CLuaScript* (WINAPIV*)(struct lua_tinker::lua2object<CLuaScript *>*, lua_State*, int);
            using lua_tinker__lua2objectinvoke2_clbk = struct CLuaScript* (WINAPIV*)(struct lua_tinker::lua2object<CLuaScript *>*, lua_State*, int, lua_tinker__lua2objectinvoke2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__lua2object.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__lua2objectinvoke2_ptr = struct LuaParam3* (WINAPIV*)(struct lua_tinker::lua2object<LuaParam3 *>*, lua_State*, int);
            using lua_tinker__lua2objectinvoke2_clbk = struct LuaParam3* (WINAPIV*)(struct lua_tinker::lua2object<LuaParam3 *>*, lua_State*, int, lua_tinker__lua2objectinvoke2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__lua2object.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__lua2objectinvoke2_ptr = struct CLuaEventMgr* (WINAPIV*)(struct lua_tinker::lua2object<CLuaEventMgr *>*, lua_State*, int);
            using lua_tinker__lua2objectinvoke2_clbk = struct CLuaEventMgr* (WINAPIV*)(struct lua_tinker::lua2object<CLuaEventMgr *>*, lua_State*, int, lua_tinker__lua2objectinvoke2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "lua_tinker__lua2object.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        namespace info
        {
            using lua_tinker__lua2objectinvoke2_ptr = struct LuaParam3* (WINAPIV*)(struct LuaParam3*, lua_State*, int);
            using lua_tinker__lua2objectinvoke2_clbk = struct LuaParam3* (WINAPIV*)(struct LuaParam3*, lua_State*, int, lua_tinker__lua2objectinvoke2_ptr);
            
        }; // end namespace info
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
