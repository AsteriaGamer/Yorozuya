// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CRtc_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::CRtcctor_CRtc2_ptr CRtcctor_CRtc2_next(nullptr);
        info::CRtcctor_CRtc2_clbk CRtcctor_CRtc2_user(nullptr);
        info::CRtcGetIntance4_ptr CRtcGetIntance4_next(nullptr);
        info::CRtcGetIntance4_clbk CRtcGetIntance4_user(nullptr);
        info::CRtcRTC_Fn6_ptr CRtcRTC_Fn6_next(nullptr);
        info::CRtcRTC_Fn6_clbk CRtcRTC_Fn6_user(nullptr);
        info::CRtcReg_Fn8_ptr CRtcReg_Fn8_next(nullptr);
        info::CRtcReg_Fn8_clbk CRtcReg_Fn8_user(nullptr);
        info::CRtcdtor_CRtc10_ptr CRtcdtor_CRtc10_next(nullptr);
        info::CRtcdtor_CRtc10_clbk CRtcdtor_CRtc10_user(nullptr);
        
        void CRtcctor_CRtc2_wrapper(struct CRtc* _this)
        {
           CRtcctor_CRtc2_user(_this, CRtcctor_CRtc2_next);
        };
        struct CRtc* CRtcGetIntance4_wrapper()
        {
           return CRtcGetIntance4_user(CRtcGetIntance4_next);
        };
        int CRtcRTC_Fn6_wrapper(int errType, wchar_t* file, int line, wchar_t* module, wchar_t* format)
        {
           return CRtcRTC_Fn6_user(errType, file, line, module, format, CRtcRTC_Fn6_next);
        };
        void CRtcReg_Fn8_wrapper(struct CRtc* _this)
        {
           CRtcReg_Fn8_user(_this, CRtcReg_Fn8_next);
        };
        void CRtcdtor_CRtc10_wrapper(struct CRtc* _this)
        {
           CRtcdtor_CRtc10_user(_this, CRtcdtor_CRtc10_next);
        };
        
        hook_record CRtc_functions[] = {
        {   (LPVOID)0x14043eda0L,
            (LPVOID *)&CRtcctor_CRtc2_user,
            (LPVOID *)&CRtcctor_CRtc2_next,
            (LPVOID)cast_pointer_function(CRtcctor_CRtc2_wrapper),
            (LPVOID)cast_pointer_function((void(CRtc::*)())&CRtc::ctor_CRtc) },
        {   (LPVOID)0x140203820L,
            (LPVOID *)&CRtcGetIntance4_user,
            (LPVOID *)&CRtcGetIntance4_next,
            (LPVOID)cast_pointer_function(CRtcGetIntance4_wrapper),
            (LPVOID)cast_pointer_function((struct CRtc*(*)())&CRtc::GetIntance) },
        {   (LPVOID)0x14043edd0L,
            (LPVOID *)&CRtcRTC_Fn6_user,
            (LPVOID *)&CRtcRTC_Fn6_next,
            (LPVOID)cast_pointer_function(CRtcRTC_Fn6_wrapper),
            (LPVOID)cast_pointer_function((int(*)(int, wchar_t*, int, wchar_t*, wchar_t*))&CRtc::RTC_Fn) },
        {   (LPVOID)0x14043f040L,
            (LPVOID *)&CRtcReg_Fn8_user,
            (LPVOID *)&CRtcReg_Fn8_next,
            (LPVOID)cast_pointer_function(CRtcReg_Fn8_wrapper),
            (LPVOID)cast_pointer_function((void(CRtc::*)())&CRtc::Reg_Fn) },
        {   (LPVOID)0x14043edc0L,
            (LPVOID *)&CRtcdtor_CRtc10_user,
            (LPVOID *)&CRtcdtor_CRtc10_next,
            (LPVOID)cast_pointer_function(CRtcdtor_CRtc10_wrapper),
            (LPVOID)cast_pointer_function((void(CRtc::*)())&CRtc::dtor_CRtc) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
