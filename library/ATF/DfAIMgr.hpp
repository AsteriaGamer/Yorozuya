// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CCharacter.hpp"
#include "CMonster.hpp"
#include "CMonsterAI.hpp"
#include "CMonsterSkill.hpp"
#include "UsStateTBL.hpp"
#include "Us_HFSM.hpp"


START_ATF_NAMESPACE
    struct  DfAIMgr : UsStateTBL
    {
    public:
        static void Action_Attack_OnLoop(struct Us_HFSM* pHFS, unsigned int dwEvent, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*);
            (org_ptr(0x1401518e0L))(pHFS, dwEvent, lpParam);
        };
        static void Action_Change_Handler(struct Us_HFSM* pHFS, unsigned int dwEvent, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*);
            (org_ptr(0x1401514b0L))(pHFS, dwEvent, lpParam);
        };
        static void Action_Patrol_OnLoop(struct Us_HFSM* pHFS, unsigned int dwEvent, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*);
            (org_ptr(0x140151740L))(pHFS, dwEvent, lpParam);
        };
        static void Action_Runaway_OnLoop(struct Us_HFSM* pHFS, unsigned int dwEvent, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*);
            (org_ptr(0x140151c40L))(pHFS, dwEvent, lpParam);
        };
        static void Action_Wait_OnLoop(struct Us_HFSM* pHFS, unsigned int dwEvent, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*);
            (org_ptr(0x1401516b0L))(pHFS, dwEvent, lpParam);
        };
        static void Assist_OnChange(struct Us_HFSM* pHFS, unsigned int dwEvent, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*);
            (org_ptr(0x140151f30L))(pHFS, dwEvent, lpParam);
        };
        static void Assist_OnLoop(struct Us_HFSM* pHFS, unsigned int dwEvent, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*);
            (org_ptr(0x1401520c0L))(pHFS, dwEvent, lpParam);
        };
        static void Atp_Lost_Handler(struct Us_HFSM* pHFS, unsigned int dwEvent, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*);
            (org_ptr(0x140150910L))(pHFS, dwEvent, lpParam);
        };
        static void Atp_SearchStart_OnLoop(struct Us_HFSM* p, unsigned int dwEvent, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*);
            (org_ptr(0x1401506c0L))(p, dwEvent, lpParam);
        };
        static void Atp_Searched_Handler(struct Us_HFSM* pHFS, unsigned int dwEvent, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*);
            (org_ptr(0x1401507f0L))(pHFS, dwEvent, lpParam);
        };
        static void ChangeTargetPos(struct CMonster* pMon, float* pTarPos)
        {
            using org_ptr = void (WINAPIV*)(struct CMonster*, float*);
            (org_ptr(0x140150e20L))(pMon, pTarPos);
        };
        static int CheckAlienation(struct CMonster* pMon)
        {
            using org_ptr = int (WINAPIV*)(struct CMonster*);
            return (org_ptr(0x140151260L))(pMon);
        };
        static int CheckEmotionBad(struct CMonster* pMon, struct CMonsterAI* pAI, int nDamage)
        {
            using org_ptr = int (WINAPIV*)(struct CMonster*, struct CMonsterAI*, int);
            return (org_ptr(0x140151090L))(pMon, pAI, nDamage);
        };
        static int CheckGen(struct CMonsterAI* pAI, struct CMonster* pMon)
        {
            using org_ptr = int (WINAPIV*)(struct CMonsterAI*, struct CMonster*);
            return (org_ptr(0x140152e40L))(pAI, pMon);
        };
        static int CheckMonArea_N_ChangeState(struct CMonsterAI* pAI, struct CMonster* pMon, int bAttackState)
        {
            using org_ptr = int (WINAPIV*)(struct CMonsterAI*, struct CMonster*, int);
            return (org_ptr(0x140153350L))(pAI, pMon, bAttackState);
        };
        static int CheckSPF(struct CMonsterAI* pAI, struct CMonster* pMon)
        {
            using org_ptr = int (WINAPIV*)(struct CMonsterAI*, struct CMonster*);
            return (org_ptr(0x140152150L))(pAI, pMon);
        };
        static int CheckSPFDelayTime(struct CMonsterAI* pAI, int nAttackType, unsigned int dwLoopTime)
        {
            using org_ptr = int (WINAPIV*)(struct CMonsterAI*, int, unsigned int);
            return (org_ptr(0x140151850L))(pAI, nAttackType, dwLoopTime);
        };
        static int CheckSPF_MON_MOTIVE_ATTACK_MODE_PASSAGE(struct CMonsterSkill* pSkill, int nMotiveValue, struct CMonsterAI* pAI, struct CMonster* pMon, struct CCharacter** ppTar)
        {
            using org_ptr = int (WINAPIV*)(struct CMonsterSkill*, int, struct CMonsterAI*, struct CMonster*, struct CCharacter**);
            return (org_ptr(0x140152c60L))(pSkill, nMotiveValue, pAI, pMon, ppTar);
        };
        static int CheckSPF_MON_MOTIVE_DF(struct CMonsterSkill* pSkill, int nMotiveValue, struct CMonsterAI* pAI, struct CMonster* pMon, struct CCharacter** ppTar)
        {
            using org_ptr = int (WINAPIV*)(struct CMonsterSkill*, int, struct CMonsterAI*, struct CMonster*, struct CCharacter**);
            return (org_ptr(0x1401525f0L))(pSkill, nMotiveValue, pAI, pMon, ppTar);
        };
        static int CheckSPF_MON_MOTIVE_MY_HP_DOWN(struct CMonsterSkill* pSkill, int nMotiveValue, struct CMonsterAI* pAI, struct CMonster* pMon, struct CCharacter** ppTar)
        {
            using org_ptr = int (WINAPIV*)(struct CMonsterSkill*, int, struct CMonsterAI*, struct CMonster*, struct CCharacter**);
            return (org_ptr(0x1401527a0L))(pSkill, nMotiveValue, pAI, pMon, ppTar);
        };
        static int CheckSPF_MON_MOTIVE_OTHER_HP_DOWN(struct CMonsterSkill* pSkill, int nMotiveValue, struct CMonsterAI* pAI, struct CMonster* pMon, struct CCharacter** ppTar)
        {
            using org_ptr = int (WINAPIV*)(struct CMonsterSkill*, int, struct CMonsterAI*, struct CMonster*, struct CCharacter**);
            return (org_ptr(0x140152900L))(pSkill, nMotiveValue, pAI, pMon, ppTar);
        };
        static void Condition_OnChange(struct Us_HFSM* pHFS, unsigned int dwEvent, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*);
            (org_ptr(0x140151e70L))(pHFS, dwEvent, lpParam);
        };
        static void Condition_OnLoop(struct Us_HFSM* pHFS, unsigned int dwEvent, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*);
            (org_ptr(0x140151c60L))(pHFS, dwEvent, lpParam);
        };
        DfAIMgr()
        {
            using org_ptr = void (WINAPIV*)(struct DfAIMgr*);
            (org_ptr(0x140155300L))(this);
        };
        void ctor_DfAIMgr()
        {
            using org_ptr = void (WINAPIV*)(struct DfAIMgr*);
            (org_ptr(0x140155300L))(this);
        };
        static void Emotion_OnChange(struct Us_HFSM* pHFS, unsigned int dwEvent, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*);
            (org_ptr(0x140153c90L))(pHFS, dwEvent, lpParam);
        };
        static void Emotion_OnLoop(struct Us_HFSM* pHFS, unsigned int dwEvent, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*);
            (org_ptr(0x140153b40L))(pHFS, dwEvent, lpParam);
        };
        static struct CCharacter* GetWisdomTarget(int nDstCaseType, struct CMonsterAI* pAI, struct CMonster* pMon)
        {
            using org_ptr = struct CCharacter* (WINAPIV*)(int, struct CMonsterAI*, struct CMonster*);
            return (org_ptr(0x140152570L))(nDstCaseType, pAI, pMon);
        };
        static void Mon_SearchStart_OnLoop(struct Us_HFSM* pHFS, unsigned int dwEvent, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*);
            (org_ptr(0x140150a50L))(pHFS, dwEvent, lpParam);
        };
        static void Mon_Searched_Handler(struct Us_HFSM* pHFS, unsigned int dwEvent, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*);
            (org_ptr(0x140150d50L))(pHFS, dwEvent, lpParam);
        };
        static void Mv_Go_OnLoop(struct Us_HFSM* pHFS, unsigned int dwEvent, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*);
            (org_ptr(0x140150d70L))(pHFS, dwEvent, lpParam);
        };
        static void Mv_Stop_Handler(struct Us_HFSM* pHFS, unsigned int dwEvent, void* lpParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*);
            (org_ptr(0x140150fc0L))(pHFS, dwEvent, lpParam);
        };
        static int OnDFInitHFSM(struct UsStateTBL* pStateTBL, struct Us_HFSM* pHFSM)
        {
            using org_ptr = int (WINAPIV*)(struct UsStateTBL*, struct Us_HFSM*);
            return (org_ptr(0x140153e80L))(pStateTBL, pHFSM);
        };
        static void OnDfExternCallFun(struct Us_HFSM* pHFS, unsigned int dwEvent, void* lpParam, int nParam)
        {
            using org_ptr = void (WINAPIV*)(struct Us_HFSM*, unsigned int, void*, int);
            (org_ptr(0x140153f30L))(pHFS, dwEvent, lpParam, nParam);
        };
        static int OnUsStateTBLInit()
        {
            using org_ptr = int (WINAPIV*)();
            return (org_ptr(0x14014fd10L))();
        };
        static bool SearchCharacterPath(struct CMonsterAI* pAI, struct CMonster* pMon, struct CCharacter* pTarget)
        {
            using org_ptr = bool (WINAPIV*)(struct CMonsterAI*, struct CMonster*, struct CCharacter*);
            return (org_ptr(0x140153070L))(pAI, pMon, pTarget);
        };
        static void SearchPatrollPath(struct CMonsterAI* pAI, struct CMonster* pMon)
        {
            using org_ptr = void (WINAPIV*)(struct CMonsterAI*, struct CMonster*);
            (org_ptr(0x1401532f0L))(pAI, pMon);
        };
        static int UseSkill_Target(struct CMonster* pMon, struct CCharacter* pTarget, struct CMonsterSkill* pSkill)
        {
            using org_ptr = int (WINAPIV*)(struct CMonster*, struct CCharacter*, struct CMonsterSkill*);
            return (org_ptr(0x140152460L))(pMon, pTarget, pSkill);
        };
        ~DfAIMgr()
        {
            using org_ptr = void (WINAPIV*)(struct DfAIMgr*);
            (org_ptr(0x1401553e0L))(this);
        };
        void dtor_DfAIMgr()
        {
            using org_ptr = void (WINAPIV*)(struct DfAIMgr*);
            (org_ptr(0x1401553e0L))(this);
        };
    };
END_ATF_NAMESPACE
