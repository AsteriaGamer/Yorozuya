// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CMoveMapLimitRightVtbl.hpp"
#include "CPlayer.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 8)
    struct CMoveMapLimitRight
    {
        enum FLAG_TYPE
        {
            FT_NOTIFY_FORCE_MOVE = 0x0,
            FT_MAX = 0x1,
        };
        CMoveMapLimitRightVtbl *vfptr;
        int m_iType;
    public:
        CMoveMapLimitRight(int iType)
        {
            using org_ptr = void (WINAPIV*)(struct CMoveMapLimitRight*, int);
            (org_ptr(0x1403ae460L))(this, iType);
        };
        void ctor_CMoveMapLimitRight(int iType)
        {
            using org_ptr = void (WINAPIV*)(struct CMoveMapLimitRight*, int);
            (org_ptr(0x1403ae460L))(this, iType);
        };
        void CleanUp()
        {
            using org_ptr = void (WINAPIV*)(struct CMoveMapLimitRight*);
            (org_ptr(0x1403ae4a0L))(this);
        };
        static struct CMoveMapLimitRight* Create(int iType)
        {
            using org_ptr = struct CMoveMapLimitRight* (WINAPIV*)(int);
            return (org_ptr(0x1403ac5e0L))(iType);
        };
        void CreateComplete(struct CPlayer* pkPlayer)
        {
            using org_ptr = void (WINAPIV*)(struct CMoveMapLimitRight*, struct CPlayer*);
            (org_ptr(0x1403ae4d0L))(this, pkPlayer);
        };
        int GetType()
        {
            using org_ptr = int (WINAPIV*)(struct CMoveMapLimitRight*);
            return (org_ptr(0x1403ae6b0L))(this);
        };
        bool IsHaveRight()
        {
            using org_ptr = bool (WINAPIV*)(struct CMoveMapLimitRight*);
            return (org_ptr(0x1403ae4f0L))(this);
        };
        void Load(struct CPlayer* pkPlayer)
        {
            using org_ptr = void (WINAPIV*)(struct CMoveMapLimitRight*, struct CPlayer*);
            (org_ptr(0x1403ae4b0L))(this, pkPlayer);
        };
        void LogIn(struct CPlayer* pkPlayer)
        {
            using org_ptr = void (WINAPIV*)(struct CMoveMapLimitRight*, struct CPlayer*);
            (org_ptr(0x1403ae4c0L))(this, pkPlayer);
        };
        void LogOut(struct CPlayer* pkPlayer)
        {
            using org_ptr = void (WINAPIV*)(struct CMoveMapLimitRight*, struct CPlayer*);
            (org_ptr(0x1403ae4e0L))(this, pkPlayer);
        };
        void SetFlag(int iType, bool bFlag)
        {
            using org_ptr = void (WINAPIV*)(struct CMoveMapLimitRight*, int, bool);
            (org_ptr(0x1403ae500L))(this, iType, bFlag);
        };
        ~CMoveMapLimitRight()
        {
            using org_ptr = void (WINAPIV*)(struct CMoveMapLimitRight*);
            (org_ptr(0x1403ae740L))(this);
        };
        void dtor_CMoveMapLimitRight()
        {
            using org_ptr = void (WINAPIV*)(struct CMoveMapLimitRight*);
            (org_ptr(0x1403ae740L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
