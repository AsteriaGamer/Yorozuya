// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CPlayer.hpp"
#include "ListHeap.hpp"


START_ATF_NAMESPACE
    struct TimeLimitJade
    {
        enum NUM
        {
            max_timejade_num = 0x64,
        };
        struct WaitCell
        {
            _STORAGE_LIST::_db_con *_pkItem;
            unsigned __int16 _wStartTime;
            unsigned int _dwUseTime;
        public:
            WaitCell(struct _STORAGE_LIST::_db_con* pItem)
            {
                using org_ptr = void (WINAPIV*)(struct WaitCell*, struct _STORAGE_LIST::_db_con*);
                (org_ptr(0x1403fb340L))(this, pItem);
            };
            void ctor_WaitCell(struct _STORAGE_LIST::_db_con* pItem)
            {
                using org_ptr = void (WINAPIV*)(struct WaitCell*, struct _STORAGE_LIST::_db_con*);
                (org_ptr(0x1403fb340L))(this, pItem);
            };
            WaitCell(struct _STORAGE_LIST::_db_con* pItem, uint16_t wStartTime, unsigned int dwUseTime)
            {
                using org_ptr = void (WINAPIV*)(struct WaitCell*, struct _STORAGE_LIST::_db_con*, uint16_t, unsigned int);
                (org_ptr(0x1403fb2e0L))(this, pItem, wStartTime, dwUseTime);
            };
            void ctor_WaitCell(struct _STORAGE_LIST::_db_con* pItem, uint16_t wStartTime, unsigned int dwUseTime)
            {
                using org_ptr = void (WINAPIV*)(struct WaitCell*, struct _STORAGE_LIST::_db_con*, uint16_t, unsigned int);
                (org_ptr(0x1403fb2e0L))(this, pItem, wStartTime, dwUseTime);
            };
            WaitCell()
            {
                using org_ptr = void (WINAPIV*)(struct WaitCell*);
                (org_ptr(0x1403fc4c0L))(this);
            };
            void ctor_WaitCell()
            {
                using org_ptr = void (WINAPIV*)(struct WaitCell*);
                (org_ptr(0x1403fc4c0L))(this);
            };
        };
        struct UseCell
        {
            _STORAGE_LIST::_db_con *_pkItem;
            unsigned __int16 _wStartTime;
            unsigned int _dwUseTime;
        public:
            UseCell(struct _STORAGE_LIST::_db_con* pItem)
            {
                using org_ptr = void (WINAPIV*)(struct UseCell*, struct _STORAGE_LIST::_db_con*);
                (org_ptr(0x1403fb3d0L))(this, pItem);
            };
            void ctor_UseCell(struct _STORAGE_LIST::_db_con* pItem)
            {
                using org_ptr = void (WINAPIV*)(struct UseCell*, struct _STORAGE_LIST::_db_con*);
                (org_ptr(0x1403fb3d0L))(this, pItem);
            };
            UseCell(struct _STORAGE_LIST::_db_con* pItem, uint16_t wStartTime, unsigned int dwUseTime)
            {
                using org_ptr = void (WINAPIV*)(struct UseCell*, struct _STORAGE_LIST::_db_con*, uint16_t, unsigned int);
                (org_ptr(0x1403fb370L))(this, pItem, wStartTime, dwUseTime);
            };
            void ctor_UseCell(struct _STORAGE_LIST::_db_con* pItem, uint16_t wStartTime, unsigned int dwUseTime)
            {
                using org_ptr = void (WINAPIV*)(struct UseCell*, struct _STORAGE_LIST::_db_con*, uint16_t, unsigned int);
                (org_ptr(0x1403fb370L))(this, pItem, wStartTime, dwUseTime);
            };
            UseCell()
            {
                using org_ptr = void (WINAPIV*)(struct UseCell*);
                (org_ptr(0x1403fcf00L))(this);
            };
            void ctor_UseCell()
            {
                using org_ptr = void (WINAPIV*)(struct UseCell*);
                (org_ptr(0x1403fcf00L))(this);
            };
        };
        CPlayer *_pkOwner;
        ListHeap<WaitCell> _heapWaitRow;
        ListHeap<UseCell> _heapUseRow;
    public:
        int CheckEndTime()
        {
            using org_ptr = int (WINAPIV*)(struct TimeLimitJade*);
            return (org_ptr(0x1403fa240L))(this);
        };
        int CheckStartTime()
        {
            using org_ptr = int (WINAPIV*)(struct TimeLimitJade*);
            return (org_ptr(0x1403fa340L))(this);
        };
        bool DeleteUseList(struct _STORAGE_LIST::_db_con* pkItem, bool bItemDel)
        {
            using org_ptr = bool (WINAPIV*)(struct TimeLimitJade*, struct _STORAGE_LIST::_db_con*, bool);
            return (org_ptr(0x1403fa860L))(this, pkItem, bItemDel);
        };
        bool DeleteWaitList(struct _STORAGE_LIST::_db_con* pkItem)
        {
            using org_ptr = bool (WINAPIV*)(struct TimeLimitJade*, struct _STORAGE_LIST::_db_con*);
            return (org_ptr(0x1403fa710L))(this, pkItem);
        };
        bool Init()
        {
            using org_ptr = bool (WINAPIV*)(struct TimeLimitJade*);
            return (org_ptr(0x1403fa1e0L))(this);
        };
        bool InitUse()
        {
            using org_ptr = bool (WINAPIV*)(struct TimeLimitJade*);
            return (org_ptr(0x1403fb280L))(this);
        };
        bool InitWait()
        {
            using org_ptr = bool (WINAPIV*)(struct TimeLimitJade*);
            return (org_ptr(0x1403fb230L))(this);
        };
        bool InsertUseList(struct _STORAGE_LIST::_db_con* pkItem, unsigned int dwStart, unsigned int dwEnd)
        {
            using org_ptr = bool (WINAPIV*)(struct TimeLimitJade*, struct _STORAGE_LIST::_db_con*, unsigned int, unsigned int);
            return (org_ptr(0x1403fa7d0L))(this, pkItem, dwStart, dwEnd);
        };
        bool InsertWaitList(struct _STORAGE_LIST::_db_con* pkItem)
        {
            using org_ptr = bool (WINAPIV*)(struct TimeLimitJade*, struct _STORAGE_LIST::_db_con*);
            return (org_ptr(0x1403fa640L))(this, pkItem);
        };
        void Release()
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitJade*);
            (org_ptr(0x1403fb7f0L))(this);
        };
        TimeLimitJade(struct CPlayer* p)
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitJade*, struct CPlayer*);
            (org_ptr(0x1403fb400L))(this, p);
        };
        void ctor_TimeLimitJade(struct CPlayer* p)
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitJade*, struct CPlayer*);
            (org_ptr(0x1403fb400L))(this, p);
        };
        ~TimeLimitJade()
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitJade*);
            (org_ptr(0x1403fb8c0L))(this);
        };
        void dtor_TimeLimitJade()
        {
            using org_ptr = void (WINAPIV*)(struct TimeLimitJade*);
            (org_ptr(0x1403fb8c0L))(this);
        };
    };
END_ATF_NAMESPACE
