// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_class_value.hpp"
#include "_max_point.hpp"
#include "_talik_recvr_list.hpp"


START_ATF_NAMESPACE
    struct CPvpCashMng
    {
        _talik_recvr_list m_TalikList;
        _class_value m_ClassValList[50];
        _max_point m_LimitPoint[30];
    public:
        CPvpCashMng()
        {
            using org_ptr = void (WINAPIV*)(struct CPvpCashMng*);
            (org_ptr(0x1403f6e20L))(this);
        };
        void ctor_CPvpCashMng()
        {
            using org_ptr = void (WINAPIV*)(struct CPvpCashMng*);
            (org_ptr(0x1403f6e20L))(this);
        };
        int GetMaxTempPoint(char nLv, bool bPremium)
        {
            using org_ptr = int (WINAPIV*)(struct CPvpCashMng*, char, bool);
            return (org_ptr(0x1403f6590L))(this, nLv, bPremium);
        };
        int GetMinTempPoint(char nLv)
        {
            using org_ptr = int (WINAPIV*)(struct CPvpCashMng*, char);
            return (org_ptr(0x1403f6650L))(this, nLv);
        };
        int GetMyClassVal(char* pClass)
        {
            using org_ptr = int (WINAPIV*)(struct CPvpCashMng*, char*);
            return (org_ptr(0x1403f64d0L))(this, pClass);
        };
        int GetTalikNum()
        {
            using org_ptr = int (WINAPIV*)(struct CPvpCashMng*);
            return (org_ptr(0x1403f63d0L))(this);
        };
        int GetTalikRecvrPoint(int i)
        {
            using org_ptr = int (WINAPIV*)(struct CPvpCashMng*, int);
            return (org_ptr(0x1403f63f0L))(this, i);
        };
        int GetTalikRecvrPoint(char byTblCode, unsigned int dwIndex)
        {
            using org_ptr = int (WINAPIV*)(struct CPvpCashMng*, char, unsigned int);
            return (org_ptr(0x1403f6420L))(this, byTblCode, dwIndex);
        };
        static struct CPvpCashMng* Instance()
        {
            using org_ptr = struct CPvpCashMng* (WINAPIV*)();
            return (org_ptr(0x1403f5a10L))();
        };
        bool IsTalikItem(char* strCode)
        {
            using org_ptr = bool (WINAPIV*)(struct CPvpCashMng*, char*);
            return (org_ptr(0x1403f66f0L))(this, strCode);
        };
        bool LoadData()
        {
            using org_ptr = bool (WINAPIV*)(struct CPvpCashMng*);
            return (org_ptr(0x1403f5ea0L))(this);
        };
        bool Parsing(char* szTitle, char* szItem, char** szBuff, int nInx, char byParseType)
        {
            using org_ptr = bool (WINAPIV*)(struct CPvpCashMng*, char*, char*, char**, int, char);
            return (org_ptr(0x1403f5c40L))(this, szTitle, szItem, szBuff, nInx, byParseType);
        };
        void Release()
        {
            using org_ptr = void (WINAPIV*)(struct CPvpCashMng*);
            (org_ptr(0x1403f5ad0L))(this);
        };
        bool SetItem(char* szItemCode, int nInx)
        {
            using org_ptr = bool (WINAPIV*)(struct CPvpCashMng*, char*, int);
            return (org_ptr(0x1403f5b50L))(this, szItemCode, nInx);
        };
        ~CPvpCashMng()
        {
            using org_ptr = void (WINAPIV*)(struct CPvpCashMng*);
            (org_ptr(0x1403f7170L))(this);
        };
        void dtor_CPvpCashMng()
        {
            using org_ptr = void (WINAPIV*)(struct CPvpCashMng*);
            (org_ptr(0x1403f7170L))(this);
        };
    };
END_ATF_NAMESPACE
