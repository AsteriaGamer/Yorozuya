// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CGameObject.hpp"
#include "CPlayer.hpp"
#include "_STORAGE_LIST.hpp"
#include "_itembox_create_setdata.hpp"
#include "_object_id.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 8)
    struct  CItemBox : CGameObject
    {
        unsigned int m_dwOwnerSerial;
        unsigned __int16 m_wOwnerIndex;
        unsigned int m_dwThrowerSerial;
        char m_byThrowerID;
        unsigned __int16 m_wThrowerIndex;
        unsigned __int16 m_wMonRecIndex;
        bool m_bBossMob;
        char m_wszThrowerName[17];
        char m_aszThrowerName[17];
        unsigned int m_dwThrowerCharSerial;
        char m_szThrowerID[13];
        char m_byThrowerRaceCode;
        char m_byThrowerDegree;
        char *m_szThrowerItemHistoryFileName;
        unsigned int m_dwLootStartTime;
        int m_nStateCode;
        unsigned int m_dwLastDestroyTime;
        char m_byCreateCode;
        unsigned int m_dwPartyBossSerial;
        bool m_bPartyShare;
        bool m_bCompDgr;
        unsigned int m_dwEventPartyBoss;
        unsigned int m_dwEventGuildSerial;
        char m_byEventRaceCode;
        char m_byEventLootAuth;
        int m_bHolyScanner;
        _STORAGE_LIST::_db_con m_Item;
        bool m_bHide;
    public:
        CItemBox()
        {
            using org_ptr = void (WINAPIV*)(struct CItemBox*);
            (org_ptr(0x1401655f0L))(this);
        };
        void ctor_CItemBox()
        {
            using org_ptr = void (WINAPIV*)(struct CItemBox*);
            (org_ptr(0x1401655f0L))(this);
        };
        bool Create(struct _itembox_create_setdata* pParam, bool bHide)
        {
            using org_ptr = bool (WINAPIV*)(struct CItemBox*, struct _itembox_create_setdata*, bool);
            return (org_ptr(0x140165930L))(this, pParam, bHide);
        };
        bool Destroy()
        {
            using org_ptr = bool (WINAPIV*)(struct CItemBox*);
            return (org_ptr(0x140165ea0L))(this);
        };
        void Init(struct _object_id* pID)
        {
            using org_ptr = void (WINAPIV*)(struct CItemBox*, struct _object_id*);
            (org_ptr(0x140165820L))(this, pID);
        };
        bool IsTakeRight(struct CPlayer* pOne)
        {
            using org_ptr = bool (WINAPIV*)(struct CItemBox*, struct CPlayer*);
            return (org_ptr(0x140166180L))(this, pOne);
        };
        void Loop()
        {
            using org_ptr = void (WINAPIV*)(struct CItemBox*);
            (org_ptr(0x140166000L))(this);
        };
        void SendMsg_Create()
        {
            using org_ptr = void (WINAPIV*)(struct CItemBox*);
            (org_ptr(0x140166660L))(this);
        };
        void SendMsg_Destroy()
        {
            using org_ptr = void (WINAPIV*)(struct CItemBox*);
            (org_ptr(0x140166830L))(this);
        };
        void SendMsg_FixPosition(int n)
        {
            using org_ptr = void (WINAPIV*)(struct CItemBox*, int);
            (org_ptr(0x1401668b0L))(this, n);
        };
        void SendMsg_StateChange()
        {
            using org_ptr = void (WINAPIV*)(struct CItemBox*);
            (org_ptr(0x140166a10L))(this);
        };
        ~CItemBox()
        {
            using org_ptr = void (WINAPIV*)(struct CItemBox*);
            (org_ptr(0x140165790L))(this);
        };
        void dtor_CItemBox()
        {
            using org_ptr = void (WINAPIV*)(struct CItemBox*);
            (org_ptr(0x140165790L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
