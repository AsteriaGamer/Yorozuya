// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_BILLING_INFO.hpp"
#include "_GLBID.hpp"
#include "_SYSTEMTIME.hpp"


START_ATF_NAMESPACE
    struct _WAIT_ENTER_ACCOUNT
    {
        bool m_bLoad;
        unsigned int m_dwAccountSerial;
        char m_szAccountID[13];
        char m_byUserDgr;
        char m_bySubDgr;
        _GLBID m_gidGlobal;
        unsigned int m_dwKey[4];
        unsigned int m_dwLoadTime;
        bool m_bChatLock;
        int m_nTrans;
        bool m_bAgeLimit;
        char m_byUILock;
        char m_szUILock_PW[13];
        char m_byUILock_FailCnt;
        char m_szAccount_PW[13];
        char m_byUILock_HintIndex;
        char m_uszUILock_HintAnswer[17];
        char m_byUILockFindPassFailCount;
        unsigned int m_dwRequestMoveCharacterSerialList[3];
        unsigned int m_dwTournamentCharacterSerialList[3];
        _BILLING_INFO m_BillingInfo;
    public:
        void Release()
        {
            using org_ptr = void (WINAPIV*)(struct _WAIT_ENTER_ACCOUNT*);
            (org_ptr(0x14011f260L))(this);
        };
        void SetAgeLimitFlag(bool bAgeLimit)
        {
            using org_ptr = void (WINAPIV*)(struct _WAIT_ENTER_ACCOUNT*, bool);
            (org_ptr(0x140207bd0L))(this, bAgeLimit);
        };
        void SetBillingInfo(int16_t iType, char* szCMS, int lRemainTime, struct _SYSTEMTIME* pstEndDate)
        {
            using org_ptr = void (WINAPIV*)(struct _WAIT_ENTER_ACCOUNT*, int16_t, char*, int, struct _SYSTEMTIME*);
            (org_ptr(0x140207ac0L))(this, iType, szCMS, lRemainTime, pstEndDate);
        };
        void SetData(unsigned int dwAccountSerial, char* pszAccountID, char byUserDgr, char bySubDgr, struct _GLBID* pgidGlobal, unsigned int* pdwKey, bool bChatLock)
        {
            using org_ptr = void (WINAPIV*)(struct _WAIT_ENTER_ACCOUNT*, unsigned int, char*, char, char, struct _GLBID*, unsigned int*, bool);
            (org_ptr(0x1402079b0L))(this, dwAccountSerial, pszAccountID, byUserDgr, bySubDgr, pgidGlobal, pdwKey, bChatLock);
        };
        void SetPcBangFlag(bool bIsPcBang)
        {
            using org_ptr = void (WINAPIV*)(struct _WAIT_ENTER_ACCOUNT*, bool);
            (org_ptr(0x140207b80L))(this, bIsPcBang);
        };
        void SetTransFlag(int nTrans)
        {
            using org_ptr = void (WINAPIV*)(struct _WAIT_ENTER_ACCOUNT*, int);
            (org_ptr(0x140207bb0L))(this, nTrans);
        };
        void SetUILock(char byUILock, char* szUILockPW, char byUILockFailCnt, char* szAccountPW, char byHintIndex, char* uszHintAnswer, char byUILockFindPassFailCount)
        {
            using org_ptr = void (WINAPIV*)(struct _WAIT_ENTER_ACCOUNT*, char, char*, char, char*, char, char*, char);
            (org_ptr(0x140207c00L))(this, byUILock, szUILockPW, byUILockFailCnt, szAccountPW, byHintIndex, uszHintAnswer, byUILockFindPassFailCount);
        };
        _WAIT_ENTER_ACCOUNT()
        {
            using org_ptr = void (WINAPIV*)(struct _WAIT_ENTER_ACCOUNT*);
            (org_ptr(0x140203000L))(this);
        };
        void ctor__WAIT_ENTER_ACCOUNT()
        {
            using org_ptr = void (WINAPIV*)(struct _WAIT_ENTER_ACCOUNT*);
            (org_ptr(0x140203000L))(this);
        };
    };
END_ATF_NAMESPACE
