// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "TInventory_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::TInventoryctor_TInventory2_ptr TInventoryctor_TInventory2_next(nullptr);
        static info::TInventoryctor_TInventory2_clbk TInventoryctor_TInventory2_user(nullptr);
        static info::TInventoryclear4_ptr TInventoryclear4_next(nullptr);
        static info::TInventoryclear4_clbk TInventoryclear4_user(nullptr);
        static info::TInventorycreate6_ptr TInventorycreate6_next(nullptr);
        static info::TInventorycreate6_clbk TInventorycreate6_user(nullptr);
        static info::TInventoryfind_empty8_ptr TInventoryfind_empty8_next(nullptr);
        static info::TInventoryfind_empty8_clbk TInventoryfind_empty8_user(nullptr);
        static info::TInventoryget_slot10_ptr TInventoryget_slot10_next(nullptr);
        static info::TInventoryget_slot10_clbk TInventoryget_slot10_user(nullptr);
        static info::TInventorypop12_ptr TInventorypop12_next(nullptr);
        static info::TInventorypop12_clbk TInventorypop12_user(nullptr);
        static info::TInventorypush14_ptr TInventorypush14_next(nullptr);
        static info::TInventorypush14_clbk TInventorypush14_user(nullptr);
        static info::TInventoryswap16_ptr TInventoryswap16_next(nullptr);
        static info::TInventoryswap16_clbk TInventoryswap16_user(nullptr);
        static info::TInventorydtor_TInventory18_ptr TInventorydtor_TInventory18_next(nullptr);
        static info::TInventorydtor_TInventory18_clbk TInventorydtor_TInventory18_user(nullptr);
        
        static void TInventoryctor_TInventory2_wrapper(struct TInventory<_INVENKEY>* _this)
        {
           TInventoryctor_TInventory2_user(_this);
        };
        static void TInventoryclear4_wrapper(struct TInventory<_INVENKEY>* _this)
        {
           TInventoryclear4_user(_this);
        };
        static bool TInventorycreate6_wrapper(struct TInventory<_INVENKEY>* _this, int nMaxPage, int nMaxSlot, int nMaxOverlap)
        {
           return TInventorycreate6_user(_this, nMaxPage, nMaxSlot, nMaxOverlap);
        };
        static bool TInventoryfind_empty8_wrapper(struct TInventory<_INVENKEY>* _this, struct _INVENKEY* pItem, int nNum, int* nP, int* nS)
        {
           return TInventoryfind_empty8_user(_this, pItem, nNum, nP, nS);
        };
        static struct TInvenSlot<_INVENKEY>* TInventoryget_slot10_wrapper(struct TInventory<_INVENKEY>* _this, int nP, int nS)
        {
           return TInventoryget_slot10_user(_this, nP, nS);
        };
        static int TInventorypop12_wrapper(struct TInventory<_INVENKEY>* _this, int nP, int nS, struct _INVENKEY* pItem, int nNum)
        {
           return TInventorypop12_user(_this, nP, nS, pItem, nNum);
        };
        static int TInventorypush14_wrapper(struct TInventory<_INVENKEY>* _this, int nP, int nS, struct _INVENKEY* pItem, int nNum)
        {
           return TInventorypush14_user(_this, nP, nS, pItem, nNum);
        };
        static void TInventoryswap16_wrapper(struct TInventory<_INVENKEY>* _this, struct TInvenSlot<_INVENKEY>* pSrc, struct TInvenSlot<_INVENKEY>* pDst)
        {
           TInventoryswap16_user(_this, pSrc, pDst);
        };
        static void TInventorydtor_TInventory18_wrapper(struct TInventory<_INVENKEY>* _this)
        {
           TInventorydtor_TInventory18_user(_this);
        };
        
        static hook_record TInventory<_INVENKEY>_functions[] = {
        {   (LPVOID)0x1402d43e0L,
            (LPVOID *)&TInventoryctor_TInventory2_user,
            (LPVOID *)&TInventoryctor_TInventory2_next,
            (LPVOID)cast_pointer_function(TInventoryctor_TInventory2_wrapper),
            (LPVOID)cast_pointer_function((void(TInventory<_INVENKEY>::*)())&TInventory<_INVENKEY>::ctor_TInventory) },
        {   (LPVOID)0x1402d4cd0L,
            (LPVOID *)&TInventoryclear4_user,
            (LPVOID *)&TInventoryclear4_next,
            (LPVOID)cast_pointer_function(TInventoryclear4_wrapper),
            (LPVOID)cast_pointer_function((void(TInventory<_INVENKEY>::*)())&TInventory<_INVENKEY>::clear) },
        {   (LPVOID)0x1402d4440L,
            (LPVOID *)&TInventorycreate6_user,
            (LPVOID *)&TInventorycreate6_next,
            (LPVOID)cast_pointer_function(TInventorycreate6_wrapper),
            (LPVOID)cast_pointer_function((bool(TInventory<_INVENKEY>::*)(int, int, int))&TInventory<_INVENKEY>::create) },
        {   (LPVOID)0x1402d46f0L,
            (LPVOID *)&TInventoryfind_empty8_user,
            (LPVOID *)&TInventoryfind_empty8_next,
            (LPVOID)cast_pointer_function(TInventoryfind_empty8_wrapper),
            (LPVOID)cast_pointer_function((bool(TInventory<_INVENKEY>::*)(struct _INVENKEY*, int, int*, int*))&TInventory<_INVENKEY>::find_empty) },
        {   (LPVOID)0x1402d4660L,
            (LPVOID *)&TInventoryget_slot10_user,
            (LPVOID *)&TInventoryget_slot10_next,
            (LPVOID)cast_pointer_function(TInventoryget_slot10_wrapper),
            (LPVOID)cast_pointer_function((struct TInvenSlot<_INVENKEY>*(TInventory<_INVENKEY>::*)(int, int))&TInventory<_INVENKEY>::get_slot) },
        {   (LPVOID)0x1402d4900L,
            (LPVOID *)&TInventorypop12_user,
            (LPVOID *)&TInventorypop12_next,
            (LPVOID)cast_pointer_function(TInventorypop12_wrapper),
            (LPVOID)cast_pointer_function((int(TInventory<_INVENKEY>::*)(int, int, struct _INVENKEY*, int))&TInventory<_INVENKEY>::pop) },
        {   (LPVOID)0x1402d4860L,
            (LPVOID *)&TInventorypush14_user,
            (LPVOID *)&TInventorypush14_next,
            (LPVOID)cast_pointer_function(TInventorypush14_wrapper),
            (LPVOID)cast_pointer_function((int(TInventory<_INVENKEY>::*)(int, int, struct _INVENKEY*, int))&TInventory<_INVENKEY>::push) },
        {   (LPVOID)0x1402d49a0L,
            (LPVOID *)&TInventoryswap16_user,
            (LPVOID *)&TInventoryswap16_next,
            (LPVOID)cast_pointer_function(TInventoryswap16_wrapper),
            (LPVOID)cast_pointer_function((void(TInventory<_INVENKEY>::*)(struct TInvenSlot<_INVENKEY>*, struct TInvenSlot<_INVENKEY>*))&TInventory<_INVENKEY>::swap) },
        {   (LPVOID)0x1402d4430L,
            (LPVOID *)&TInventorydtor_TInventory18_user,
            (LPVOID *)&TInventorydtor_TInventory18_next,
            (LPVOID)cast_pointer_function(TInventorydtor_TInventory18_wrapper),
            (LPVOID)cast_pointer_function((void(TInventory<_INVENKEY>::*)())&TInventory<_INVENKEY>::dtor_TInventory) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
