// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  void2val<void (__cdecl CLuaEventNode::*)(char const *)>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  void2val<char const * (__cdecl CLuaScript::*)(void)>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  void2val<void (__cdecl CLuaEventNode::*)(CLuaScript *)>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  void2val<bool (__cdecl CLuaEventMgr::*)(CLuaEventNode *)>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
#include "LuaParam3.hpp"


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  void2val<LuaParam3>
        {
        public:
            static struct LuaParam3* invoke(struct LuaParam3* result, void* input)
            {
                using org_ptr = struct LuaParam3* (WINAPIV*)(struct LuaParam3*, void*);
                return (org_ptr(0x14040af20L))(result, input);
            };
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  void2val<bool (__cdecl CLuaSignalReActor::*)(unsigned char,unsigned char,char const *,char const *)>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  void2val<void (__cdecl CLuaEventNode::*)(char const *,unsigned long)>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  void2val<void (__cdecl CLuaEventMgr::*)(CLuaEventNode *)>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  void2val<CLuaEventNode * (__cdecl CLuaEventMgr::*)(char const *)>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  void2val<CLuaSignalReActor * (__cdecl CMonster::*)(void)>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE


START_ATF_NAMESPACE
    namespace lua_tinker
    {
        template<>
        struct  void2val<CLuaEventNode * (__cdecl CLuaEventMgr::*)(void)>
        {
        };
    }; // end namespace lua_tinker
END_ATF_NAMESPACE
