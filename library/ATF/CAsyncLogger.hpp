// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "ASYNC_LOG_TYPE.hpp"
#include "CAsyncLogBufferList.hpp"
#include "CAsyncLogInfo.hpp"
#include "CFrameRate.hpp"
#include "CLogFile.hpp"
#include "CMyTimer.hpp"
#include "CNetIndexList.hpp"
#include "std__vector.hpp"
#include "stdext__hash_map.hpp"


START_ATF_NAMESPACE
    struct CAsyncLogger
    {
        enum BUFFER_TYPE
        {
            BT_200B = 0x0,
            BT_1K = 0x1,
            BT_10K = 0x2,
            BT_MAX_TYPE = 0x3,
        };
        enum BUFFER_SIZE_MAX_CNT
        {
            BSMC_200B = 0x9E4,
            BSMC_1K = 0xFE,
            BSMC_10K = 0xFE,
        };
        enum BUFFER_SIZE
        {
            BST_200B = 0xC8,
            BST_1K = 0x400,
            BST_10K = 0x2800,
        };
        CFrameRate m_FrameRate;
        CLogFile m_logLoading;
        CMyTimer m_kCheckUpdateLogFileNameDelay;
        stdext::hash_map<int,CAsyncLogInfo *,stdext::hash_compare<int,std::less<int> >,std::allocator<std::pair<int const ,CAsyncLogInfo *> > > m_mapLogInfo;
        CAsyncLogInfo *m_pSystemLogInfo;
        CNetIndexList m_klistEmpty;
        CNetIndexList m_klistProc;
        std::vector<unsigned long,std::allocator<unsigned long> > m_vecPushList;
        CAsyncLogBufferList *m_kBufferList;
    public:
        CAsyncLogger()
        {
            using org_ptr = void (WINAPIV*)(struct CAsyncLogger*);
            (org_ptr(0x1403bda40L))(this);
        };
        void ctor_CAsyncLogger()
        {
            using org_ptr = void (WINAPIV*)(struct CAsyncLogger*);
            (org_ptr(0x1403bda40L))(this);
        };
        static void Destroy()
        {
            using org_ptr = void (WINAPIV*)();
            (org_ptr(0x1403be1b0L))();
        };
        bool FormatLog(int iType, char* fmt)
        {
            using org_ptr = bool (WINAPIV*)(struct CAsyncLogger*, int, char*);
            return (org_ptr(0x1403bf220L))(this, iType, fmt);
        };
        int GetTotalWaitSize()
        {
            using org_ptr = int (WINAPIV*)(struct CAsyncLogger*);
            return (org_ptr(0x1403bfd60L))(this);
        };
        int Init()
        {
            using org_ptr = int (WINAPIV*)(struct CAsyncLogger*);
            return (org_ptr(0x1403be220L))(this);
        };
        static struct CAsyncLogger* Instance()
        {
            using org_ptr = struct CAsyncLogger* (WINAPIV*)();
            return (org_ptr(0x1403be0f0L))();
        };
        void Log(char* szFileName, char* szLog, int iLenStr)
        {
            using org_ptr = void (WINAPIV*)(struct CAsyncLogger*, char*, char*, int);
            (org_ptr(0x1403c00e0L))(this, szFileName, szLog, iLenStr);
        };
        bool Log(int iType, char* szLog)
        {
            using org_ptr = bool (WINAPIV*)(struct CAsyncLogger*, int, char*);
            return (org_ptr(0x1403bfa00L))(this, iType, szLog);
        };
        bool LogFromArg(int iType, char* fmt, char* arg_ptr)
        {
            using org_ptr = bool (WINAPIV*)(struct CAsyncLogger*, int, char*, char*);
            return (org_ptr(0x1403bf620L))(this, iType, fmt, arg_ptr);
        };
        void Loop()
        {
            using org_ptr = void (WINAPIV*)(struct CAsyncLogger*);
            (org_ptr(0x1403be870L))(this);
        };
        static void ProcThread(void* p)
        {
            using org_ptr = void (WINAPIV*)(void*);
            (org_ptr(0x1403bfe00L))(p);
        };
        void ProcWrite()
        {
            using org_ptr = void (WINAPIV*)(struct CAsyncLogger*);
            (org_ptr(0x1403beab0L))(this);
        };
        bool Regist(ASYNC_LOG_TYPE eType, char* szDirPath, char* szTypeName, bool bAddDateFileName, unsigned int dwUpdateFileNameDelay)
        {
            using org_ptr = bool (WINAPIV*)(struct CAsyncLogger*, ASYNC_LOG_TYPE, char*, char*, bool, unsigned int);
            return (org_ptr(0x1403bebb0L))(this, eType, szDirPath, szTypeName, bAddDateFileName, dwUpdateFileNameDelay);
        };
        void SystemLog(char* fmt)
        {
            using org_ptr = void (WINAPIV*)(struct CAsyncLogger*, char*);
            (org_ptr(0x1403bfe60L))(this, fmt);
        };
        ~CAsyncLogger()
        {
            using org_ptr = void (WINAPIV*)(struct CAsyncLogger*);
            (org_ptr(0x1403bdc40L))(this);
        };
        void dtor_CAsyncLogger()
        {
            using org_ptr = void (WINAPIV*)(struct CAsyncLogger*);
            (org_ptr(0x1403bdc40L))(this);
        };
    };
END_ATF_NAMESPACE
