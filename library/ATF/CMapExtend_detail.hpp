// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CMapExtend_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::CMapExtendctor_CMapExtend2_ptr CMapExtendctor_CMapExtend2_next(nullptr);
        static info::CMapExtendctor_CMapExtend2_clbk CMapExtendctor_CMapExtend2_user(nullptr);
        static info::CMapExtendctor_CMapExtend4_ptr CMapExtendctor_CMapExtend4_next(nullptr);
        static info::CMapExtendctor_CMapExtend4_clbk CMapExtendctor_CMapExtend4_user(nullptr);
        static info::CMapExtendConvertToMap6_ptr CMapExtendConvertToMap6_next(nullptr);
        static info::CMapExtendConvertToMap6_clbk CMapExtendConvertToMap6_user(nullptr);
        static info::CMapExtendDrawRect8_ptr CMapExtendDrawRect8_next(nullptr);
        static info::CMapExtendDrawRect8_clbk CMapExtendDrawRect8_user(nullptr);
        static info::CMapExtendEndScreenPoint10_ptr CMapExtendEndScreenPoint10_next(nullptr);
        static info::CMapExtendEndScreenPoint10_clbk CMapExtendEndScreenPoint10_user(nullptr);
        static info::CMapExtendGetExtendSize12_ptr CMapExtendGetExtendSize12_next(nullptr);
        static info::CMapExtendGetExtendSize12_clbk CMapExtendGetExtendSize12_user(nullptr);
        static info::CMapExtendInit14_ptr CMapExtendInit14_next(nullptr);
        static info::CMapExtendInit14_clbk CMapExtendInit14_user(nullptr);
        static info::CMapExtendMoveScreenPoint16_ptr CMapExtendMoveScreenPoint16_next(nullptr);
        static info::CMapExtendMoveScreenPoint16_clbk CMapExtendMoveScreenPoint16_user(nullptr);
        static info::CMapExtendScrollMapDown18_ptr CMapExtendScrollMapDown18_next(nullptr);
        static info::CMapExtendScrollMapDown18_clbk CMapExtendScrollMapDown18_user(nullptr);
        static info::CMapExtendScrollMapLeft20_ptr CMapExtendScrollMapLeft20_next(nullptr);
        static info::CMapExtendScrollMapLeft20_clbk CMapExtendScrollMapLeft20_user(nullptr);
        static info::CMapExtendScrollMapRight22_ptr CMapExtendScrollMapRight22_next(nullptr);
        static info::CMapExtendScrollMapRight22_clbk CMapExtendScrollMapRight22_user(nullptr);
        static info::CMapExtendScrollMapUp24_ptr CMapExtendScrollMapUp24_next(nullptr);
        static info::CMapExtendScrollMapUp24_clbk CMapExtendScrollMapUp24_user(nullptr);
        static info::CMapExtendStartScreenPoint26_ptr CMapExtendStartScreenPoint26_next(nullptr);
        static info::CMapExtendStartScreenPoint26_clbk CMapExtendStartScreenPoint26_user(nullptr);
        static info::CMapExtenddtor_CMapExtend28_ptr CMapExtenddtor_CMapExtend28_next(nullptr);
        static info::CMapExtenddtor_CMapExtend28_clbk CMapExtenddtor_CMapExtend28_user(nullptr);
        
        static void CMapExtendctor_CMapExtend2_wrapper(struct CMapExtend* _this, struct CSurface** pSF)
        {
           CMapExtendctor_CMapExtend2_user(_this, pSF, CMapExtendctor_CMapExtend2_next);
        };
        static void CMapExtendctor_CMapExtend4_wrapper(struct CMapExtend* _this)
        {
           CMapExtendctor_CMapExtend4_user(_this, CMapExtendctor_CMapExtend4_next);
        };
        static void CMapExtendConvertToMap6_wrapper(struct CMapExtend* _this, struct CSize* szMap)
        {
           CMapExtendConvertToMap6_user(_this, szMap, CMapExtendConvertToMap6_next);
        };
        static void CMapExtendDrawRect8_wrapper(struct CMapExtend* _this)
        {
           CMapExtendDrawRect8_user(_this, CMapExtendDrawRect8_next);
        };
        static int CMapExtendEndScreenPoint10_wrapper(struct CMapExtend* _this, struct CSize* szMap)
        {
           return CMapExtendEndScreenPoint10_user(_this, szMap, CMapExtendEndScreenPoint10_next);
        };
        static struct CSize* CMapExtendGetExtendSize12_wrapper(struct CMapExtend* _this)
        {
           return CMapExtendGetExtendSize12_user(_this, CMapExtendGetExtendSize12_next);
        };
        static void CMapExtendInit14_wrapper(struct CMapExtend* _this, struct CSurface** pSF)
        {
           CMapExtendInit14_user(_this, pSF, CMapExtendInit14_next);
        };
        static void CMapExtendMoveScreenPoint16_wrapper(struct CMapExtend* _this, struct CPoint* pt)
        {
           CMapExtendMoveScreenPoint16_user(_this, pt, CMapExtendMoveScreenPoint16_next);
        };
        static void CMapExtendScrollMapDown18_wrapper(struct CMapExtend* _this, int nMapY, int nInterval)
        {
           CMapExtendScrollMapDown18_user(_this, nMapY, nInterval, CMapExtendScrollMapDown18_next);
        };
        static void CMapExtendScrollMapLeft20_wrapper(struct CMapExtend* _this, int nInterval)
        {
           CMapExtendScrollMapLeft20_user(_this, nInterval, CMapExtendScrollMapLeft20_next);
        };
        static void CMapExtendScrollMapRight22_wrapper(struct CMapExtend* _this, int nMapX, int nInterval)
        {
           CMapExtendScrollMapRight22_user(_this, nMapX, nInterval, CMapExtendScrollMapRight22_next);
        };
        static void CMapExtendScrollMapUp24_wrapper(struct CMapExtend* _this, int nInterval)
        {
           CMapExtendScrollMapUp24_user(_this, nInterval, CMapExtendScrollMapUp24_next);
        };
        static void CMapExtendStartScreenPoint26_wrapper(struct CMapExtend* _this, struct CPoint* pt, struct CMapData* pMap, struct CRect* rcWnd)
        {
           CMapExtendStartScreenPoint26_user(_this, pt, pMap, rcWnd, CMapExtendStartScreenPoint26_next);
        };
        static void CMapExtenddtor_CMapExtend28_wrapper(struct CMapExtend* _this)
        {
           CMapExtenddtor_CMapExtend28_user(_this, CMapExtenddtor_CMapExtend28_next);
        };
        
        static hook_record CMapExtend_functions[] = {
        {   (LPVOID)0x1401a1500L,
            (LPVOID *)&CMapExtendctor_CMapExtend2_user,
            (LPVOID *)&CMapExtendctor_CMapExtend2_next,
            (LPVOID)cast_pointer_function(CMapExtendctor_CMapExtend2_wrapper),
            (LPVOID)cast_pointer_function((void(CMapExtend::*)(struct CSurface**))&CMapExtend::ctor_CMapExtend) },
        {   (LPVOID)0x1401a1410L,
            (LPVOID *)&CMapExtendctor_CMapExtend4_user,
            (LPVOID *)&CMapExtendctor_CMapExtend4_next,
            (LPVOID)cast_pointer_function(CMapExtendctor_CMapExtend4_wrapper),
            (LPVOID)cast_pointer_function((void(CMapExtend::*)())&CMapExtend::ctor_CMapExtend) },
        {   (LPVOID)0x1401a1da0L,
            (LPVOID *)&CMapExtendConvertToMap6_user,
            (LPVOID *)&CMapExtendConvertToMap6_next,
            (LPVOID)cast_pointer_function(CMapExtendConvertToMap6_wrapper),
            (LPVOID)cast_pointer_function((void(CMapExtend::*)(struct CSize*))&CMapExtend::ConvertToMap) },
        {   (LPVOID)0x1401a1c40L,
            (LPVOID *)&CMapExtendDrawRect8_user,
            (LPVOID *)&CMapExtendDrawRect8_next,
            (LPVOID)cast_pointer_function(CMapExtendDrawRect8_wrapper),
            (LPVOID)cast_pointer_function((void(CMapExtend::*)())&CMapExtend::DrawRect) },
        {   (LPVOID)0x1401a1940L,
            (LPVOID *)&CMapExtendEndScreenPoint10_user,
            (LPVOID *)&CMapExtendEndScreenPoint10_next,
            (LPVOID)cast_pointer_function(CMapExtendEndScreenPoint10_wrapper),
            (LPVOID)cast_pointer_function((int(CMapExtend::*)(struct CSize*))&CMapExtend::EndScreenPoint) },
        {   (LPVOID)0x14002d0b0L,
            (LPVOID *)&CMapExtendGetExtendSize12_user,
            (LPVOID *)&CMapExtendGetExtendSize12_next,
            (LPVOID)cast_pointer_function(CMapExtendGetExtendSize12_wrapper),
            (LPVOID)cast_pointer_function((struct CSize*(CMapExtend::*)())&CMapExtend::GetExtendSize) },
        {   (LPVOID)0x1401a1640L,
            (LPVOID *)&CMapExtendInit14_user,
            (LPVOID *)&CMapExtendInit14_next,
            (LPVOID)cast_pointer_function(CMapExtendInit14_wrapper),
            (LPVOID)cast_pointer_function((void(CMapExtend::*)(struct CSurface**))&CMapExtend::Init) },
        {   (LPVOID)0x1401a1730L,
            (LPVOID *)&CMapExtendMoveScreenPoint16_user,
            (LPVOID *)&CMapExtendMoveScreenPoint16_next,
            (LPVOID)cast_pointer_function(CMapExtendMoveScreenPoint16_wrapper),
            (LPVOID)cast_pointer_function((void(CMapExtend::*)(struct CPoint*))&CMapExtend::MoveScreenPoint) },
        {   (LPVOID)0x1401a2000L,
            (LPVOID *)&CMapExtendScrollMapDown18_user,
            (LPVOID *)&CMapExtendScrollMapDown18_next,
            (LPVOID)cast_pointer_function(CMapExtendScrollMapDown18_wrapper),
            (LPVOID)cast_pointer_function((void(CMapExtend::*)(int, int))&CMapExtend::ScrollMapDown) },
        {   (LPVOID)0x1401a2120L,
            (LPVOID *)&CMapExtendScrollMapLeft20_user,
            (LPVOID *)&CMapExtendScrollMapLeft20_next,
            (LPVOID)cast_pointer_function(CMapExtendScrollMapLeft20_wrapper),
            (LPVOID)cast_pointer_function((void(CMapExtend::*)(int))&CMapExtend::ScrollMapLeft) },
        {   (LPVOID)0x1401a2220L,
            (LPVOID *)&CMapExtendScrollMapRight22_user,
            (LPVOID *)&CMapExtendScrollMapRight22_next,
            (LPVOID)cast_pointer_function(CMapExtendScrollMapRight22_wrapper),
            (LPVOID)cast_pointer_function((void(CMapExtend::*)(int, int))&CMapExtend::ScrollMapRight) },
        {   (LPVOID)0x1401a1ef0L,
            (LPVOID *)&CMapExtendScrollMapUp24_user,
            (LPVOID *)&CMapExtendScrollMapUp24_next,
            (LPVOID)cast_pointer_function(CMapExtendScrollMapUp24_wrapper),
            (LPVOID)cast_pointer_function((void(CMapExtend::*)(int))&CMapExtend::ScrollMapUp) },
        {   (LPVOID)0x1401a1670L,
            (LPVOID *)&CMapExtendStartScreenPoint26_user,
            (LPVOID *)&CMapExtendStartScreenPoint26_next,
            (LPVOID)cast_pointer_function(CMapExtendStartScreenPoint26_wrapper),
            (LPVOID)cast_pointer_function((void(CMapExtend::*)(struct CPoint*, struct CMapData*, struct CRect*))&CMapExtend::StartScreenPoint) },
        {   (LPVOID)0x1401a1600L,
            (LPVOID *)&CMapExtenddtor_CMapExtend28_user,
            (LPVOID *)&CMapExtenddtor_CMapExtend28_next,
            (LPVOID)cast_pointer_function(CMapExtenddtor_CMapExtend28_wrapper),
            (LPVOID)cast_pointer_function((void(CMapExtend::*)())&CMapExtend::dtor_CMapExtend) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
