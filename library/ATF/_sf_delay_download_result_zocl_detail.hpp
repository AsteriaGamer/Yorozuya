// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_sf_delay_download_result_zocl_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::_sf_delay_download_result_zoclctor__sf_delay_download_result_zocl2_ptr _sf_delay_download_result_zoclctor__sf_delay_download_result_zocl2_next(nullptr);
        static info::_sf_delay_download_result_zoclctor__sf_delay_download_result_zocl2_clbk _sf_delay_download_result_zoclctor__sf_delay_download_result_zocl2_user(nullptr);
        
        static info::_sf_delay_download_result_zocl___eff_listctor__eff_list2_ptr _sf_delay_download_result_zocl___eff_listctor__eff_list2_next(nullptr);
        static info::_sf_delay_download_result_zocl___eff_listctor__eff_list2_clbk _sf_delay_download_result_zocl___eff_listctor__eff_list2_user(nullptr);
        
        static info::_sf_delay_download_result_zocl___mas_listctor__mas_list2_ptr _sf_delay_download_result_zocl___mas_listctor__mas_list2_next(nullptr);
        static info::_sf_delay_download_result_zocl___mas_listctor__mas_list2_clbk _sf_delay_download_result_zocl___mas_listctor__mas_list2_user(nullptr);
        
        static void _sf_delay_download_result_zoclctor__sf_delay_download_result_zocl2_wrapper(struct _sf_delay_download_result_zocl* _this)
        {
           _sf_delay_download_result_zoclctor__sf_delay_download_result_zocl2_user(_this, _sf_delay_download_result_zoclctor__sf_delay_download_result_zocl2_next);
        };
        
        static void _sf_delay_download_result_zocl___eff_listctor__eff_list2_wrapper(struct _sf_delay_download_result_zocl::_eff_list* _this)
        {
           _sf_delay_download_result_zocl___eff_listctor__eff_list2_user(_this, _sf_delay_download_result_zocl___eff_listctor__eff_list2_next);
        };
        
        static void _sf_delay_download_result_zocl___mas_listctor__mas_list2_wrapper(struct _sf_delay_download_result_zocl::_mas_list* _this)
        {
           _sf_delay_download_result_zocl___mas_listctor__mas_list2_user(_this, _sf_delay_download_result_zocl___mas_listctor__mas_list2_next);
        };
        
        static hook_record _sf_delay_download_result_zocl_functions[] = {
        {   (LPVOID)0x1400f05d0L,
            (LPVOID *)&_sf_delay_download_result_zoclctor__sf_delay_download_result_zocl2_user,
            (LPVOID *)&_sf_delay_download_result_zoclctor__sf_delay_download_result_zocl2_next,
            (LPVOID)cast_pointer_function(_sf_delay_download_result_zoclctor__sf_delay_download_result_zocl2_wrapper),
            (LPVOID)cast_pointer_function((void(_sf_delay_download_result_zocl::*)())&_sf_delay_download_result_zocl::ctor__sf_delay_download_result_zocl) },
        
        {   (LPVOID)0x1400f0660L,
            (LPVOID *)&_sf_delay_download_result_zocl___eff_listctor__eff_list2_user,
            (LPVOID *)&_sf_delay_download_result_zocl___eff_listctor__eff_list2_next,
            (LPVOID)cast_pointer_function(_sf_delay_download_result_zocl___eff_listctor__eff_list2_wrapper),
            (LPVOID)cast_pointer_function((void(_sf_delay_download_result_zocl::_eff_list::*)())&_sf_delay_download_result_zocl::_eff_list::ctor__eff_list) },
        
        {   (LPVOID)0x1400f0680L,
            (LPVOID *)&_sf_delay_download_result_zocl___mas_listctor__mas_list2_user,
            (LPVOID *)&_sf_delay_download_result_zocl___mas_listctor__mas_list2_next,
            (LPVOID)cast_pointer_function(_sf_delay_download_result_zocl___mas_listctor__mas_list2_wrapper),
            (LPVOID)cast_pointer_function((void(_sf_delay_download_result_zocl::_mas_list::*)())&_sf_delay_download_result_zocl::_mas_list::ctor__mas_list) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
