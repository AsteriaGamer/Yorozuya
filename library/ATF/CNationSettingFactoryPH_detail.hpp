// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CNationSettingFactoryPH_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::CNationSettingFactoryPHctor_CNationSettingFactoryPH2_ptr CNationSettingFactoryPHctor_CNationSettingFactoryPH2_next(nullptr);
        info::CNationSettingFactoryPHctor_CNationSettingFactoryPH2_clbk CNationSettingFactoryPHctor_CNationSettingFactoryPH2_user(nullptr);
        info::CNationSettingFactoryPHCreate4_ptr CNationSettingFactoryPHCreate4_next(nullptr);
        info::CNationSettingFactoryPHCreate4_clbk CNationSettingFactoryPHCreate4_user(nullptr);
        
        void CNationSettingFactoryPHctor_CNationSettingFactoryPH2_wrapper(struct CNationSettingFactoryPH* _this)
        {
           CNationSettingFactoryPHctor_CNationSettingFactoryPH2_user(_this, CNationSettingFactoryPHctor_CNationSettingFactoryPH2_next);
        };
        struct CNationSettingData* CNationSettingFactoryPHCreate4_wrapper(struct CNationSettingFactoryPH* _this, int iNationCode, char* szNationCodeStr, bool bServiceMode)
        {
           return CNationSettingFactoryPHCreate4_user(_this, iNationCode, szNationCodeStr, bServiceMode, CNationSettingFactoryPHCreate4_next);
        };
        
        hook_record CNationSettingFactoryPH_functions[] = {
        {   (LPVOID)0x140219640L,
            (LPVOID *)&CNationSettingFactoryPHctor_CNationSettingFactoryPH2_user,
            (LPVOID *)&CNationSettingFactoryPHctor_CNationSettingFactoryPH2_next,
            (LPVOID)cast_pointer_function(CNationSettingFactoryPHctor_CNationSettingFactoryPH2_wrapper),
            (LPVOID)cast_pointer_function((void(CNationSettingFactoryPH::*)())&CNationSettingFactoryPH::ctor_CNationSettingFactoryPH) },
        {   (LPVOID)0x14022d890L,
            (LPVOID *)&CNationSettingFactoryPHCreate4_user,
            (LPVOID *)&CNationSettingFactoryPHCreate4_next,
            (LPVOID)cast_pointer_function(CNationSettingFactoryPHCreate4_wrapper),
            (LPVOID)cast_pointer_function((struct CNationSettingData*(CNationSettingFactoryPH::*)(int, char*, bool))&CNationSettingFactoryPH::Create) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
