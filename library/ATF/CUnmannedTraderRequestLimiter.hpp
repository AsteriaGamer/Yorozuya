// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CRaceBuffByHolyQuestProcedure.hpp"

START_ATF_NAMESPACE
    struct CUnmannedTraderRequestLimiter
    {
		typedef CRaceBuffByHolyQuestProcedure::REQUEST_TYPE REQUEST_TYPE;
        REQUEST_TYPE m_eState;
    public:
        CUnmannedTraderRequestLimiter()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderRequestLimiter*);
            (org_ptr(0x14035f1f0L))(this);
        };
        void ctor_CUnmannedTraderRequestLimiter()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderRequestLimiter*);
            (org_ptr(0x14035f1f0L))(this);
        };
        void ClearRequset()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderRequestLimiter*);
            (org_ptr(0x14035f6a0L))(this);
        };
        bool IsEmpty()
        {
            using org_ptr = bool (WINAPIV*)(struct CUnmannedTraderRequestLimiter*);
            return (org_ptr(0x140360550L))(this);
        };
        void SetRequest(int iRequest)
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderRequestLimiter*, int);
            (org_ptr(0x14035f6c0L))(this, iRequest);
        };
        ~CUnmannedTraderRequestLimiter()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderRequestLimiter*);
            (org_ptr(0x14035f210L))(this);
        };
        void dtor_CUnmannedTraderRequestLimiter()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderRequestLimiter*);
            (org_ptr(0x14035f210L))(this);
        };
    };
END_ATF_NAMESPACE
