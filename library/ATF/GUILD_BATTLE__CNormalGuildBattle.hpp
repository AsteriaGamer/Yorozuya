// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CGuild.hpp"
#include "CPlayer.hpp"
#include "GUILD_BATTLE__CGuildBattle.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleField.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleGuild.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleGuildMember.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleLogger.hpp"
#include "GUILD_BATTLE__CNormalGuildBattleStateList.hpp"
#include "_guild_battle_current_battle_info_result_zocl.hpp"
#include "_qry_case_guild_battel_result_log.hpp"


START_ATF_NAMESPACE
    namespace GUILD_BATTLE
    {
        struct  CNormalGuildBattle : CGuildBattle
        {
            unsigned int m_dwID;
            bool m_bInit;
            CNormalGuildBattleLogger m_kLogger;
            char m_byGuildBattleNumber;
            CNormalGuildBattleGuild m_k1P;
            CNormalGuildBattleGuild m_k2P;
            CNormalGuildBattleField *m_pkField;
            char m_byWinResult;
            CNormalGuildBattleGuild *m_pkWin;
            CNormalGuildBattleGuild *m_pkLose;
            CNormalGuildBattleGuild *m_pkRed;
            CNormalGuildBattleGuild *m_pkBlue;
            CNormalGuildBattleStateList *m_pkStateList;
        public:
            void AddComplete(char byRet)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*, char);
                (org_ptr(0x1403e3910L))(this, byRet);
            };
            void AskJoin(int n, unsigned int dwGuildSerial, unsigned int dwCharacSerial)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*, int, unsigned int, unsigned int);
                (org_ptr(0x1403e3f40L))(this, n, dwGuildSerial, dwCharacSerial);
            };
            void AskJoin()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e49e0L))(this);
            };
            CNormalGuildBattle(unsigned int dwID)
				: m_k1P(0), m_k2P(1)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*, unsigned int);
                (org_ptr(0x1403e2e40L))(this, dwID);
            };
            void ctor_CNormalGuildBattle(unsigned int dwID)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*, unsigned int);
                (org_ptr(0x1403e2e40L))(this, dwID);
            };
            void CleanUpBattle()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e6fe0L))(this);
            };
            void Clear()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e3660L))(this);
            };
            bool ClearDBRecord()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x1403e3740L))(this);
            };
            void CreateLogFile()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e7040L))(this);
            };
            bool CreateLogger()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x1403d9020L))(this);
            };
            void DecideColorInx()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e3e20L))(this);
            };
            char DecideWin()
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x1403e76f0L))(this);
            };
            void DividePvpPoint()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e6490L))(this);
            };
            char DropGravityStone(unsigned int dwCharacSerial)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattle*, unsigned int);
                return (org_ptr(0x1403e5830L))(this, dwCharacSerial);
            };
            struct CNormalGuildBattleGuild* Get1P()
            {
                using org_ptr = struct CNormalGuildBattleGuild* (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x1403d9360L))(this);
            };
            struct CNormalGuildBattleGuild* Get2P()
            {
                using org_ptr = struct CNormalGuildBattleGuild* (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x1403d9380L))(this);
            };
            struct CNormalGuildBattleGuild* GetBlue()
            {
                using org_ptr = struct CNormalGuildBattleGuild* (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x1403f30e0L))(this);
            };
            struct CNormalGuildBattleField* GetField()
            {
                using org_ptr = struct CNormalGuildBattleField* (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x1400a6a80L))(this);
            };
            char GetGravityStone(uint16_t wIndex, unsigned int dwObjSerial, unsigned int dwCharacSerial)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattle*, uint16_t, unsigned int, unsigned int);
                return (org_ptr(0x1403e4b80L))(this, wIndex, dwObjSerial, dwCharacSerial);
            };
            struct CNormalGuildBattleGuild* GetGuild(unsigned int dwGuildSerial)
            {
                using org_ptr = struct CNormalGuildBattleGuild* (WINAPIV*)(struct CNormalGuildBattle*, unsigned int);
                return (org_ptr(0x1403e3ab0L))(this, dwGuildSerial);
            };
            char GetGuildBattleNumber()
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x1403d93a0L))(this);
            };
            unsigned int GetID()
            {
                using org_ptr = unsigned int (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x1403d9340L))(this);
            };
            bool GetInfo(struct _guild_battle_current_battle_info_result_zocl* kInfo)
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattle*, struct _guild_battle_current_battle_info_result_zocl*);
                return (org_ptr(0x1403e39a0L))(this, kInfo);
            };
            struct CNormalGuildBattleLogger* GetLogger()
            {
                using org_ptr = struct CNormalGuildBattleLogger* (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x1403f3100L))(this);
            };
            int GetObjType()
            {
                using org_ptr = int (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x1403eb090L))(this);
            };
            struct CNormalGuildBattleGuild* GetRed()
            {
                using org_ptr = struct CNormalGuildBattleGuild* (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x1403f30c0L))(this);
            };
            char Goal(unsigned int dwCharacSerial, int iPortalInx)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattle*, unsigned int, int);
                return (org_ptr(0x1403e4ca0L))(this, dwCharacSerial, iPortalInx);
            };
            void GuildBattleResultLog()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e6e10L))(this);
            };
            void GuildBattleResultLogNotifyWeb(struct _qry_case_guild_battel_result_log* Sheet)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*, struct _qry_case_guild_battel_result_log*);
                (org_ptr(0x1403e83e0L))(this, Sheet);
            };
            void GuildBattleResultLogPushDBLog(struct _qry_case_guild_battel_result_log* Sheet, struct CNormalGuildBattleGuildMember* pkTopGoalMember, struct CNormalGuildBattleGuildMember* pkTopKillMember)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*, struct _qry_case_guild_battel_result_log*, struct CNormalGuildBattleGuildMember*, struct CNormalGuildBattleGuildMember*);
                (org_ptr(0x1403e7d30L))(this, Sheet, pkTopGoalMember, pkTopKillMember);
            };
            void Init(struct CGuild* pk1P, struct CGuild* pk2P, struct CNormalGuildBattleField* pkField, char byNumber, struct CNormalGuildBattleStateList* pkStateList)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*, struct CGuild*, struct CGuild*, struct CNormalGuildBattleField*, char, struct CNormalGuildBattleStateList*);
                (org_ptr(0x1403e30d0L))(this, pk1P, pk2P, pkField, byNumber, pkStateList);
            };
            bool Init(bool bToday, unsigned int uiDayID, unsigned int dwID, unsigned int dwP1GuildSerial, unsigned int dwP2GuildSerial, unsigned int dwMapID, char byNumber)
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattle*, bool, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, char);
                return (org_ptr(0x1403e3180L))(this, bToday, uiDayID, dwID, dwP1GuildSerial, dwP2GuildSerial, dwMapID, byNumber);
            };
            bool IsEmpty()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x1403d9630L))(this);
            };
            bool IsInBattle()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x14007c0a0L))(this);
            };
            bool IsInBattleRegenState()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x1403d94b0L))(this);
            };
            bool IsMemberGuild(unsigned int dwGuildSerial)
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattle*, unsigned int);
                return (org_ptr(0x1403d9690L))(this, dwGuildSerial);
            };
            bool IsProc()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x1403d9200L))(this);
            };
            int IsReStart(unsigned int dwGuildSerial, unsigned int dwCharacSerial)
            {
                using org_ptr = int (WINAPIV*)(struct CNormalGuildBattle*, unsigned int, unsigned int);
                return (org_ptr(0x1403e41a0L))(this, dwGuildSerial, dwCharacSerial);
            };
            bool IsReadyOrCountState()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x14007bfd0L))(this);
            };
            int Join(unsigned int dwGuildSerial, unsigned int dwCharacSerial)
            {
                using org_ptr = int (WINAPIV*)(struct CNormalGuildBattle*, unsigned int, unsigned int);
                return (org_ptr(0x1403e3b90L))(this, dwGuildSerial, dwCharacSerial);
            };
            char JudgeBattle()
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x1403e6400L))(this);
            };
            int Kill(unsigned int dwSrcCharacSerial, unsigned int dwDestCharacSerial)
            {
                using org_ptr = int (WINAPIV*)(struct CNormalGuildBattle*, unsigned int, unsigned int);
                return (org_ptr(0x1403e5c30L))(this, dwSrcCharacSerial, dwDestCharacSerial);
            };
            char LeaveGuild(struct CPlayer* pkPlayer)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattle*, struct CPlayer*);
                return (org_ptr(0x1403e6070L))(this, pkPlayer);
            };
            void LogIn(int n, unsigned int dwGuildSerial, unsigned int dwCharacSerial)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*, int, unsigned int, unsigned int);
                (org_ptr(0x1403e4050L))(this, n, dwGuildSerial, dwCharacSerial);
            };
            char NetClose(unsigned int dwCharacSerial, struct CPlayer* pkPlayer)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattle*, unsigned int, struct CPlayer*);
                return (org_ptr(0x1403e5940L))(this, dwCharacSerial, pkPlayer);
            };
            void NotifyAllProcessEnd()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e57a0L))(this);
            };
            void NotifyBallPosition()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e53e0L))(this);
            };
            void NotifyBattleResult(char byResult)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*, char);
                (org_ptr(0x1403e6a90L))(this, byResult);
            };
            void NotifyBeforeStart()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e50e0L))(this);
            };
            void NotifyCommitteeMemberPosition(unsigned int dwGuildSerial, unsigned int dwChracSerial)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*, unsigned int, unsigned int);
                (org_ptr(0x1403e55b0L))(this, dwGuildSerial, dwChracSerial);
            };
            void NotifyDestoryBall(unsigned int dwOwnerSerial)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*, unsigned int);
                (org_ptr(0x1403e5510L))(this, dwOwnerSerial);
            };
            void NotifyPassGravityStoneLimitTime()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e5700L))(this);
            };
            void Process()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403d92f0L))(this);
            };
            void PushDQSDrawRank()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e7b70L))(this);
            };
            void PushDQSWinLoseRank()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e7c40L))(this);
            };
            char ReStart(struct CPlayer* pkPlayer, unsigned int dwGuildSerial, unsigned int dwCharacSerial)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattle*, struct CPlayer*, unsigned int, unsigned int);
                return (org_ptr(0x1403e42a0L))(this, pkPlayer, dwGuildSerial, dwCharacSerial);
            };
            void RewardGuildBattleMoney()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e6840L))(this);
            };
            void RewardItem()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e6960L))(this);
            };
            bool Save()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x1403e37c0L))(this);
            };
            void SendDrawResult()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e78e0L))(this);
            };
            void SendGoalMsg(bool b1P, char* wszGuildName, struct CPlayer* pkPlayer, int iPortalInx)
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*, bool, char*, struct CPlayer*, int);
                (org_ptr(0x1403e71c0L))(this, b1P, wszGuildName, pkPlayer, iPortalInx);
            };
            void SendKillInform()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e7590L))(this);
            };
            void SendWebAddScheduleInfo()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e8690L))(this);
            };
            void SendWebBattleEndInfo()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e6d50L))(this);
            };
            void SendWebBattleStartInfo()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e6c90L))(this);
            };
            void SendWinLoseResult()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e79f0L))(this);
            };
            bool SetGotoRegenStart()
            {
                using org_ptr = bool (WINAPIV*)(struct CNormalGuildBattle*);
                return (org_ptr(0x1403f3240L))(this);
            };
            void SetReadyState()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e3b30L))(this);
            };
            char Start(struct CPlayer* pkPlayer, unsigned int dwGuildSerial, unsigned int dwCharacSerial)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattle*, struct CPlayer*, unsigned int, unsigned int);
                return (org_ptr(0x1403e4640L))(this, pkPlayer, dwGuildSerial, dwCharacSerial);
            };
            char TakeGravityStone(int iPortalInx, unsigned int dwCharacSerial)
            {
                using org_ptr = char (WINAPIV*)(struct CNormalGuildBattle*, int, unsigned int);
                return (org_ptr(0x1403e4a60L))(this, iPortalInx, dwCharacSerial);
            };
            ~CNormalGuildBattle()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e2fb0L))(this);
            };
            void dtor_CNormalGuildBattle()
            {
                using org_ptr = void (WINAPIV*)(struct CNormalGuildBattle*);
                (org_ptr(0x1403e2fb0L))(this);
            };
        };
    }; // end namespace GUILD_BATTLE
END_ATF_NAMESPACE
