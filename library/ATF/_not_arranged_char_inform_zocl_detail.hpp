// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_not_arranged_char_inform_zocl_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::_not_arranged_char_inform_zoclctor__not_arranged_char_inform_zocl2_ptr _not_arranged_char_inform_zoclctor__not_arranged_char_inform_zocl2_next(nullptr);
        info::_not_arranged_char_inform_zoclctor__not_arranged_char_inform_zocl2_clbk _not_arranged_char_inform_zoclctor__not_arranged_char_inform_zocl2_user(nullptr);
        info::_not_arranged_char_inform_zoclsize4_ptr _not_arranged_char_inform_zoclsize4_next(nullptr);
        info::_not_arranged_char_inform_zoclsize4_clbk _not_arranged_char_inform_zoclsize4_user(nullptr);
        
        void _not_arranged_char_inform_zoclctor__not_arranged_char_inform_zocl2_wrapper(struct _not_arranged_char_inform_zocl* _this)
        {
           _not_arranged_char_inform_zoclctor__not_arranged_char_inform_zocl2_user(_this, _not_arranged_char_inform_zoclctor__not_arranged_char_inform_zocl2_next);
        };
        int _not_arranged_char_inform_zoclsize4_wrapper(struct _not_arranged_char_inform_zocl* _this)
        {
           return _not_arranged_char_inform_zoclsize4_user(_this, _not_arranged_char_inform_zoclsize4_next);
        };
        
        hook_record _not_arranged_char_inform_zocl_functions[] = {
        {   (LPVOID)0x14011f750L,
            (LPVOID *)&_not_arranged_char_inform_zoclctor__not_arranged_char_inform_zocl2_user,
            (LPVOID *)&_not_arranged_char_inform_zoclctor__not_arranged_char_inform_zocl2_next,
            (LPVOID)cast_pointer_function(_not_arranged_char_inform_zoclctor__not_arranged_char_inform_zocl2_wrapper),
            (LPVOID)cast_pointer_function((void(_not_arranged_char_inform_zocl::*)())&_not_arranged_char_inform_zocl::ctor__not_arranged_char_inform_zocl) },
        {   (LPVOID)0x14011f7c0L,
            (LPVOID *)&_not_arranged_char_inform_zoclsize4_user,
            (LPVOID *)&_not_arranged_char_inform_zoclsize4_next,
            (LPVOID)cast_pointer_function(_not_arranged_char_inform_zoclsize4_wrapper),
            (LPVOID)cast_pointer_function((int(_not_arranged_char_inform_zocl::*)())&_not_arranged_char_inform_zocl::size) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
