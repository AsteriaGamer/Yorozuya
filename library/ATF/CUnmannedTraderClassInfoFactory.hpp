// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CUnmannedTraderClassInfo.hpp"
#include "std__vector.hpp"


START_ATF_NAMESPACE
    struct CUnmannedTraderClassInfoFactory
    {
        std::vector<CUnmannedTraderClassInfo *,std::allocator<CUnmannedTraderClassInfo *> > m_vecTable;
    public:
        CUnmannedTraderClassInfoFactory()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderClassInfoFactory*);
            (org_ptr(0x1403847e0L))(this);
        };
        void ctor_CUnmannedTraderClassInfoFactory()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderClassInfoFactory*);
            (org_ptr(0x1403847e0L))(this);
        };
        struct CUnmannedTraderClassInfo* Create(char* szType, unsigned int dwID)
        {
            using org_ptr = struct CUnmannedTraderClassInfo* (WINAPIV*)(struct CUnmannedTraderClassInfoFactory*, char*, unsigned int);
            return (org_ptr(0x140384c10L))(this, szType, dwID);
        };
        void Destroy()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderClassInfoFactory*);
            (org_ptr(0x140384e00L))(this);
        };
        bool Regist(struct CUnmannedTraderClassInfo* pkType)
        {
            using org_ptr = bool (WINAPIV*)(struct CUnmannedTraderClassInfoFactory*, struct CUnmannedTraderClassInfo*);
            return (org_ptr(0x1403849e0L))(this, pkType);
        };
        ~CUnmannedTraderClassInfoFactory()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderClassInfoFactory*);
            (org_ptr(0x140384960L))(this);
        };
        void dtor_CUnmannedTraderClassInfoFactory()
        {
            using org_ptr = void (WINAPIV*)(struct CUnmannedTraderClassInfoFactory*);
            (org_ptr(0x140384960L))(this);
        };
    };
END_ATF_NAMESPACE
