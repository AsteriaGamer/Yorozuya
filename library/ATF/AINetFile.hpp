// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "AINetFileVtbl.hpp"


START_ATF_NAMESPACE
    #pragma pack(push, 8)
    struct AINetFile
    {
        AINetFileVtbl *vfptr;
        void *m_hFile;
        unsigned int m_dwAccess;
    public:
        AINetFile(void* hFile, unsigned int dwAccess)
        {
            using org_ptr = void (WINAPIV*)(struct AINetFile*, void*, unsigned int);
            (org_ptr(0x140432380L))(this, hFile, dwAccess);
        };
        void ctor_AINetFile(void* hFile, unsigned int dwAccess)
        {
            using org_ptr = void (WINAPIV*)(struct AINetFile*, void*, unsigned int);
            (org_ptr(0x140432380L))(this, hFile, dwAccess);
        };
        void Close()
        {
            using org_ptr = void (WINAPIV*)(struct AINetFile*);
            (org_ptr(0x140432600L))(this);
        };
        unsigned int Read(void* lpBuf, unsigned int nCount)
        {
            using org_ptr = unsigned int (WINAPIV*)(struct AINetFile*, void*, unsigned int);
            return (org_ptr(0x140432420L))(this, lpBuf, nCount);
        };
        unsigned int Write(void* lpBuf, unsigned int nCount)
        {
            using org_ptr = unsigned int (WINAPIV*)(struct AINetFile*, void*, unsigned int);
            return (org_ptr(0x1404324a0L))(this, lpBuf, nCount);
        };
        int WriteString(char* str)
        {
            using org_ptr = int (WINAPIV*)(struct AINetFile*, char*);
            return (org_ptr(0x140432520L))(this, str);
        };
        ~AINetFile()
        {
            using org_ptr = void (WINAPIV*)(struct AINetFile*);
            (org_ptr(0x1404323d0L))(this);
        };
        void dtor_AINetFile()
        {
            using org_ptr = void (WINAPIV*)(struct AINetFile*);
            (org_ptr(0x1404323d0L))(this);
        };
    };
    #pragma pack(pop)
END_ATF_NAMESPACE
