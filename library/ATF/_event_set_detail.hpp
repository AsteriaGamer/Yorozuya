// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "_event_set_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::_event_setctor__event_set2_ptr _event_setctor__event_set2_next(nullptr);
        info::_event_setctor__event_set2_clbk _event_setctor__event_set2_user(nullptr);
        info::_event_setinit4_ptr _event_setinit4_next(nullptr);
        info::_event_setinit4_clbk _event_setinit4_user(nullptr);
        
        info::_event_set___monster_setctor__monster_set2_ptr _event_set___monster_setctor__monster_set2_next(nullptr);
        info::_event_set___monster_setctor__monster_set2_clbk _event_set___monster_setctor__monster_set2_user(nullptr);
        
        info::_event_set___monster_set___statector__state2_ptr _event_set___monster_set___statector__state2_next(nullptr);
        info::_event_set___monster_set___statector__state2_clbk _event_set___monster_set___statector__state2_user(nullptr);
        info::_event_set___monster_set___stateinit4_ptr _event_set___monster_set___stateinit4_next(nullptr);
        info::_event_set___monster_set___stateinit4_clbk _event_set___monster_set___stateinit4_user(nullptr);
        
        void _event_setctor__event_set2_wrapper(struct _event_set* _this)
        {
           _event_setctor__event_set2_user(_this, _event_setctor__event_set2_next);
        };
        void _event_setinit4_wrapper(struct _event_set* _this)
        {
           _event_setinit4_user(_this, _event_setinit4_next);
        };
        
        void _event_set___monster_setctor__monster_set2_wrapper(struct _event_set::_monster_set* _this)
        {
           _event_set___monster_setctor__monster_set2_user(_this, _event_set___monster_setctor__monster_set2_next);
        };
        
        void _event_set___monster_set___statector__state2_wrapper(struct _event_set::_monster_set::_state* _this)
        {
           _event_set___monster_set___statector__state2_user(_this, _event_set___monster_set___statector__state2_next);
        };
        void _event_set___monster_set___stateinit4_wrapper(struct _event_set::_monster_set::_state* _this)
        {
           _event_set___monster_set___stateinit4_user(_this, _event_set___monster_set___stateinit4_next);
        };
        
        hook_record _event_set_functions[] = {
        {   (LPVOID)0x1402a9db0L,
            (LPVOID *)&_event_setctor__event_set2_user,
            (LPVOID *)&_event_setctor__event_set2_next,
            (LPVOID)cast_pointer_function(_event_setctor__event_set2_wrapper),
            (LPVOID)cast_pointer_function((void(_event_set::*)())&_event_set::ctor__event_set) },
        {   (LPVOID)0x1402a9e30L,
            (LPVOID *)&_event_setinit4_user,
            (LPVOID *)&_event_setinit4_next,
            (LPVOID)cast_pointer_function(_event_setinit4_wrapper),
            (LPVOID)cast_pointer_function((void(_event_set::*)())&_event_set::init) },
        
        {   (LPVOID)0x1402a9e80L,
            (LPVOID *)&_event_set___monster_setctor__monster_set2_user,
            (LPVOID *)&_event_set___monster_setctor__monster_set2_next,
            (LPVOID)cast_pointer_function(_event_set___monster_setctor__monster_set2_wrapper),
            (LPVOID)cast_pointer_function((void(_event_set::_monster_set::*)())&_event_set::_monster_set::ctor__monster_set) },
        
        {   (LPVOID)0x1402a9ed0L,
            (LPVOID *)&_event_set___monster_set___statector__state2_user,
            (LPVOID *)&_event_set___monster_set___statector__state2_next,
            (LPVOID)cast_pointer_function(_event_set___monster_set___statector__state2_wrapper),
            (LPVOID)cast_pointer_function((void(_event_set::_monster_set::_state::*)())&_event_set::_monster_set::_state::ctor__state) },
        {   (LPVOID)0x1402a9f20L,
            (LPVOID *)&_event_set___monster_set___stateinit4_user,
            (LPVOID *)&_event_set___monster_set___stateinit4_next,
            (LPVOID)cast_pointer_function(_event_set___monster_set___stateinit4_wrapper),
            (LPVOID)cast_pointer_function((void(_event_set::_monster_set::_state::*)())&_event_set::_monster_set::_state::init) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
