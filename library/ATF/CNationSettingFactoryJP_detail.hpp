// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CNationSettingFactoryJP_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        info::CNationSettingFactoryJPctor_CNationSettingFactoryJP2_ptr CNationSettingFactoryJPctor_CNationSettingFactoryJP2_next(nullptr);
        info::CNationSettingFactoryJPctor_CNationSettingFactoryJP2_clbk CNationSettingFactoryJPctor_CNationSettingFactoryJP2_user(nullptr);
        info::CNationSettingFactoryJPCreate4_ptr CNationSettingFactoryJPCreate4_next(nullptr);
        info::CNationSettingFactoryJPCreate4_clbk CNationSettingFactoryJPCreate4_user(nullptr);
        
        void CNationSettingFactoryJPctor_CNationSettingFactoryJP2_wrapper(struct CNationSettingFactoryJP* _this)
        {
           CNationSettingFactoryJPctor_CNationSettingFactoryJP2_user(_this, CNationSettingFactoryJPctor_CNationSettingFactoryJP2_next);
        };
        struct CNationSettingData* CNationSettingFactoryJPCreate4_wrapper(struct CNationSettingFactoryJP* _this, int iNationCode, char* szNationCodeStr, bool bServiceMode)
        {
           return CNationSettingFactoryJPCreate4_user(_this, iNationCode, szNationCodeStr, bServiceMode, CNationSettingFactoryJPCreate4_next);
        };
        
        hook_record CNationSettingFactoryJP_functions[] = {
        {   (LPVOID)0x1402195e0L,
            (LPVOID *)&CNationSettingFactoryJPctor_CNationSettingFactoryJP2_user,
            (LPVOID *)&CNationSettingFactoryJPctor_CNationSettingFactoryJP2_next,
            (LPVOID)cast_pointer_function(CNationSettingFactoryJPctor_CNationSettingFactoryJP2_wrapper),
            (LPVOID)cast_pointer_function((void(CNationSettingFactoryJP::*)())&CNationSettingFactoryJP::ctor_CNationSettingFactoryJP) },
        {   (LPVOID)0x14022cf00L,
            (LPVOID *)&CNationSettingFactoryJPCreate4_user,
            (LPVOID *)&CNationSettingFactoryJPCreate4_next,
            (LPVOID)cast_pointer_function(CNationSettingFactoryJPCreate4_wrapper),
            (LPVOID)cast_pointer_function((struct CNationSettingData*(CNationSettingFactoryJP::*)(int, char*, bool))&CNationSettingFactoryJP::Create) },
        
        };
        
    }; // end namespace detail
END_ATF_NAMESPACE
