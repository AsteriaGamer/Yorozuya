// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include "./common/common.h"
#include "CBillingBR_info.hpp"


START_ATF_NAMESPACE
    namespace detail
    {
        static info::CBillingBRctor_CBillingBR2_ptr CBillingBRctor_CBillingBR2_next(nullptr);
        static info::CBillingBRctor_CBillingBR2_clbk CBillingBRctor_CBillingBR2_user(nullptr);
        static info::CBillingBRdtor_CBillingBR7_ptr CBillingBRdtor_CBillingBR7_next(nullptr);
        static info::CBillingBRdtor_CBillingBR7_clbk CBillingBRdtor_CBillingBR7_user(nullptr);
        
        static void CBillingBRctor_CBillingBR2_wrapper(struct CBillingBR* _this)
        {
           CBillingBRctor_CBillingBR2_user(_this, CBillingBRctor_CBillingBR2_next);
        };
        static void CBillingBRdtor_CBillingBR7_wrapper(struct CBillingBR* _this)
        {
           CBillingBRdtor_CBillingBR7_user(_this, CBillingBRdtor_CBillingBR7_next);
        };
        
        static hook_record CBillingBR_functions[] = {
        {   (LPVOID)0x14022f3c0L,
            (LPVOID *)&CBillingBRctor_CBillingBR2_user,
            (LPVOID *)&CBillingBRctor_CBillingBR2_next,
            (LPVOID)cast_pointer_function(CBillingBRctor_CBillingBR2_wrapper),
            (LPVOID)cast_pointer_function((void(CBillingBR::*)())&CBillingBR::ctor_CBillingBR) },
        {   (LPVOID)0x14022f490L,
            (LPVOID *)&CBillingBRdtor_CBillingBR7_user,
            (LPVOID *)&CBillingBRdtor_CBillingBR7_next,
            (LPVOID)cast_pointer_function(CBillingBRdtor_CBillingBR7_wrapper),
            (LPVOID)cast_pointer_function((void(CBillingBR::*)())&CBillingBR::dtor_CBillingBR) },
        
        };
        
    }; // static end namespace detail
END_ATF_NAMESPACE
